{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v4.json", "dbt_version": "1.0.8", "generated_at": "2022-10-06T00:00:16.356276Z", "invocation_id": "50143298-58fb-4fa1-8b94-ff333d7c924e", "env": {}, "project_id": "da56b05026bc353b26537aae34f2e219", "user_id": "752fefba-2120-4072-8573-047ce16d08c2", "send_anonymous_usage_stats": true, "adapter_type": "postgres"}, "nodes": {"model.acton_marketing_data.sal_source_ss_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    lead_id,\r\n    email,\r\n    lead_source,\r\n    is_converted,\r\n    is_hand_raiser,\r\n    working_date,\r\n    mql_most_recent_date,\r\n    lead_status,\r\n    country,\r\n    global_region\r\nFROM {{ref('lead_source_ss_xf')}}\r\nWHERE lead_owner != '00Ga0000003Nugr'\r\nAND working_date IS NOT null\r\nAND email NOT LIKE '%act-on.com'\r\nAND lead_source = 'Marketing'\r\nAND lead_status = 'Working'\r\n--AND lead_status  NOT IN ('Current Customer','Partner','Bad Data','No Fit')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.lead_source_ss_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "sal_source_ss_xf"], "unique_id": "model.acton_marketing_data.sal_source_ss_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sal_source_ss_xf.sql", "original_file_path": "models/sal_source_ss_xf.sql", "name": "sal_source_ss_xf", "alias": "sal_source_ss_xf", "checksum": {"name": "sha256", "checksum": "d9055d1ee100899f0e669b39a300eecfbed8f5650a00df5c5da14a028216005f"}, "tags": [], "refs": [["lead_source_ss_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.1393807}, "model.acton_marketing_data.sql_source_ss_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    opportunity_id AS sql_id,\r\n    opportunity_name,\r\n    opp_source_xf.is_closed,\r\n    opp_source_xf.is_won,\r\n    created_date,\r\n    stage_name,\r\n    opp_lead_source,\r\n    opp_channel_opportunity_creation, \r\n    opp_medium_opportunity_creation,\r\n    opp_source_opportunity_creation, \r\n    opp_channel_lead_creation,\r\n    opp_medium_lead_creation,\r\n    opp_source_lead_creation,\r\n    type,\r\n    billing_country AS country,\r\n    opp_source_xf.company_size_rev,\r\n    account_global_region\r\nFROM {{ref('opp_source_xf')}}\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nWHERE created_date IS NOT null\r\n--AND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed')\r\nAND stage_name = 'SQL'", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "sql_source_ss_xf"], "unique_id": "model.acton_marketing_data.sql_source_ss_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sql_source_ss_xf.sql", "original_file_path": "models/sql_source_ss_xf.sql", "name": "sql_source_ss_xf", "alias": "sql_source_ss_xf", "checksum": {"name": "sha256", "checksum": "99da8244b85479598375dd19a62aa94ae619381b412cf18939de13339a4dbda0"}, "tags": [], "refs": [["opp_source_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.1514533}, "model.acton_marketing_data.opp_closing_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    opportunity_id,\r\n    opportunity_name,\r\n    user_name AS owner_name,\r\n    opp_source_xf.account_name,\r\n    owner_id,\r\n    opp_source_xf.is_closed,\r\n    opp_source_xf.is_won,\r\n    closing_date,\r\n    stage_name,\r\n    opp_lead_source,\r\n    CASE \r\n        WHEN type in ('New Business') THEN 'New Business'\r\n        WHEN type in ('UpSell','Non-Monetary Mod','Admin Opp','Trigger Up','Trigger Down','Trigger Renewal','Renewal','Multiyear Renewal','Admin Conversion','One Time','Downsell') THEN 'Upsell'\r\n        ELSE null\r\n    END AS grouped_type,\r\n    opp_channel_opportunity_creation, \r\n    opp_channel_lead_creation,\r\n    opp_medium_opportunity_creation,\r\n    opp_medium_lead_creation,\r\n    opp_source_opportunity_creation, \r\n    opp_source_lead_creation,\r\n    type,\r\n    acv_deal_size_usd AS acv,\r\n    billing_country AS country,\r\n    account_global_region,\r\n    opp_source_xf.company_size_rev,\r\n    opp_source_xf.segment,\r\n    opp_source_xf.industry,\r\n    opp_source_xf.industry_bucket,\r\n    opp_source_xf.channel_bucket,\r\n    opp_source_xf.opp_offer_asset_name_lead_creation\r\nFROM {{ref('opp_source_xf')}}\r\nLEFT JOIN {{ref('user_source_xf')}} ON\r\nopp_source_xf.owner_id=user_source_xf.user_id\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nWHERE closing_date IS NOT null\r\nAND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed','SQL','Discovery','Demo','VOC/Negotiate','Implement')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "opp_closing_source_xf"], "unique_id": "model.acton_marketing_data.opp_closing_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "opp_closing_source_xf.sql", "original_file_path": "models/opp_closing_source_xf.sql", "name": "opp_closing_source_xf", "alias": "opp_closing_source_xf", "checksum": {"name": "sha256", "checksum": "0354ae58abdb43172e24994d49ea5ea3d6925d6436ddc374b17d4030a1330e0a"}, "tags": [], "refs": [["opp_source_xf"], ["user_source_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.1538174}, "model.acton_marketing_data.account_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\nWITH base AS (\r\n\r\nSELECT *\r\nFROM {{ source('salesforce', 'account') }}\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        base.id AS account_id,\r\n        base.is_deleted,\r\n        base.name AS account_name,\r\n        base.type AS account_type,\r\n        base.parent_id AS account_parent_id,\r\n        base.billing_state,\r\n        base.billing_postal_code,\r\n        base.billing_country,\r\n        base.industry,\r\n        CASE\r\n            WHEN base.industry IN ('Business Services') THEN 'Business Services'\r\n            WHEN base.industry IN ('Finance','Insurance') THEN 'Finance'\r\n            WHEN base.industry IN ('Manufacturing') THEN 'Manufacturing'\r\n            WHEN base.industry IN ('Software','Telecommunications') THEN 'SoftCom'\r\n            ELSE 'Other'\r\n        END AS default_industry_bucket,\r\n        base.annual_revenue,\r\n        base.number_of_employees,\r\n        base.owner_id AS account_owner_id,\r\n        base.created_date AS account_created_date,\r\n        base.last_modified_date,\r\n        base.system_modstamp AS systemmodstamp,\r\n        base.is_partner,\r\n        base.current_customer_c AS is_current_customer,\r\n        base.csm_c AS account_csm_c,\r\n        base.current_crm_c AS current_crm,\r\n        base.current_marketing_automation_c AS current_ma,\r\n        base.de_country_c AS de_country,\r\n        base.de_current_crm_c AS de_current_crm,\r\n        base.de_current_marketing_automation_c AS de_current_ma,\r\n        base.de_industry_c AS de_industry,\r\n        CASE\r\n            WHEN base.de_industry_c IN ('Business Services') THEN 'Business Services'\r\n            WHEN base.de_industry_c IN ('Finance','Insurance') THEN 'Finance'\r\n            WHEN base.de_industry_c IN ('Manufacturing') THEN 'Manufacturing'\r\n            WHEN base.de_industry_c IN ('Software','Telecommunications') THEN 'SoftCom'\r\n            ELSE 'Other'\r\n        END AS industry_bucket,\r\n        base.de_parent_company_c AS de_account_parent_name,\r\n        base.de_ultimate_parent_company_c AS de_ultimate_parent_account_name,\r\n        base.ao_instance_number_c AS ao_instance_number,\r\n        base.do_not_market_c AS do_not_market,\r\n        base.target_account_c AS target_account,\r\n        base.market_segment_static_c AS market_segment_static,\r\n        base.sdr_c AS sdr,\r\n        base.current_contract_c AS current_contract,\r\n        base.onboarding_completion_date_c AS onboarding_completion_date,\r\n        base.customer_since_c AS customer_since,\r\n        base.onboarding_specialist_c AS onboarding_specialist,\r\n        base.executive_sponsor_c AS executive_sponsor,\r\n        base.assigned_account_tier_c AS assigned_account_tier,\r\n        base.business_model_c AS business_model,\r\n        base.contract_type_c AS contract_type,\r\n        base.delivered_support_tier_c AS delivered_support_tier,\r\n        parent.name AS account_parent_name,\r\n        base.deliverability_consultant_c AS deliverability_consultant_id,\r\n        sdr.user_email AS sdr_email,\r\n        sdr.user_first_name AS sdr_first_name,\r\n        sdr.user_full_name AS sdr_full_name,\r\n        sdr.user_photo AS sdr_photo,\r\n        sdr.calendly_link AS sdr_calendly,\r\n        sdr.user_title AS sdr_title,\r\n        sdr.user_phone AS sdr_phone,\r\n        csm.user_email AS account_csm_email,\r\n        csm.user_photo AS account_csm_photo,\r\n        csm.user_id AS csm_id,\r\n        csm.user_full_name AS account_csm_name,\r\n        account_owner.user_full_name AS account_owner_name,\r\n        account_owner.user_email AS account_owner_email,\r\n        account_owner.calendly_link AS account_owner_calendly,\r\n        account_owner.user_photo AS account_owner_photo,\r\n        onboarding.user_photo AS onboarding_specialist_photo,\r\n        onboarding.user_email AS onboarding_specialist_email,\r\n        onboarding.user_full_name AS onboarding_specialist_name,\r\n        deliverability.user_email AS account_deliverability_consultant_email,\r\n        deliverability.user_full_name AS account_deliverability_consultant,\r\n        opp_source_xf.is_closed,\r\n        contract_source_xf.end_date,\r\n        CASE \r\n            WHEN base.annual_revenue <= 49999999 THEN 'SMB'\r\n            WHEN base.annual_revenue > 49999999 AND base.annual_revenue <= 499999999 THEN 'Mid-Market'\r\n            WHEN base.annual_revenue > 499999999 THEN 'Enterprise'\r\n        END AS company_size_rev,\r\n        COUNT(DISTINCT opp_source_xf.opportunity_id) AS number_of_open_opportunities,\r\n        CASE \r\n            WHEN opp_source_xf.is_closed = false THEN COUNT(DISTINCT opp_source_xf.opportunity_id)\r\n            ELSE 0\r\n        END AS number_of_open_opps,\r\n        CASE\r\n            WHEN base.billing_country IS NOT null AND base.billing_country IN ('GB','UK','IE','DE','DK','FI','IS','NO','SE','FR','AL','AD','AM','AT','BY','BE','BA','BG','HR','CS','CY','CZ','EE','FX','GE','GR','HU','IT','LV','LI','LT','LU','MK','MT','MD','MC','ME','NL','PL','PT','RO','SM','RS','SJ','SK','SI','ES','CH','UA','VA','FO','GI','GG','IM','JE','XK','RU') THEN 'EUROPE'\r\n            WHEN base.billing_country IS NOT null AND base.billing_country IN ('JP','KR','CN','MN','TW','VN','HK','LA','TH','KH','PH','MY','SG','ID','LK','IN','NP','BT','MM','PK','AF','KG','UZ','TM','KZ') THEN 'APJ'\r\n            WHEN base.billing_country IS NOT null AND base.billing_country IN ('AU','CX','NZ','NF','Australia','New Zealand') THEN 'AUNZ'\r\n            WHEN base.billing_country IS NOT null AND base.billing_country IN ('AR','BO','BR','BZ','CL','CO','CU','CR','DO','EC','FK','GF','GS','GY','GT','HN','MX','NI','PA','PE','PR','PY','SR','SV','UY','VE')THEN 'LATAM'\r\n            WHEN base.billing_state IS NOT null AND base.billing_state IN ('CA','NV','UT','AK','MO','CO','HI','OK','IL','AR','NE','MI','KS','OR','WA','ID','WI','MN','ND','SD','MT','WY','IA','NB','ON','PE','QC','AB','BC','MB','SK','NL','NS','YT','NU','NT') THEN 'NA-WEST'\r\n            WHEN base.billing_state IS NOT null AND base.billing_state IN ('NY','CT','MA','VT','NH','ME','NJ','RI','TX','AZ','NM','MS','LA','AL','TN','KY','OH','IN','GA','FL','NC','SC','PA','DC','DE','MD','VA','WV') THEN 'NA-EAST'\r\n            WHEN base.billing_country IS NOT null AND base.billing_country IN ('AG','AI','AN','AW','BB','BM','BS','DM','GD','GP','HT','JM','KN','LC','MQ','MS','TC','TT','VC','VG','VI') THEN 'NA-EAST'\r\n            WHEN base.billing_country IS NOT null AND base.billing_country IN ('US','CA') AND base.billing_state IS null  THEN 'NA-NO-STATEPROV'\r\n            WHEN base.billing_country IS NOT null AND base.billing_state IS NOT null THEN 'ROW'\r\n            ELSE 'Unknown'\r\n        END AS global_region,\r\n        contract_source_xf.end_date+1 AS renewal_date\r\n        -- \"Renewal_Notice_Date__c\" AS renewal_notice_date,\r\n    FROM base\r\n    LEFT JOIN \"acton\".salesforce.\"account\" AS parent ON\r\n    base.id=parent.parent_id\r\n    LEFT JOIN {{ref('user_source_xf')}} AS sdr ON\r\n    base.sdr_c=sdr.user_id\r\n    LEFT JOIN {{ref('user_source_xf')}} AS csm ON\r\n    base.csm_c=csm.user_id\r\n    LEFT JOIN {{ref('user_source_xf')}} AS account_owner ON\r\n    base.owner_id=account_owner.user_id\r\n    LEFT JOIN {{ref('user_source_xf')}} AS onboarding ON\r\n    base.onboarding_specialist_c=onboarding.user_id\r\n    LEFT JOIN {{ref('user_source_xf')}} AS deliverability ON\r\n    base.deliverability_consultant_c=deliverability.user_id\r\n    LEFT JOIN {{ref('opp_source_xf')}} ON\r\n    base.id=opp_source_xf.account_id\r\n    LEFT JOIN {{ref('contract_source_xf')}} ON\r\n    base.current_contract_c=contract_source_xf.contract_id\r\n    {{dbt_utils.group_by(n=66) }}\r\n\r\n)\r\n\r\nSELECT \r\nfinal.*,\r\nCASE\r\n    WHEN global_region IN ('EUROPE','ROW','AUNZ') THEN 'EMEA'\r\n    WHEN company_size_rev IN ('SMB') OR company_size_rev IS null THEN 'Velocity'\r\n    WHEN company_size_rev IN ('Mid-Market','Enterprise') THEN 'Upmarket'\r\n    ELSE null\r\nEND AS segment \r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.group_by"], "nodes": ["source.acton_marketing_data.salesforce.account", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.contract_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "account_source_xf"], "unique_id": "model.acton_marketing_data.account_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "account_source_xf.sql", "original_file_path": "models/account_source_xf.sql", "name": "account_source_xf", "alias": "account_source_xf", "checksum": {"name": "sha256", "checksum": "a33df3a4d8c1f40de1ff82fd5e05654c2be23975b25b62b14bab4ae5c4ed127d"}, "tags": [], "refs": [["user_source_xf"], ["user_source_xf"], ["user_source_xf"], ["user_source_xf"], ["user_source_xf"], ["opp_source_xf"], ["contract_source_xf"]], "sources": [["salesforce", "account"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.1560006}, "model.acton_marketing_data.contact_history_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT *\r\nFROM {{ source('salesforce', 'contact_history') }}\r\n\r\n)\r\n\r\nSELECT\r\nid AS contact_history_id, \r\ncontact_id,\r\ncreated_date AS field_modified_at,\r\nfield,\r\nold_value,\r\nnew_value\r\nFROM base\r\nWHERE is_deleted = false", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.contact_history"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "contact_history_xf"], "unique_id": "model.acton_marketing_data.contact_history_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "contact_history_xf.sql", "original_file_path": "models/contact_history_xf.sql", "name": "contact_history_xf", "alias": "contact_history_xf", "checksum": {"name": "sha256", "checksum": "804169484507926511e61e9c545e9690135aa431759f296404cdc3998944e8a6"}, "tags": [], "refs": [], "sources": [["salesforce", "contact_history"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.1663141}, "model.acton_marketing_data.new_business_acv_influenced_by_opens_FY21_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH opp_with_contact_base AS (\r\nSELECT *\r\nFROM {{ref('opportunities_with_contacts')}}\r\n--FROM \"acton\".dbt_actonmarketing.opportunities_with_contacts\r\n\r\n), email_click_base AS (\r\n    SELECT *\r\n    FROM {{ref('email_opens_ao_xf')}}\r\n    --FROM \"acton\".dbt_actonmarketing.email_opens_ao_xf\r\n\r\n) , sum_base AS (\r\nSELECT DISTINCT\r\nemail_click_base.email,\r\naction_time,\r\nmessage_title,\r\nautomated_program_name,\r\ncampaign_name,\r\nis_current_customer,\r\nis_hand_raiser,\r\nmql_created_date,\r\nclose_date,\r\nis_won,\r\nopp_created_date,\r\ndiscovery_date,\r\nstage_name,\r\nacv::numeric,\r\nopp_lead_source,\r\ntype,\r\nopportunity_id AS opps\r\nFROM email_click_base\r\nLEFT JOIN opp_with_contact_base ON \r\nemail_click_base.email=opp_with_contact_base.email\r\nWHERE opportunity_id IS NOT null\r\nAND discovery_date >= '2021-01-01'\r\nAND discovery_date>=action_time\r\nAND type = 'New Business'\r\nAND action_time >= '2021-01-01'\r\n--AND automated_program_name IS NOT null\r\n--AND automated_program_name != ''\r\n--AND automated_program_name NOT LIKE '%Conf%'\r\n--GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\r\n\r\n), intermediate AS (\r\nSELECT DISTINCT\r\nautomated_program_name,\r\nacv\r\nFROM sum_base\r\nWHERE discovery_date IS NOT null\r\n--AND discovery_date>=action_time\r\n--AND automated_program_name IS NOT null\r\n--AND automated_program_name != ''\r\n--AND automated_program_name NOT LIKE '%Conf%'\r\n\r\n), final AS (\r\nSELECT\r\nautomated_program_name,\r\nSUM(acv) AS total_acv\r\nFROM intermediate\r\nGROUP BY 1\r\n\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opportunities_with_contacts", "model.acton_marketing_data.email_opens_ao_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "new_business_acv_influenced_by_opens_FY21_xf"], "unique_id": "model.acton_marketing_data.new_business_acv_influenced_by_opens_FY21_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "new_business_acv_influenced_by_opens_FY21_xf.sql", "original_file_path": "models/new_business_acv_influenced_by_opens_FY21_xf.sql", "name": "new_business_acv_influenced_by_opens_FY21_xf", "alias": "new_business_acv_influenced_by_opens_FY21_xf", "checksum": {"name": "sha256", "checksum": "da200df31aa6e47de449d9f7b90e348950914a10343f80d5850d2381a4ec8525"}, "tags": [], "refs": [["opportunities_with_contacts"], ["email_opens_ao_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.168504}, "model.acton_marketing_data.opportunities_with_contacts": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH person_base AS (\r\n\r\n    SELECT\r\n        contact_id AS person_id,\r\n        email,\r\n        is_hand_raiser,\r\n        mql_most_recent_date AS mql_created_date,\r\n        contact_owner_id AS owner_id,\r\n        channel_lead_creation,\r\n        medium_lead_creation,\r\n        source_lead_creation,\r\n        lead_source,\r\n        marketing_created_date,\r\n        working_date,\r\n        contact_status AS person_status,\r\n        company_size_rev,\r\n        global_region,\r\n        segment,\r\n        account_id,\r\n        channel_bucket,\r\n        industry_bucket,\r\n        industry,\r\n        'Contact' AS record_type\r\n    FROM {{ref('contact_source_xf')}}\r\n    WHERE marketing_created_date >= '2021-01-01'\r\n    UNION ALL\r\n    SELECT\r\n        lead_id AS person_id,\r\n        email,\r\n        is_hand_raiser,\r\n        mql_most_recent_date,\r\n        lead_owner_id AS owner_id,\r\n        channel_lead_creation,\r\n        medium_lead_creation,\r\n        source_lead_creation,\r\n        lead_source,\r\n        marketing_created_date,\r\n        working_date,\r\n        lead_status AS person_status,\r\n        company_size_rev,\r\n        global_region,\r\n        segment,\r\n        person_account_id,\r\n        channel_bucket,\r\n        industry_bucket,\r\n        industry,\r\n        'Lead' AS record_type\r\n    FROM {{ref('lead_source_xf')}}\r\n    WHERE is_converted = false\r\n    AND marketing_created_date >= '2021-01-01'\r\n)\r\n\r\nSELECT \r\n    person_base.person_id,\r\n    person_base.email,\r\n    person_base.is_hand_raiser,\r\n    person_base.channel_bucket,\r\n    person_base.owner_id,\r\n    person_base.channel_lead_creation,\r\n    person_base.medium_lead_creation,\r\n    person_base.source_lead_creation,\r\n    person_base.lead_source,\r\n    person_base.marketing_created_date,\r\n    person_base.mql_created_date,\r\n    person_base.working_date,\r\n    person_base.company_size_rev,\r\n    person_base.global_region,\r\n    person_base.segment,\r\n    person_base.account_id,\r\n    person_base.person_status,\r\n    person_base.industry,\r\n    person_base.industry_bucket,\r\n    person_base.record_type,\r\n    account_base.is_current_customer, \r\n    account_base.account_name,\r\n    account_base.account_owner_name,\r\n    account_base.account_csm_name,\r\n   -- account_base.\r\n    opp_base.opportunity_id,\r\n    opp_base.opportunity_name,\r\n    opp_base.is_won,\r\n    opp_base.created_date AS opp_created_date,\r\n    opp_base.discovery_date,\r\n    opp_base.demo_date,\r\n    opp_base.voc_date,\r\n    opp_base.closing_date,\r\n    opp_base.implement_date,\r\n    opp_base.close_date,\r\n    opp_base.stage_name,\r\n    opp_base.acv,\r\n    opp_base.opp_lead_source,\r\n    opp_base.type,\r\n    opp_base.is_closed,\r\n    opp_base.segment AS opp_segment,\r\n    opp_base.account_global_region,\r\n    opp_base.company_size_rev AS opp_company_size_rev,\r\n    opp_base.industry AS opp_industry,\r\n    opp_base.industry_bucket AS opp_industry_bucket,\r\n    opp_base.channel_bucket AS opp_channel_bucket,\r\n    CASE \r\n        WHEN mql_created_date IS NOT null AND email NOT LIKE '%act-on%' AND lead_source = 'Marketing' THEN 1\r\n        ELSE 0\r\n    END AS is_mql,\r\n    CASE \r\n        WHEN working_date IS NOT null AND email NOT LIKE '%act-on%' AND lead_source = 'Marketing' AND person_status NOT IN ('Current Customer','Partner','Bad Data','No Fit') THEN 1\r\n        ELSE 0\r\n    END AS is_sal,\r\n    CASE\r\n        WHEN opp_base.created_date IS NOT null AND opp_base.type = 'New Business' AND opp_base.stage_name NOT IN ('Closed - Duplicate','Closed - Admin Remove') THEN 1\r\n        ELSE 0\r\n    END AS is_sql,\r\n    CASE\r\n        WHEN opp_base.discovery_date IS NOT null AND opp_base.type = 'New Business' AND opp_base.stage_name NOT IN ('Closed - Duplicate','Closed - Admin Remove') THEN 1\r\n        ELSE 0\r\n    END AS is_sqo,\r\n    CASE\r\n        WHEN opp_base.is_closed = true AND opp_base.is_won = false THEN 1\r\n        ELSE 0\r\n    END AS is_cl,\r\n    CASE\r\n        WHEN opp_base.is_closed = true AND opp_base.is_won = true THEN 1\r\n        ELSE 0\r\n    END AS is_cw\r\nFROM person_base\r\nLEFT JOIN {{ref('opp_source_xf')}} AS opp_base ON\r\nperson_base.account_id=opp_base.account_id\r\nLEFT JOIN {{ref('account_source_xf')}} AS account_base ON\r\nperson_base.account_id=account_base.account_id\r\nWHERE opportunity_id IS NOT null\r\nAND opp_base.created_date >= '2021-01-01'\r\nORDER BY 4", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.contact_source_xf", "model.acton_marketing_data.lead_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "opportunities_with_contacts"], "unique_id": "model.acton_marketing_data.opportunities_with_contacts", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "opportunities_with_contacts.sql", "original_file_path": "models/opportunities_with_contacts.sql", "name": "opportunities_with_contacts", "alias": "opportunities_with_contacts", "checksum": {"name": "sha256", "checksum": "7c37cc2ac4d3dbd75e360343f5fc89877a5b187d3fe3027eb05a022d9da162e8"}, "tags": [], "refs": [["contact_source_xf"], ["lead_source_xf"], ["opp_source_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.1716268}, "model.acton_marketing_data.product_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT *\r\n    FROM {{ source('salesforce', 'product_2') }}\r\n\r\n), final AS (\r\n\r\n    SELECT \r\n        id AS product_id,\r\n        product_code,\r\n        DATE_TRUNC('day',created_date)::Date AS product_created_date,\r\n        DATE_TRUNC('day',last_modified_date)::Date AS product_last_modified_date,\r\n        system_modstamp AS systemmodstamp,\r\n        is_deleted,\r\n        rev_rec_c AS rev_rec,\r\n        multiplier_override_c AS multiplier_override,\r\n        sbqq_subscription_type_c AS sbqq_subscription_type,\r\n        product_category_c AS product_category\r\n    FROM base\r\n\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.product_2"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "product_xf"], "unique_id": "model.acton_marketing_data.product_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "product_xf.sql", "original_file_path": "models/product_xf.sql", "name": "product_xf", "alias": "product_xf", "checksum": {"name": "sha256", "checksum": "b892bc25c1dd6f721a34f9be111df89d9a88cb15c1c8b5738dd6c140f9a1d288"}, "tags": [], "refs": [], "sources": [["salesforce", "product_2"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.1752663}, "model.acton_marketing_data.new_biz_acv_infl_by_opens_FY21": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH opp_with_contact_base AS (\r\nSELECT *\r\nFROM {{ref('opportunities_with_contacts')}}\r\n--FROM \"acton\".dbt_actonmarketing.opportunities_with_contacts\r\n\r\n), email_click_base AS (\r\n    SELECT *\r\n    FROM {{ref('email_opens_ao_xf')}}\r\n    --FROM \"acton\".dbt_actonmarketing.email_opens_ao_xf\r\n\r\n) , sum_base AS (\r\nSELECT DISTINCT\r\nemail_click_base.email,\r\naction_time,\r\nmessage_title,\r\nautomated_program_name,\r\ncampaign_name,\r\nis_current_customer,\r\nis_hand_raiser,\r\nmql_created_date,\r\nclose_date,\r\nis_won,\r\nopp_created_date,\r\ndiscovery_date,\r\nstage_name,\r\nacv::numeric,\r\nopp_lead_source,\r\ntype,\r\nopportunity_id AS opps\r\nFROM email_click_base\r\nLEFT JOIN opp_with_contact_base ON \r\nemail_click_base.email=opp_with_contact_base.email\r\nWHERE opportunity_id IS NOT null\r\nAND discovery_date >= '2021-01-01'\r\nAND discovery_date>=action_time\r\nAND type = 'New Business'\r\nAND action_time >= '2021-01-01'\r\n--AND automated_program_name IS NOT null\r\n--AND automated_program_name != ''\r\n--AND automated_program_name NOT LIKE '%Conf%'\r\n--GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\r\n\r\n), intermediate AS (\r\nSELECT DISTINCT\r\nautomated_program_name,\r\nacv\r\nFROM sum_base\r\nWHERE discovery_date IS NOT null\r\n--AND discovery_date>=action_time\r\n--AND automated_program_name IS NOT null\r\n--AND automated_program_name != ''\r\n--AND automated_program_name NOT LIKE '%Conf%'\r\n\r\n), final AS (\r\nSELECT\r\nautomated_program_name,\r\nSUM(acv) AS total_acv\r\nFROM intermediate\r\nGROUP BY 1\r\n\r\n)\r\n\r\nSELECT *\r\nFROM final\r\nWHERE total_acv >=1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opportunities_with_contacts", "model.acton_marketing_data.email_opens_ao_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "new_biz_acv_infl_by_opens_FY21"], "unique_id": "model.acton_marketing_data.new_biz_acv_infl_by_opens_FY21", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "new_biz_acv_infl_by_opens_FY21.sql", "original_file_path": "models/new_biz_acv_infl_by_opens_FY21.sql", "name": "new_biz_acv_infl_by_opens_FY21", "alias": "new_biz_acv_infl_by_opens_FY21", "checksum": {"name": "sha256", "checksum": "c33c609c8db15eea902768e898fa8c06be246cd7dc2f90c2fe484dba8e58f280"}, "tags": [], "refs": [["opportunities_with_contacts"], ["email_opens_ao_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.178126}, "model.acton_marketing_data.lead_history_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT *\r\nFROM {{ source('salesforce', 'lead_history') }}\r\n\r\n)\r\n\r\nSELECT\r\nid AS lead_history_id, \r\nbase.lead_id,\r\nbase.created_date AS field_modified_at,\r\nfield,\r\nold_value,\r\nnew_value\r\nFROM base\r\nLEFT JOIN {{ref('lead_source_xf')}} ON\r\nbase.lead_id=lead_source_xf.lead_id\r\nWHERE base.is_deleted = false\r\nAND is_converted=false", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.lead_history", "model.acton_marketing_data.lead_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "lead_history_xf"], "unique_id": "model.acton_marketing_data.lead_history_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "lead_history_xf.sql", "original_file_path": "models/lead_history_xf.sql", "name": "lead_history_xf", "alias": "lead_history_xf", "checksum": {"name": "sha256", "checksum": "3370f17bb81ef633080a4c36c89902f12e709bc2c8a8c6b238733d01c6dfb325"}, "tags": [], "refs": [["lead_source_xf"]], "sources": [["salesforce", "lead_history"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.1814854}, "model.acton_marketing_data.sqos_influenced_by_email_opens_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH opp_with_contact_base AS (\r\nSELECT *\r\nFROM {{ref('opportunities_with_contacts')}}\r\n--FROM \"acton\".dbt_actonmarketing.opportunities_with_contacts\r\n\r\n), email_click_base AS (\r\n    SELECT *\r\n    FROM {{ref('email_opens_ao_xf')}}\r\n    --FROM \"acton\".dbt_actonmarketing.email_opens_ao_xf\r\n\r\n) , sum_base AS (\r\nSELECT \r\nemail_click_base.email,\r\naction_time,\r\nmessage_title,\r\nautomated_program_name,\r\ncampaign_name,\r\nis_current_customer,\r\nis_hand_raiser,\r\nmql_created_date,\r\nclose_date,\r\nis_won,\r\nopp_created_date,\r\ndiscovery_date,\r\nstage_name,\r\nacv,\r\nopp_lead_source,\r\ntype,\r\nopportunity_id AS opps\r\nFROM email_click_base\r\nLEFT JOIN opp_with_contact_base ON \r\nemail_click_base.email=opp_with_contact_base.email\r\nWHERE opportunity_id IS NOT null\r\n--GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\r\n\r\n), final AS (\r\nSELECT DISTINCT\r\nautomated_program_name,\r\nmessage_title,\r\naction_time,\r\ncampaign_name,\r\nstage_name,\r\ndiscovery_date,\r\ntype,\r\nopps,\r\nacv\r\nFROM sum_base\r\nWHERE discovery_date IS NOT null\r\nAND discovery_date>=action_time\r\nAND automated_program_name IS NOT null\r\nAND automated_program_name != ''\r\nAND automated_program_name NOT LIKE '%Conf%'\r\n--AND type = 'New Business'\r\n--AND discovery_date >= '2021-01-01'\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opportunities_with_contacts", "model.acton_marketing_data.email_opens_ao_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "sqos_influenced_by_email_opens_xf"], "unique_id": "model.acton_marketing_data.sqos_influenced_by_email_opens_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sqos_influenced_by_email_opens_xf.sql", "original_file_path": "models/sqos_influenced_by_email_opens_xf.sql", "name": "sqos_influenced_by_email_opens_xf", "alias": "sqos_influenced_by_email_opens_xf", "checksum": {"name": "sha256", "checksum": "928580b18898645dfa9d116b221a92ab1631a6a4f47e21b1f4e06e721b36844b"}, "tags": [], "refs": [["opportunities_with_contacts"], ["email_opens_ao_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.184445}, "model.acton_marketing_data.campaign_member_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT *\r\nFROM {{ source('salesforce', 'campaign_member') }}\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        id AS campaign_member_id,\r\n        campaign_id,\r\n        lead_id,\r\n        contact_id,\r\n        lead_or_contact_id,\r\n        account_id,\r\n        company_or_account AS account_name,\r\n        account_lookup_c AS account_lookup,\r\n        email,\r\n        status AS campaign_member_status,\r\n        type AS campaign_member_type,\r\n        has_responded AS campaign_member_has_responded,\r\n        DATE_TRUNC('day',base.created_date)::Date AS campaign_member_created_date,\r\n        DATE_TRUNC('day',base.first_responded_date)::Date AS campaign_member_first_responded_date,\r\n        is_deleted AS is_deleted_campaign_member\r\n    FROM base\r\n\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.campaign_member"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "campaign_member_source_xf"], "unique_id": "model.acton_marketing_data.campaign_member_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "campaign_member_source_xf.sql", "original_file_path": "models/campaign_member_source_xf.sql", "name": "campaign_member_source_xf", "alias": "campaign_member_source_xf", "checksum": {"name": "sha256", "checksum": "fbd220c144831925ad8d570aa98f6ce86dc57f408743743af007dadcb730ba59"}, "tags": [], "refs": [], "sources": [["salesforce", "campaign_member"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.187214}, "model.acton_marketing_data.person_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    -- Key ID\r\n    lead_id AS person_id,\r\n\r\n    -- Firmographic Information\r\n    email,\r\n    first_name,\r\n    last_name,\r\n    title,\r\n    country,\r\n    lead_status AS person_status,\r\n    global_region,\r\n\r\n    -- Account Information\r\n    company,\r\n    annual_revenue,\r\n    lean_data_account_id,\r\n    current_crm,\r\n    current_ma,\r\n    company_size_rev,\r\n    industry,\r\n    industry_bucket,\r\n    segment,\r\n\r\n    -- DateTime Fields\r\n    last_modified_date,\r\n    created_date,\r\n    mql_created_date,\r\n    mql_most_recent_date,\r\n    working_date,\r\n    marketing_created_date,\r\n\r\n    -- Other Key Information    \r\n    lead_source,    \r\n    lead_owner_id AS person_owner_id,\r\n    lead_score,\r\n    firmographic_demographic_lead_score,\r\n    no_longer_with_company,\r\n    is_hand_raiser,\r\n    created_by_name,\r\n\r\n    --Attribution Data\r\n    campaign_first_touch,\r\n    campaign_last_touch,\r\n    campaign_lead_creation,\r\n    channel_first_touch,\r\n    channel_last_touch,\r\n    channel_lead_creation,\r\n    medium_first_touch,\r\n    medium_last_touch,\r\n    medium_lead_creation,\r\n    source_first_touch,\r\n    source_last_touch, \r\n    source_lead_creation,    \r\n    subchannel_first_touch,\r\n    subchannel_last_touch,\r\n    subchannel_lead_creation,\r\n    offer_asset_name_first_touch,\r\n    offer_asset_name_last_touch,\r\n    offer_asset_name_lead_creation,\r\n    offer_asset_subtype_first_touch,\r\n    offer_asset_subtype_last_touch,\r\n    offer_asset_subtype_lead_creation,\r\n    offer_asset_topic_first_touch,\r\n    offer_asset_topic_last_touch,\r\n    offer_asset_topic_lead_creation,\r\n    offer_asset_type_first_touch,\r\n    offer_asset_type_last_touch,\r\n    offer_asset_type_lead_creation,\r\n    channel_bucket\r\nFROM {{ref('lead_source_xf')}}\r\nWHERE is_converted = FALSE\r\nAND is_deleted = FALSE\r\nUNION ALL\r\nSELECT\r\n    -- Key ID\r\n    contact_id AS person_id,\r\n\r\n    -- Firmographic Information\r\n    email,\r\n    first_name,\r\n    last_name,\r\n    title,\r\n    mailing_country,\r\n    contact_status AS person_status,\r\n    global_region,\r\n\r\n    -- Account Information\r\n    account_name,\r\n    annual_revenue,\r\n    account_id,\r\n    de_current_crm,\r\n    de_current_ma,\r\n    company_size_rev,\r\n    industry,\r\n    industry_bucket,\r\n    segment,\r\n    \r\n    -- DateTime Fields\r\n    last_modified_date,\r\n    created_date,\r\n    mql_created_date,\r\n    mql_most_recent_date,\r\n    working_date,\r\n    marketing_created_date,\r\n\r\n    -- Other Key Information    \r\n    lead_source,    \r\n    contact_owner_id AS person_owner_id,\r\n    lead_score,\r\n    firmographic_demographic_lead_score,\r\n    is_no_longer_with_company,\r\n    is_hand_raiser,\r\n    created_by_name,\r\n\r\n    --Attribution Data\r\n    campaign_first_touch,\r\n    campaign_last_touch,\r\n    campaign_lead_creation,\r\n    channel_first_touch,\r\n    channel_last_touch,\r\n    channel_lead_creation,\r\n    medium_first_touch,\r\n    medium_last_touch,\r\n    medium_lead_creation,\r\n    source_first_touch,\r\n    source_last_touch, \r\n    source_lead_creation,    \r\n    subchannel_first_touch,\r\n    subchannel_last_touch,\r\n    subchannel_lead_creation,\r\n    offer_asset_name_first_touch,\r\n    offer_asset_name_last_touch,\r\n    offer_asset_name_lead_creation,\r\n    offer_asset_subtype_first_touch,\r\n    offer_asset_subtype_last_touch,\r\n    offer_asset_subtype_lead_creation,\r\n    offer_asset_topic_first_touch,\r\n    offer_asset_topic_last_touch,\r\n    offer_asset_topic_lead_creation,\r\n    offer_asset_type_first_touch,\r\n    offer_asset_type_last_touch,\r\n    offer_asset_type_lead_creation,\r\n    channel_bucket\r\nFROM {{ref('contact_source_xf')}}\r\nWHERE is_deleted = FALSE", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.lead_source_xf", "model.acton_marketing_data.contact_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "person_source_xf"], "unique_id": "model.acton_marketing_data.person_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "person_source_xf.sql", "original_file_path": "models/person_source_xf.sql", "name": "person_source_xf", "alias": "person_source_xf", "checksum": {"name": "sha256", "checksum": "dac92e6b4e74b88e3af1067fc096c1a6ec970d0fcdf4a0b2bc9cce155ee61009"}, "tags": [], "refs": [["lead_source_xf"], ["contact_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.1901278}, "model.acton_marketing_data.user_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT *\r\nFROM {{ source('salesforce', 'user') }}\r\n\r\n)\r\n\r\n    SELECT\r\n        id AS user_id,\r\n        username AS user_name,\r\n        last_name AS user_last_name,\r\n        first_name AS user_first_name,\r\n        name AS user_full_name,\r\n        department AS user_department,\r\n        title AS user_title,\r\n        email AS user_email,\r\n        phone AS user_phone,\r\n        is_active AS is_active_user,\r\n        manager_id,\r\n        created_date AS user_created_date,\r\n        last_modified_date AS user_last_modified_date,\r\n        system_modstamp AS systemmodstamp,\r\n        contact_id AS user_contact_id,\r\n        account_id AS user_account_id,\r\n        full_photo_url AS user_photo_url,\r\n        sales_loft_calendar_link_c AS sales_loft_calendar_link,\r\n        calendly_link_c AS calendly_link,\r\n        headshot_url_c AS user_headshot_url,\r\n        office_location_c AS user_office_location,\r\n        sales_home_office_c AS user_sales_home_office,\r\n        csm_type_c AS csm_type,\r\n        my_territory_c AS user_territory,\r\n        photo_c AS user_photo\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.user"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "user_source_xf"], "unique_id": "model.acton_marketing_data.user_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "user_source_xf.sql", "original_file_path": "models/user_source_xf.sql", "name": "user_source_xf", "alias": "user_source_xf", "checksum": {"name": "sha256", "checksum": "6fcb107d95e2affae58c790a92e44ace193a146983467f674930ae0a45c6499f"}, "tags": [], "refs": [], "sources": [["salesforce", "user"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.19353}, "model.acton_marketing_data.email_clicks_ao_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT * \r\nFROM \"acton\".public.email_clicks_ao_2021\r\nunion all\r\nSELECT * \r\nFROM \"acton\".public.email_clicks_ao_20220316\r\n\r\n)\r\n\r\nSELECT\r\n    \"Recipient E-mail\" AS email,\r\n    \"Action\" AS action,\r\n    \"Action Day\" AS action_day,\r\n    \"Action Time\" AS action_time,\r\n    \"Message ID\" AS message_id,\r\n    \"subject\" AS subject,\r\n    \"Message Title\" AS message_title, \r\n    \"Automated Program Name\" AS automated_program_name,\r\n    \"Campaign Name\" AS campaign_name,\r\n    \"Clicked URL\" AS clicked_url\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "email_clicks_ao_xf"], "unique_id": "model.acton_marketing_data.email_clicks_ao_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "email_clicks_ao_xf.sql", "original_file_path": "models/email_clicks_ao_xf.sql", "name": "email_clicks_ao_xf", "alias": "email_clicks_ao_xf", "checksum": {"name": "sha256", "checksum": "81ea9ad001605433e6384dfc4b9191b9f9c82a33741395d24badd40aca9b0710"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.1962767}, "model.acton_marketing_data.opp_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\nSELECT *\r\nFROM {{ source('salesforce', 'opportunity') }}\r\n\r\n), intermediate AS (\r\n\r\n    SELECT DISTINCT\r\n        base.id AS opportunity_id,\r\n        base.is_deleted,\r\n        base.account_id,\r\n        account.name AS account_name,\r\n        account.sdr_c AS sdr_id,\r\n        sdr.user_name AS sdr_name,\r\n        CASE\r\n            WHEN account.billing_country IS NOT null AND account.billing_country IN ('GB','UK','IE','DE','DK','FI','IS','NO','SE','FR','AL','AD','AM','AT','BY','BE','BA','BG','HR','CS','CY','CZ','EE','FX','GE','GR','HU','IT','LV','LI','LT','LU','MK','MT','MD','MC','ME','NL','PL','PT','RO','SM','RS','SJ','SK','SI','ES','CH','UA','VA','FO','GI','GG','IM','JE','XK','RU') THEN 'EUROPE'\r\n            WHEN account.billing_country IS NOT null AND account.billing_country IN ('JP','KR','CN','MN','TW','VN','HK','LA','TH','KH','PH','MY','SG','ID','LK','IN','NP','BT','MM','PK','AF','KG','UZ','TM','KZ') THEN 'APJ'\r\n            WHEN account.billing_country IS NOT null AND account.billing_country IN ('AU','CX','NZ','NF','Australia','New Zealand') THEN 'AUNZ'\r\n            WHEN account.billing_country IS NOT null AND account.billing_country IN ('AR','BO','BR','BZ','CL','CO','CU','CR','DO','EC','FK','GF','GS','GY','GT','HN','MX','NI','PA','PE','PR','PY','SR','SV','UY','VE')THEN 'LATAM'\r\n            WHEN account.billing_state IS NOT null AND account.billing_state IN ('CA','NV','UT','AK','MO','CO','HI','OK','IL','AR','NE','MI','KS','OR','WA','ID','WI','MN','ND','SD','MT','WY','IA','NB','ON','PE','QC','AB','BC','MB','SK','NL','NS','YT','NU','NT') THEN 'NA-WEST'\r\n            WHEN account.billing_state IS NOT null AND account.billing_state IN ('NY','CT','MA','VT','NH','ME','NJ','RI','TX','AZ','NM','MS','LA','AL','TN','KY','OH','IN','GA','FL','NC','SC','PA','DC','DE','MD','VA','WV') THEN 'NA-EAST'\r\n            WHEN account.billing_country IS NOT null AND account.billing_country IN ('AG','AI','AN','AW','BB','BM','BS','DM','GD','GP','HT','JM','KN','LC','MQ','MS','TC','TT','VC','VG','VI') THEN 'NA-EAST'\r\n            WHEN account.billing_country IS NOT null AND account.billing_country IN ('US','CA') AND account.billing_state IS null  THEN 'NA-NO-STATEPROV'\r\n            WHEN account.billing_country IS NOT null AND account.billing_state IS NOT null THEN 'ROW'\r\n            ELSE 'Unknown'\r\n        END AS account_global_region,\r\n        CASE \r\n            WHEN account.annual_revenue <= 49999999 THEN 'SMB'\r\n            WHEN account.annual_revenue > 49999999 AND account.annual_revenue <= 499999999 THEN 'Mid-Market'\r\n            WHEN account.annual_revenue > 499999999 THEN 'Enterprise'\r\n        END AS company_size_rev,\r\n        base.name AS opportunity_name,\r\n        stage_name,\r\n        amount,\r\n        base.type,\r\n        lead_source AS opp_lead_source,\r\n        is_closed,\r\n        is_won,\r\n        base.owner_id,\r\n        owner.user_name AS owner_name, \r\n        base.created_date AS created_day,\r\n        DATE_TRUNC('day',base.created_date)::Date AS created_date,\r\n        DATE_TRUNC('day',base.last_modified_date)::Date AS last_modified_date,\r\n        base.system_modstamp AS systemmodstamp,\r\n        contact_id,\r\n        base.contract_id,\r\n        crm_c AS opp_crm,\r\n        renewal_type_c AS renewal_type,\r\n        renewal_acv_value_c AS renewal_acv,\r\n        channel_lead_creation_c AS opp_channel_lead_creation,\r\n        medium_lead_creation_c AS opp_medium_lead_creation,\r\n        DATE_TRUNC('day',discovery_date_c)::Date AS discovery_date,\r\n        DATE_TRUNC('day',date_reached_confirmed_value_c)::Date AS confirmed_value_date,\r\n        DATE_TRUNC('day',date_reached_contract_c)::Date AS negotiation_date,\r\n        DATE_TRUNC('day',date_reached_demo_c)::Date AS demo_date,\r\n        DATE_TRUNC('day',date_reached_solution_c)::Date AS solution_date,\r\n        DATE_TRUNC('day',date_reached_closing_c)::Date AS closing_date,\r\n        DATE_TRUNC('day',date_time_reached_implement_c)::Date AS implement_date,\r\n        DATE_TRUNC('day',sql_date_c)::Date AS sql_date,\r\n        DATE_TRUNC('day',date_time_reached_voc_negotiate_c)::Date AS voc_date,\r\n        DATE_TRUNC('day',date_time_reached_discovery_c)::Date AS discovery_day_time,\r\n        DATE_TRUNC('day',date_time_reached_demo_c)::Date AS demo_day_time,\r\n        DATE_TRUNC('day',date_time_reached_implement_c)::Date AS implement_day_time,\r\n        DATE_TRUNC('day',date_time_reached_sql_c)::Date AS sql_day_time,\r\n        DATE_TRUNC('day',date_time_reached_voc_negotiate_c)::Date AS voc_day_time,\r\n        oc_utm_channel_c AS opp_channel_opportunity_creation,\r\n        oc_utm_medium_c AS opp_medium_opportunity_creation,\r\n        oc_utm_content_c AS opp_content_opportunity_creation, \r\n        oc_utm_source_c AS opp_source_opportunity_creation, \r\n        base.csm_c AS csm,\r\n        base.marketing_channel_c AS marketing_channel,\r\n        base.ft_utm_channel_c AS opp_channel_first_touch,\r\n        base.ft_utm_content_c AS opp_content_first_touch,\r\n        base.ft_utm_medium_c AS opp_medium_first_touch,\r\n        base.ft_utm_source_c AS opp_source_first_touch,\r\n        base.oc_offer_asset_type_c AS opp_offer_asset_type_opportunity_creation,\r\n        base.oc_offer_asset_subtype_c AS opp_offer_asset_subtype_opportunity_creation,\r\n        base.oc_offer_asset_topic_c AS opp_offer_asset_topic_opportunity_creation,\r\n        base.oc_offer_asset_name_c AS opp_offer_asset_name_opportunity_creation,\r\n        base.ft_offer_asset_name_c AS opp_offer_asset_name_first_touch,\r\n        base.lc_offer_asset_name_c  AS opp_offer_asset_name_lead_creation, \r\n        base.ft_offer_asset_subtype_c AS opp_offer_asset_subtype_first_touch, \r\n        base.lc_offer_asset_subtype_c AS opp_offer_asset_subtype_lead_creation,\r\n        base.ft_offer_asset_topic_c AS opp_offer_asset_topic_first_touch, \r\n        base.lc_offer_asset_topic_c AS opp_offer_asset_topic_lead_creation,\r\n        base.ft_offer_asset_type_c AS opp_offer_asset_type_first_touch, \r\n        base.lc_offer_asset_type_c AS opp_offer_asset_type_lead_creation,\r\n        base.ft_subchannel_c AS opp_subchannel_first_touch,\r\n        base.lc_subchannel_c AS opp_subchannel_lead_creation, \r\n        base.oc_subchannel_c AS opp_subchannel_opportunity_creation,\r\n        DATE_TRUNC('day',base.discovery_call_scheduled_date_c)::Date AS discovery_call_date,\r\n        base.opportunity_status_c AS opportunity_status,\r\n        base.sql_status_reason_c AS sql_status_reason,\r\n        DATE_TRUNC('day',base.sql_date_c)::Date AS sql_day,\r\n        DATE_TRUNC('day',base.discovery_call_scheduled_date_time_c)::Date AS discovery_call_scheduled_datetime,\r\n        DATE_TRUNC('day',base.discovery_call_completed_date_time_c)::Date AS discovery_call_completed_datetime,\r\n        base.ao_account_id_c AS ao_account_id,\r\n        base.lead_id_converted_from_c AS lead_id_converted_from,\r\n        base.close_date,\r\n        base.opportunity_type_detail_c AS opp_type_details,\r\n        DATE_TRUNC('day',base.close_date)::Date AS close_day,\r\n        base.source_lead_creation_c AS opp_source_lead_creation,\r\n        base.oc_utm_campaign_c AS opp_campaign_opportunity_creation,\r\n        base.forecast_category,\r\n        base.ft_utm_campaign_c AS opp_campaign_first_touch,  \r\n        base.acv_deal_size_override_c AS acv_deal_size_override,\r\n        base.lead_grade_at_conversion_c AS lead_grade_at_conversion,\r\n        base.renewal_stage_c AS renewal_stage,\r\n        base.created_by_id,\r\n        quota_credit_renewal_c AS quota_credit_renewal,\r\n        base.sbqq_renewed_contract_c AS renewed_contract_id,\r\n        quota_credit_c AS quota_credit,\r\n        sbqq_primary_quote_c AS primary_quote_id,\r\n        quota_credit_new_business_c AS quota_credit_new_business,\r\n        quota_credit_one_time_c AS quota_credit_one_time,\r\n        submitted_for_approval_c AS submitted_for_approval,\r\n        acv_add_back_c AS acv_add_back,\r\n        trigger_renewal_value_c AS trigger_renewal_value,\r\n        opportunity_line_item_xf.sbqq_subscription_type,\r\n        quote_line.sbqq_product_subscription_term,\r\n        opportunity_line_item_xf.product_code,\r\n        opportunity_line_item_xf.product_family,\r\n        opportunity_line_item_xf.total_price,\r\n        opportunity_line_item_xf.annual_price,\r\n        quote_line.sbqq_primary_quote,\r\n        contract_source_xf.contract_acv,\r\n        account.industry,\r\n        CASE\r\n            WHEN account.industry IN ('Business Services') THEN 'Business Services'\r\n            WHEN account.industry IN ('Finance','Insurance') THEN 'Finance'\r\n            WHEN account.industry IN ('Manufacturing') THEN 'Manufacturing'\r\n            WHEN account.industry IN ('Software','Telecommunications') THEN 'SoftCom'\r\n            ELSE 'Other'\r\n        END AS industry_bucket,\r\n        --account.segment,\r\n        CASE\r\n            WHEN base.type IN ('New Business','Upsell','Trigger Renewal','Trigger Up','Non-Monetary Mod','Admin Opp','Partner New','Partner UpSell','Admin Conversion') THEN true\r\n            ELSE false\r\n        END AS include_in_acv_deal_size,\r\n        CASE\r\n            WHEN is_closed = true THEN {{ dbt_utils.datediff(\"base.created_date\",\"base.close_date\",'day') }}\r\n            ELSE {{ dbt_utils.datediff(\"base.created_date\",\"CURRENT_DATE\",'day') }}\r\n        END AS age,\r\n        CASE\r\n            WHEN opportunity_line_item_xf.sbqq_subscription_type = 'Renewable' AND opportunity_line_item_xf.product_code != 'SOW-MNTH-CUST' THEN SUM(total_price)\r\n            ELSE 0\r\n        END AS tcv,\r\n        CASE \r\n            WHEN opportunity_line_item_xf.sbqq_subscription_type = 'Renewable' AND opportunity_line_item_xf.product_family != 'Bundle' AND opportunity_line_item_xf.product_code NOT IN ('SOW-MNTH-CUST','MAAS-FND-TRAIN','MAAS-FND-FAST','MAAS-ACC-DELIV','MAAS-ACC-STRAT')\r\n                THEN SUM(annual_price)\r\n            ELSE 0\r\n        END AS acv,\r\n        CASE \r\n            WHEN opportunity_line_item_xf.sbqq_subscription_type = 'One-time' AND opportunity_line_item_xf.product_code NOT IN ('STD-CPCTY-ONE','SOW-MKTR-DMD','SOW-MNTH-CUST','MAAS-FND-TRAIN','MAAS-FND-FASTTRK','MAAS-ACC-IMPL','MAAS-ACC-DELIV','MAAS-ACC-STRAT','AO-CPM-OVER')\r\n                THEN SUM(total_price)\r\n            ELSE 0\r\n        END AS one_time_ps_value,\r\n        CASE \r\n            WHEN opportunity_line_item_xf.sbqq_subscription_type = 'One-time' AND opportunity_line_item_xf.product_code IN ('STD-CPCTY-ONE','AO-CPM-OVER') THEN SUM(total_price)\r\n            ELSE 0\r\n        END AS one_time_license_value,\r\n        CASE \r\n            WHEN opportunity_line_item_xf.product_code IN ('SOW-MKTR-DMD','SOW-MNTH-CUST','MAAS-FND-TRAIN','MAAS-FND-FASTTRK','MAAS-ACC-IMPL','MAAS-ACC-DELIV','MAAS-ACC-STRAT') THEN SUM(total_price)\r\n            ELSE 0\r\n        END AS pso_recurring_fees\r\n    FROM base\r\n    LEFT JOIN {{ref('contract_source_xf')}} ON\r\n    base.id=contract_source_xf.contract_opportunity_id\r\n    LEFT JOIN {{ref('opportunity_line_item_xf')}} ON\r\n    base.id=opportunity_line_item_xf.opportunity_id\r\n    LEFT JOIN {{ref('quote_line')}} ON\r\n    base.id=quote_line.opportunity_id\r\n    LEFT JOIN \"acton\".salesforce.\"account\" account ON\r\n    base.account_id=account.id\r\n    LEFT JOIN {{ref('user_source_xf')}} owner ON\r\n    base.owner_id=owner.user_id\r\n    LEFT JOIN {{ref('user_source_xf')}} sdr ON\r\n    account.sdr_c=sdr.user_id\r\n    {{dbt_utils.group_by(n=107) }}\r\n\r\n), intermediate_acv_formula AS (\r\n\r\n    SELECT \r\n      intermediate.opportunity_id,\r\n      intermediate.is_deleted,\r\n      intermediate.account_id,\r\n      intermediate.account_name,\r\n      intermediate.sdr_id,\r\n      intermediate.sdr_name,\r\n      intermediate.company_size_rev,\r\n      intermediate.account_global_region,\r\n      intermediate.opportunity_name,\r\n      intermediate.stage_name,\r\n      intermediate.amount,\r\n      intermediate.type,\r\n      intermediate.opp_lead_source,\r\n      intermediate.is_closed,\r\n      intermediate.is_won,\r\n      intermediate.owner_id,\r\n      intermediate.owner_name,\r\n      intermediate.created_day,\r\n      intermediate.created_date,\r\n      intermediate.last_modified_date,\r\n      intermediate.systemmodstamp,\r\n      intermediate.contact_id,\r\n      intermediate.contract_id,\r\n      intermediate.opp_crm,\r\n      intermediate.renewal_type,\r\n      intermediate.renewal_acv,\r\n      intermediate.opp_channel_lead_creation,\r\n      intermediate.opp_medium_lead_creation,\r\n      intermediate.discovery_date,\r\n      intermediate.demo_date,\r\n      intermediate.solution_date,\r\n      intermediate.negotiation_date,\r\n      intermediate.confirmed_value_date,\r\n      intermediate.closing_date,\r\n      intermediate.implement_date,\r\n      intermediate.sql_date,\r\n      intermediate.voc_date,\r\n      intermediate.discovery_day_time,\r\n      intermediate.demo_day_time,\r\n      intermediate.implement_day_time,\r\n      intermediate.sql_day_time,\r\n      intermediate.voc_day_time,\r\n      intermediate.opp_channel_opportunity_creation,\r\n      intermediate.opp_medium_opportunity_creation,\r\n      intermediate.opp_content_opportunity_creation,\r\n      intermediate.opp_source_opportunity_creation,\r\n      intermediate.csm,\r\n      intermediate.marketing_channel,\r\n      intermediate.opp_channel_first_touch,\r\n      intermediate.opp_content_first_touch,\r\n      intermediate.opp_medium_first_touch,\r\n      intermediate.opp_source_first_touch,\r\n      intermediate.opp_offer_asset_type_opportunity_creation,\r\n      intermediate.opp_offer_asset_subtype_opportunity_creation,\r\n      intermediate.opp_offer_asset_topic_opportunity_creation,\r\n      intermediate.opp_offer_asset_name_opportunity_creation,\r\n      intermediate.opp_offer_asset_name_first_touch,\r\n      intermediate.opp_offer_asset_name_lead_creation,\r\n      intermediate.opp_offer_asset_subtype_first_touch,\r\n      intermediate.opp_offer_asset_subtype_lead_creation,\r\n      intermediate.opp_offer_asset_topic_first_touch,\r\n      intermediate.opp_offer_asset_topic_lead_creation,\r\n      intermediate.opp_offer_asset_type_first_touch,\r\n      intermediate.opp_offer_asset_type_lead_creation,\r\n      intermediate.opp_subchannel_first_touch,\r\n      intermediate.opp_subchannel_lead_creation,\r\n      intermediate.opp_subchannel_opportunity_creation,\r\n      intermediate.discovery_call_date,\r\n      intermediate.opportunity_status,\r\n      intermediate.sql_status_reason,\r\n      intermediate.sql_day,\r\n      intermediate.discovery_call_scheduled_datetime,\r\n      intermediate.discovery_call_completed_datetime,\r\n      intermediate.ao_account_id,\r\n      intermediate.lead_id_converted_from,\r\n      intermediate.close_date,\r\n      intermediate.opp_type_details,\r\n      intermediate.close_day,\r\n      intermediate.opp_source_lead_creation,\r\n      intermediate.opp_campaign_opportunity_creation,\r\n      intermediate.forecast_category,\r\n      intermediate.opp_campaign_first_touch,\r\n      intermediate.acv_deal_size_override,\r\n      intermediate.lead_grade_at_conversion,\r\n      intermediate.renewal_stage,\r\n      intermediate.created_by_id,\r\n      intermediate.quota_credit_renewal,\r\n      intermediate.renewed_contract_id,\r\n      intermediate.quota_credit,\r\n      intermediate.primary_quote_id,\r\n      intermediate.quota_credit_new_business,\r\n      intermediate.quota_credit_one_time,\r\n      intermediate.submitted_for_approval,\r\n      intermediate.acv_add_back,\r\n      intermediate.trigger_renewal_value,\r\n      intermediate.sbqq_primary_quote,\r\n      intermediate.sbqq_product_subscription_term,\r\n      intermediate.contract_acv,\r\n      intermediate.industry,\r\n      intermediate.industry_bucket,\r\n      --intermediate.segment,\r\n      intermediate.include_in_acv_deal_size,\r\n      intermediate.age,\r\n      intermediate.tcv,\r\n      intermediate.acv,\r\n      intermediate.one_time_ps_value,\r\n      intermediate.one_time_license_value,\r\n      intermediate.pso_recurring_fees,\r\n      intermediate.total_price,\r\n      intermediate.annual_price,\r\n      CASE\r\n        WHEN sbqq_product_subscription_term = 0 AND sbqq_primary_quote IS null THEN SUM(contract_acv)\r\n        WHEN sbqq_product_subscription_term > 0 AND sbqq_product_subscription_term < 12 THEN SUM(tcv) \r\n        ELSE SUM(acv)\r\n      END AS acv_formula\r\n      --intermediate.sbqq_subscription_type,\r\n      --intermediate.product_code,\r\n      --intermediate.product_family,\r\n    FROM intermediate\r\n    {{dbt_utils.group_by(n=109) }}\r\n\r\n), intermediate_acv_sum AS (\r\n    \r\n    SELECT\r\n      intermediate_acv_formula.opportunity_id,\r\n      intermediate_acv_formula.is_deleted,\r\n      intermediate_acv_formula.account_id,\r\n      intermediate_acv_formula.account_name,\r\n      intermediate_acv_formula.sdr_id,\r\n      intermediate_acv_formula.sdr_name,\r\n      intermediate_acv_formula.account_global_region,\r\n      intermediate_acv_formula.company_size_rev,\r\n      intermediate_acv_formula.opportunity_name,\r\n      intermediate_acv_formula.stage_name,\r\n      intermediate_acv_formula.amount,\r\n      intermediate_acv_formula.type,\r\n      intermediate_acv_formula.opp_lead_source,\r\n      intermediate_acv_formula.is_closed,\r\n      intermediate_acv_formula.is_won,\r\n      intermediate_acv_formula.owner_id,\r\n      intermediate_acv_formula.owner_name,\r\n      intermediate_acv_formula.created_day,\r\n      intermediate_acv_formula.created_date,\r\n      intermediate_acv_formula.last_modified_date,\r\n      intermediate_acv_formula.systemmodstamp,\r\n      intermediate_acv_formula.contact_id,\r\n      intermediate_acv_formula.contract_id,\r\n      intermediate_acv_formula.opp_crm,\r\n      intermediate_acv_formula.renewal_type,\r\n      intermediate_acv_formula.renewal_acv,\r\n      intermediate_acv_formula.opp_channel_lead_creation,\r\n      intermediate_acv_formula.opp_medium_lead_creation,\r\n      intermediate_acv_formula.discovery_date,\r\n      intermediate_acv_formula.negotiation_date,\r\n      intermediate_acv_formula.demo_date,\r\n      intermediate_acv_formula.solution_date,\r\n      intermediate_acv_formula.confirmed_value_date,\r\n      intermediate_acv_formula.closing_date,\r\n      intermediate_acv_formula.implement_date,\r\n      intermediate_acv_formula.discovery_day_time,\r\n      intermediate_acv_formula.demo_day_time,\r\n      intermediate_acv_formula.implement_day_time,\r\n      intermediate_acv_formula.sql_day_time,\r\n      intermediate_acv_formula.voc_day_time,\r\n      intermediate_acv_formula.sql_date,\r\n      intermediate_acv_formula.voc_date,\r\n      intermediate_acv_formula.opp_channel_opportunity_creation,\r\n      intermediate_acv_formula.opp_medium_opportunity_creation,\r\n      intermediate_acv_formula.opp_content_opportunity_creation,\r\n      intermediate_acv_formula.opp_source_opportunity_creation,\r\n      intermediate_acv_formula.csm,\r\n      intermediate_acv_formula.marketing_channel,\r\n      intermediate_acv_formula.opp_channel_first_touch,\r\n      intermediate_acv_formula.opp_content_first_touch,\r\n      intermediate_acv_formula.opp_medium_first_touch,\r\n      intermediate_acv_formula.opp_source_first_touch,\r\n      intermediate_acv_formula.opp_offer_asset_type_opportunity_creation,\r\n      intermediate_acv_formula.opp_offer_asset_subtype_opportunity_creation,\r\n      intermediate_acv_formula.opp_offer_asset_topic_opportunity_creation,\r\n      intermediate_acv_formula.opp_offer_asset_name_opportunity_creation,\r\n      intermediate_acv_formula.opp_offer_asset_name_first_touch,\r\n      intermediate_acv_formula.opp_offer_asset_name_lead_creation,\r\n      intermediate_acv_formula.opp_offer_asset_subtype_first_touch,\r\n      intermediate_acv_formula.opp_offer_asset_subtype_lead_creation,\r\n      intermediate_acv_formula.opp_offer_asset_topic_first_touch,\r\n      intermediate_acv_formula.opp_offer_asset_topic_lead_creation,\r\n      intermediate_acv_formula.opp_offer_asset_type_first_touch,\r\n      intermediate_acv_formula.opp_offer_asset_type_lead_creation,\r\n      intermediate_acv_formula.opp_subchannel_first_touch,\r\n      intermediate_acv_formula.opp_subchannel_lead_creation,\r\n      intermediate_acv_formula.opp_subchannel_opportunity_creation,\r\n      intermediate_acv_formula.discovery_call_date,\r\n      intermediate_acv_formula.opportunity_status,\r\n      intermediate_acv_formula.sql_status_reason,\r\n      intermediate_acv_formula.sql_day,\r\n      intermediate_acv_formula.discovery_call_scheduled_datetime,\r\n      intermediate_acv_formula.discovery_call_completed_datetime,\r\n      intermediate_acv_formula.ao_account_id,\r\n      intermediate_acv_formula.lead_id_converted_from,\r\n      intermediate_acv_formula.close_date,\r\n      intermediate_acv_formula.opp_type_details,\r\n      intermediate_acv_formula.close_day,\r\n      intermediate_acv_formula.opp_source_lead_creation,\r\n      intermediate_acv_formula.opp_campaign_opportunity_creation,\r\n      intermediate_acv_formula.forecast_category,\r\n      intermediate_acv_formula.opp_campaign_first_touch,\r\n      intermediate_acv_formula.acv_deal_size_override,\r\n      intermediate_acv_formula.lead_grade_at_conversion,\r\n      intermediate_acv_formula.renewal_stage,\r\n      intermediate_acv_formula.created_by_id,\r\n      intermediate_acv_formula.quota_credit_renewal,\r\n      intermediate_acv_formula.renewed_contract_id,\r\n      intermediate_acv_formula.quota_credit,\r\n      intermediate_acv_formula.primary_quote_id,\r\n      intermediate_acv_formula.quota_credit_new_business,\r\n      intermediate_acv_formula.quota_credit_one_time,\r\n      intermediate_acv_formula.submitted_for_approval,\r\n      intermediate_acv_formula.acv_add_back,\r\n      intermediate_acv_formula.trigger_renewal_value,\r\n      intermediate_acv_formula.sbqq_primary_quote,\r\n      intermediate_acv_formula.sbqq_product_subscription_term,\r\n      intermediate_acv_formula.contract_acv,\r\n      intermediate_acv_formula.industry,\r\n      intermediate_acv_formula.industry_bucket,\r\n     -- intermediate_acv_formula.segment,\r\n      intermediate_acv_formula.include_in_acv_deal_size,\r\n      intermediate_acv_formula.age,\r\n      SUM(intermediate_acv_formula.one_time_ps_value) AS one_time_ps_value,\r\n      SUM(intermediate_acv_formula.one_time_license_value) AS one_time_license_value,\r\n      SUM(intermediate_acv_formula.pso_recurring_fees) AS pso_recurring_fees,\r\n      SUM(intermediate_acv_formula.tcv) AS tcv,\r\n      SUM(intermediate_acv_formula.acv) AS acv,\r\n      SUM(intermediate_acv_formula.total_price) AS total_price,\r\n      SUM(intermediate_acv_formula.annual_price) AS annual_price,\r\n      SUM(intermediate_acv_formula.acv_formula) AS acv_formula\r\n    FROM intermediate_acv_formula\r\n    {{dbt_utils.group_by(n=102) }}\r\n\r\n), intermediate_acv_deal_size AS (\r\n    \r\n    SELECT\r\n      intermediate_acv_sum.*,\r\n      CASE\r\n        WHEN account_global_region IN ('EUROPE','ROW','AUNZ') THEN 'EMEA'\r\n        WHEN company_size_rev IN ('SMB') OR company_size_rev IS null THEN 'Velocity'\r\n        WHEN company_size_rev IN ('Mid-Market','Enterprise') THEN 'Upmarket'\r\n        ELSE null\r\n      END AS segment, \r\n      CASE\r\n        WHEN acv_deal_size_override > 0 AND is_closed = false AND submitted_for_approval = false THEN acv_deal_size_override\r\n        WHEN type = 'Renewal' THEN SUM(acv_add_back + trigger_renewal_value)\r\n        WHEN include_in_acv_deal_size=false THEN 0\r\n        WHEN include_in_acv_deal_size=true AND acv_formula=0 AND one_time_ps_value=0 AND one_time_license_value=0 AND pso_recurring_fees=0 THEN amount\r\n        ELSE acv_formula\r\n      END AS acv_deal_size_usd\r\n    FROM intermediate_acv_sum\r\n    {{dbt_utils.group_by(n=110) }}\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        intermediate_acv_deal_size.*,\r\n        CASE \r\n            WHEN acv_deal_size_usd <= '9999' THEN '< 10K'\r\n            WHEN acv_deal_size_usd > '9999' AND acv_deal_size_usd <= '14999' THEN '10-15K'\r\n            WHEN acv_deal_size_usd > '14999' AND acv_deal_size_usd <= '19999' THEN '15-20K'\r\n            WHEN acv_deal_size_usd > '19999' AND acv_deal_size_usd <= '24999' THEN '20-25K'\r\n            WHEN acv_deal_size_usd > '24999' AND acv_deal_size_usd <= '29999' THEN '25-30K'\r\n            ELSE '30K+'\r\n        END AS deal_size_range,\r\n        CASE \r\n            WHEN LOWER(opp_channel_lead_creation) = 'organic' THEN 'Organic'\r\n            WHEN LOWER(opp_channel_lead_creation) IS null THEN 'Unknown'\r\n            WHEN LOWER(opp_channel_lead_creation) = 'social' AND LOWER(opp_medium_lead_creation) = 'social-organic' THEN 'Social - Organic'\r\n            WHEN LOWER(opp_channel_lead_creation) = 'social' AND LOWER(opp_medium_lead_creation) = 'social-paid' THEN 'Paid Social'\r\n            WHEN LOWER(opp_channel_lead_creation) = 'ppc' THEN 'PPC/Paid Search'\r\n            WHEN LOWER(opp_channel_lead_creation) = 'email' AND LOWER(opp_source_lead_creation) like '%act-on%' THEN 'Paid Email' \r\n            WHEN LOWER(opp_channel_lead_creation) = 'ppl' AND LOWER(opp_medium_lead_creation) = 'syndication partner' THEN 'PPL'\r\n            WHEN LOWER(opp_channel_lead_creation) IN ('prospecting','ppl') AND LOWER(opp_medium_lead_creation) = 'intent partner' THEN 'Intent Partners'\r\n            WHEN LOWER(opp_channel_lead_creation) = 'event' THEN 'Events and Trade Shows'\r\n            WHEN LOWER(opp_channel_lead_creation) = 'partner' THEN 'Partners'\r\n            ELSE 'Other'\r\n        END AS channel_bucket\r\n    FROM intermediate_acv_deal_size\r\n)\r\n\r\nSELECT DISTINCT\r\n*\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff", "macro.dbt_utils.group_by"], "nodes": ["source.acton_marketing_data.salesforce.opportunity", "model.acton_marketing_data.contract_source_xf", "model.acton_marketing_data.opportunity_line_item_xf", "model.acton_marketing_data.quote_line", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "opp_source_xf"], "unique_id": "model.acton_marketing_data.opp_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "opp_source_xf.sql", "original_file_path": "models/opp_source_xf.sql", "name": "opp_source_xf", "alias": "opp_source_xf", "checksum": {"name": "sha256", "checksum": "008d65d5de7d51cf72c6dfc6f0689494f7659af955a5159be657875e3843826c"}, "tags": [], "refs": [["contract_source_xf"], ["opportunity_line_item_xf"], ["quote_line"], ["user_source_xf"], ["user_source_xf"]], "sources": [["salesforce", "opportunity"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.1988475}, "model.acton_marketing_data.lead_mql_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    person_id,\r\n    email,\r\n    is_hand_raiser,\r\n    mql_created_date,\r\n    mql_most_recent_date,\r\n    working_date,\r\n    person_status,\r\n    country,\r\n    company,\r\n    first_name,\r\n    last_name,\r\n    title,\r\n    person_owner_id,\r\n    global_region,\r\n    company_size_rev,\r\n    lead_source,\r\n    segment,\r\n    industry,\r\n    industry_bucket,\r\n    channel_bucket,\r\n    offer_asset_name_lead_creation\r\nFROM {{ref('person_source_xf')}}\r\nWHERE mql_most_recent_date IS NOT null\r\nAND person_owner_id != '00Ga0000003Nugr' -- AO-Fake Leads\r\nAND email NOT LIKE '%act-on.com'\r\n--AND lead_source = 'Marketing'", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.person_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "lead_mql_source_xf"], "unique_id": "model.acton_marketing_data.lead_mql_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "lead_mql_source_xf.sql", "original_file_path": "models/lead_mql_source_xf.sql", "name": "lead_mql_source_xf", "alias": "lead_mql_source_xf", "checksum": {"name": "sha256", "checksum": "fd2bda43663367846dab1e5d2c05d915ab3ee5ee1758f79fadd16e8988a37512"}, "tags": [], "refs": [["person_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2240977}, "model.acton_marketing_data.opp_voc_source_ss_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    opportunity_id,\r\n    opportunity_name,\r\n    user_name AS owner_name,\r\n    owner_id,\r\n    opp_source_xf.is_closed,\r\n    opp_source_xf.is_won,\r\n    negotiation_date,\r\n    stage_name,\r\n    opp_lead_source,\r\n    CASE \r\n        WHEN type in ('New Business') THEN 'New Business'\r\n        WHEN type in ('UpSell','Non-Monetary Mod','Admin Opp','Trigger Up','Trigger Down','Trigger Renewal','Renewal','Multiyear Renewal','Admin Conversion','One Time','Downsell') THEN 'Upsell'\r\n        ELSE null\r\n    END AS grouped_type,\r\n    opp_channel_opportunity_creation, \r\n    opp_channel_lead_creation,\r\n    opp_medium_opportunity_creation,\r\n    opp_medium_lead_creation,\r\n    opp_source_opportunity_creation, \r\n    opp_source_lead_creation,\r\n    type,\r\n    acv_deal_size_usd AS acv,\r\n    billing_country AS country,\r\n    account_global_region\r\nFROM {{ref('opp_source_xf')}}\r\nLEFT JOIN {{ref('user_source_xf')}} ON\r\nopp_source_xf.owner_id=user_source_xf.user_id\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nWHERE negotiation_date IS NOT null\r\nAND stage_name = 'VOC/Negotiate'\r\n--AND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed','SQL','Discovery','Demo')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "opp_voc_source_ss_xf"], "unique_id": "model.acton_marketing_data.opp_voc_source_ss_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "opp_voc_source_ss_xf.sql", "original_file_path": "models/opp_voc_source_ss_xf.sql", "name": "opp_voc_source_ss_xf", "alias": "opp_voc_source_ss_xf", "checksum": {"name": "sha256", "checksum": "323de433b2306f8d22828b356dd7bbc868066934ab83826eb9f13524c558e4b3"}, "tags": [], "refs": [["opp_source_xf"], ["user_source_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2262108}, "model.acton_marketing_data.email_opens_ao_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nwith base as (\r\nselect * from \"acton\".public.\"email_opens_ao_2020Q1\"\r\nunion all\r\nselect * from \"acton\".public.\"email_opens_ao_2020Q2\"\r\nunion all\r\nselect * from \"acton\".public.\"email_opens_ao_2020Q3\"\r\nunion all\r\nselect * from \"acton\".public.\"email_opens_ao_2020Q4\"\r\nunion all\r\nselect * from \"acton\".public.\"email_opens_ao_2021Q1\"\r\n\r\n)\r\nselect *\r\nfrom base", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "email_opens_ao_xf"], "unique_id": "model.acton_marketing_data.email_opens_ao_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "email_opens_ao_xf.sql", "original_file_path": "models/email_opens_ao_xf.sql", "name": "email_opens_ao_xf", "alias": "email_opens_ao_xf", "checksum": {"name": "sha256", "checksum": "873a51d9822d9d9997dd9ead86e6180c065764cae621f239964bf7e3f90379e3"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2285855}, "model.acton_marketing_data.lead_source_ss_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT *\r\nFROM \"acton\".salesforce.\"lead\"\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        id AS lead_id,\r\n        is_deleted,\r\n        first_name,\r\n        last_name, \r\n        title,\r\n        company,\r\n        state,\r\n        country,\r\n        email,\r\n        lead_source,\r\n        status AS lead_status,\r\n        industry,\r\n        annual_revenue,\r\n        number_of_employees,\r\n        owner_id AS lead_owner,\r\n        is_converted,\r\n        DATE_TRUNC('day',converted_date)::Date AS converted_date,\r\n        converted_account_id,\r\n        converted_contact_id,\r\n        converted_opportunity_id,\r\n        last_modified_date,\r\n        DATE_TRUNC('day',created_date)::Date AS created_date,\r\n        system_modstamp AS systemmodstamp,\r\n        DATE_TRUNC('day',mql_created_date_c)::Date AS mql_created_date,\r\n        DATE_TRUNC('day',mql_most_recent_date_c)::Date AS mql_most_recent_date,\r\n        DATE_TRUNC('day',date_time_to_working_c)::Date AS working_date,\r\n        account_c AS account_id,\r\n        no_longer_with_company_c AS no_longer_with_company,\r\n        ft_utm_channel_c AS channel_first_touch,\r\n        lt_utm_channel_c AS channel_last_touch,\r\n        lt_utm_medium_c AS medium_last_touch,\r\n        lt_utm_content_c AS content_last_touch,\r\n        lt_utm_source_c AS source_last_touch,\r\n        lt_utm_campaign_c AS campaign_last_touch,\r\n        channel_lead_creation_c AS channel_lead_creation,\r\n        medium_lead_creation_c AS medium_lead_creation,\r\n        hand_raiser_c AS is_hand_raiser,\r\n        ft_subchannel_c AS subchannel_first_touch,\r\n        lt_subchannel_c AS subchannel_last_touch,\r\n        lc_subchannel_c AS subchannel_lead_creation,\r\n        ft_offer_asset_type_c AS offer_asset_type_first_touch,\r\n        ft_offer_asset_subtype_c AS offer_asset_subtype_first_touch,\r\n        ft_offer_asset_topic_c AS offer_asset_topic_first_touch,\r\n        ft_offer_asset_name_c AS offer_asset_name_first_touch,\r\n        lc_offer_asset_type_c AS offer_asset_type_lead_creation,\r\n        lc_offer_asset_subtype_c AS offer_asset_subtype_lead_creation,\r\n        lc_offer_asset_topic_c AS offer_asset_topic_lead_creation,\r\n        lc_offer_asset_name_c AS offer_asset_name_lead_creation,\r\n        lt_offer_asset_type_c AS offer_asset_type_last_touch,\r\n        lt_offer_asset_subtype_c AS offer_asset_subtype_last_touch,\r\n        lt_offer_asset_topic_c AS offer_asset_topic_last_touch,\r\n        lt_offer_asset_name_c AS offer_asset_name_last_touch,\r\n        lean_data_a_2_b_account_c AS lean_data_account_id,\r\n        de_current_marketing_automation_c AS current_ma,\r\n        de_current_crm_c AS current_crm,\r\n        DATE_TRUNC('day',marketing_lead_creation_date_c)::Date AS marketing_created_date,\r\n        mql_created_time_c AS mql_created_datetime,\r\n        mql_most_recent_time_c AS mql_most_recent_datetime,\r\n        article_14_notice_date_c AS article_14_notice_date,\r\n        x_9883_lead_score_c AS lead_score,\r\n        ft_utm_medium_c AS medium_first_touch,\r\n        ft_utm_source_c AS source_first_touch,\r\n        ft_utm_campaign_c AS campaign_first_touch,\r\n        channel_lead_creation_c AS lead_channel_forecast,\r\n        email_bounced_reason,\r\n        legitimate_basis_c AS legitimate_basis,\r\n        email_bounced_date,\r\n        source_lead_creation_c AS source_lead_creation,\r\n        campaign_lead_creation_c AS campaign_lead_creation,\r\n        firmographic_demographic_lead_score_c AS firmographic_demographic_lead_score,\r\n        do_not_contact_c AS do_not_contact,\r\n        form_consent_opt_in_c AS form_consent_opt_in,\r\n        CASE \r\n            WHEN annual_revenue <= 49999999 THEN 'SMB'\r\n            WHEN annual_revenue > 49999999 AND annual_revenue <= 499999999 THEN 'Mid-Market'\r\n            WHEN annual_revenue > 499999999 THEN 'Enterprise'\r\n        END AS company_size_rev,\r\n        CASE \r\n            WHEN LOWER(channel_lead_creation_c) = 'organic' THEN 'Organic'\r\n            WHEN LOWER(channel_lead_creation_c) IS null THEN 'Unknown'\r\n            WHEN LOWER(channel_lead_creation_c) = 'social' AND LOWER(medium_lead_creation_c) = 'social-organic' THEN 'Social - Organic'\r\n            WHEN LOWER(channel_lead_creation_c) = 'social' AND LOWER(medium_lead_creation_c) = 'social-paid' THEN 'Paid Social'\r\n            WHEN LOWER(channel_lead_creation_c) = 'ppc' THEN 'PPC/Paid Search'\r\n            WHEN LOWER(channel_lead_creation_c) = 'email' AND LOWER(source_lead_creation_c) like '%act-on%' THEN 'Paid Email' \r\n            WHEN LOWER(channel_lead_creation_c) = 'ppl' AND LOWER(medium_lead_creation_c) = 'syndication partner' THEN 'PPL'\r\n            WHEN LOWER(channel_lead_creation_c) IN ('prospecting','ppl') AND LOWER(medium_lead_creation_c) = 'intent partner' THEN 'Intent Partners'\r\n            WHEN LOWER(channel_lead_creation_c) = 'event' THEN 'Events and Trade Shows'\r\n            WHEN LOWER(channel_lead_creation_c) = 'partner' THEN 'Partners'\r\n            ELSE 'Other'\r\n        END AS channel_bucket,\r\n        CASE\r\n            WHEN country IS NOT null AND country IN ('GB','UK','IE','DE','DK','FI','IS','NO','SE','FR','AL','AD','AM','AT','BY','BE','BA','BG','HR','CS','CY','CZ','EE','FX','GE','GR','HU','IT','LV','LI','LT','LU','MK','MT','MD','MC','ME','NL','PL','PT','RO','SM','RS','SJ','SK','SI','ES','CH','UA','VA','FO','GI','GG','IM','JE','XK','RU','United Kingdom','England') THEN 'EUROPE'\r\n            WHEN country IS NOT null AND country IN ('JP','KR','CN','MN','TW','VN','HK','LA','TH','KH','PH','MY','SG','ID','LK','IN','NP','BT','MM','PK','AF','KG','UZ','TM','KZ') THEN 'APJ'\r\n            WHEN country IS NOT null AND country IN ('AU','CX','NZ','NF','Australia','New Zealand') THEN 'AUNZ'\r\n            WHEN country IS NOT null AND country IN ('AR','BO','BR','BZ','CL','CO','CU','CR','DO','EC','FK','GF','GS','GY','GT','HN','MX','NI','PA','PE','PR','PY','SR','SV','UY','VE')THEN 'LATAM'\r\n            WHEN state IS NOT null AND state IN ('CA','NV','UT','AK','MO','CO','HI','OK','IL','AR','NE','MI','KS','OR','WA','ID','WI','MN','ND','SD','MT','WY','IA','NB','ON','PE','QC','AB','BC','MB','SK','NL','NS','YT','NU','NT') THEN 'NA-WEST'\r\n            WHEN state IS NOT null AND state IN ('NY','CT','MA','VT','NH','ME','NJ','RI','TX','AZ','NM','MS','LA','AL','TN','KY','OH','IN','GA','FL','NC','SC','PA','DC','DE','MD','VA','WV') THEN 'NA-EAST'\r\n            WHEN country IS NOT null AND country IN ('AG','AI','AN','AW','BB','BM','BS','DM','GD','GP','HT','JM','KN','LC','MQ','MS','TC','TT','VC','VG','VI') THEN 'NA-EAST'\r\n            WHEN country IS NOT null AND country IN ('US','CA') AND state IS null  THEN 'NA-NO-STATEPROV'\r\n            WHEN country IS NOT null AND state IS NOT null THEN 'ROW'\r\n            ELSE 'Unknown'\r\n        END AS global_region,\r\n        COALESCE(account_c,lean_data_a_2_b_account_c) AS person_account_id\r\n    FROM base\r\n    WHERE base.owner_id != '00Ga0000003Nugr' -- AO-Fake Leads\r\n\r\n)\r\n\r\nSELECT \r\nfinal.*,\r\nCASE\r\n    WHEN global_region IN ('EUROPE','ROW','AUNZ') THEN 'EMEA'\r\n    WHEN company_size_rev IN ('SMB') OR company_size_rev IS null THEN 'Velocity'\r\n    WHEN company_size_rev IN ('Mid-Market','Enterprise') THEN 'Upmarket'\r\n    ELSE null\r\nEND AS segment\r\nFROM final\r\nWHERE lead_status IN ('Suspect','Responded','RTM')", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "lead_source_ss_xf"], "unique_id": "model.acton_marketing_data.lead_source_ss_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "lead_source_ss_xf.sql", "original_file_path": "models/lead_source_ss_xf.sql", "name": "lead_source_ss_xf", "alias": "lead_source_ss_xf", "checksum": {"name": "sha256", "checksum": "8e0aca73165037ef743eaafa698aa42953476ccd8f519056c15840e456f0dfa6"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2307074}, "model.acton_marketing_data.sqos_influenced_by_email_clicks_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH opp_with_contact_base AS (\r\n\r\n    SELECT *\r\n    FROM {{ref('opportunities_with_contacts')}}\r\n\r\n), email_click_base AS (\r\n    \r\n    SELECT *\r\n    FROM {{ref('email_clicks_ao_xf')}}\r\n\r\n) , sum_base AS (\r\n\r\n    SELECT \r\n        email_click_base.email,\r\n        action_time,\r\n        message_title,\r\n        automated_program_name,\r\n        campaign_name,\r\n        is_current_customer,\r\n        is_hand_raiser,\r\n        mql_created_date,\r\n        close_date,\r\n        is_won,\r\n        opp_created_date,\r\n        discovery_date,\r\n        stage_name,\r\n        acv,\r\n        opp_lead_source,\r\n        type,\r\n        opportunity_id AS opps\r\n    FROM email_click_base\r\n    LEFT JOIN opp_with_contact_base ON \r\n    email_click_base.email=opp_with_contact_base.email\r\n    WHERE opportunity_id IS NOT null\r\n    --GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\r\n\r\n), final AS (\r\n\r\n    SELECT DISTINCT\r\n        automated_program_name,\r\n        message_title,\r\n        campaign_name,\r\n        action_time,\r\n        stage_name,\r\n        discovery_date,\r\n        type,\r\n        opps,\r\n        acv\r\n    FROM sum_base\r\n    WHERE discovery_date IS NOT null\r\n    AND discovery_date>=action_time::Date\r\n    AND automated_program_name IS NOT null\r\n    AND automated_program_name != ''\r\n    AND automated_program_name NOT LIKE '%Conf%'\r\n    --AND type = 'New Business'\r\n    --AND discovery_date >= '2021-01-01'\r\n    \r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opportunities_with_contacts", "model.acton_marketing_data.email_clicks_ao_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "sqos_influenced_by_email_clicks_xf"], "unique_id": "model.acton_marketing_data.sqos_influenced_by_email_clicks_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sqos_influenced_by_email_clicks_xf.sql", "original_file_path": "models/sqos_influenced_by_email_clicks_xf.sql", "name": "sqos_influenced_by_email_clicks_xf", "alias": "sqos_influenced_by_email_clicks_xf", "checksum": {"name": "sha256", "checksum": "487b203c4ddfe812728879510856d7021b5b4b517dbca8e5f49e4ecfda0f389f"}, "tags": [], "refs": [["opportunities_with_contacts"], ["email_clicks_ao_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2326944}, "model.acton_marketing_data.task_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\nWITH base AS (\r\nSELECT *\r\nFROM {{ source('salesforce', 'task') }}\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        id AS task_id,\r\n        what_id,\r\n        subject,\r\n        activity_date,\r\n        status,\r\n        owner_id,\r\n        is_deleted,\r\n        account_id,\r\n        is_closed,\r\n        created_date AS task_created_date,\r\n        last_modified_date,\r\n        system_modstamp,\r\n        is_archived,\r\n        record_type_id,\r\n        who_id,\r\n        type,\r\n        closed_date_c AS close_date\r\n    FROM base\r\n\r\n)\r\n\r\nSELECT*\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.task"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "task_source_xf"], "unique_id": "model.acton_marketing_data.task_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "task_source_xf.sql", "original_file_path": "models/task_source_xf.sql", "name": "task_source_xf", "alias": "task_source_xf", "checksum": {"name": "sha256", "checksum": "5b8b2f107b274bc66f81f35ba18d936fe5d21c439639931eaeeb5eb203cb21b0"}, "tags": [], "refs": [], "sources": [["salesforce", "task"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2347665}, "model.acton_marketing_data.sqo_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\nopportunity_id,\r\nopportunity_name,\r\nuser_name AS owner_name,\r\nopp_source_xf.account_name,\r\nsdr_name,\r\nowner_id,\r\nopp_source_xf.is_closed,\r\nopp_source_xf.is_won,\r\ndiscovery_date,\r\ncreated_date,\r\nclose_day AS close_date,\r\nstage_name,\r\nopp_lead_source,\r\ncase \r\nwhen type in ('New Business') then 'New Business'\r\nwhen type in ('UpSell','Non-Monetary Mod','Admin Opp','Trigger Up','Trigger Down','Trigger Renewal','Renewal','Multiyear Renewal','Admin Conversion','One Time','Downsell') then 'Upsell'\r\nelse null\r\nend as grouped_type,\r\nopp_channel_opportunity_creation, \r\nopp_channel_lead_creation,\r\nopp_medium_opportunity_creation,\r\nopp_medium_lead_creation,\r\nopp_source_opportunity_creation, \r\nopp_source_lead_creation,\r\ntype,\r\nacv_deal_size_usd AS acv,\r\nbilling_country AS country,\r\naccount_global_region,\r\nopp_source_xf.segment,\r\nopp_source_xf.industry,\r\nopp_source_xf.industry_bucket,\r\nchannel_bucket,\r\nopp_source_xf.company_size_rev,\r\nopp_source_xf.opp_offer_asset_name_lead_creation\r\nFROM {{ref('opp_source_xf')}}\r\nLEFT JOIN {{ref('user_source_xf')}} ON\r\nopp_source_xf.owner_id=user_source_xf.user_id\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nWHERE discovery_date IS NOT null\r\nAND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed','SQL','SQL - No Opportunity')\r\n--AND type = 'New Business'", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "sqo_source_xf"], "unique_id": "model.acton_marketing_data.sqo_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sqo_source_xf.sql", "original_file_path": "models/sqo_source_xf.sql", "name": "sqo_source_xf", "alias": "sqo_source_xf", "checksum": {"name": "sha256", "checksum": "5443b5f02767cfba03565630c13fd34b6e790f7dbc26287c780971e48d6b88a3"}, "tags": [], "refs": [["opp_source_xf"], ["user_source_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2367256}, "model.acton_marketing_data.opp_demo_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    opportunity_id,\r\n    opportunity_name,\r\n    user_name AS owner_name,\r\n    opp_source_xf.account_name,\r\n    owner_id,\r\n    opp_source_xf.is_closed,\r\n    opp_source_xf.is_won,\r\n    demo_date,\r\n    solution_date,\r\n    confirmed_value_date,\r\n    stage_name,\r\n    opp_lead_source,\r\n    CASE \r\n        WHEN type in ('New Business') THEN 'New Business'\r\n        WHEN type in ('UpSell','Non-Monetary Mod','Admin Opp','Trigger Up','Trigger Down','Trigger Renewal','Renewal','Multiyear Renewal','Admin Conversion','One Time','Downsell') THEN 'Upsell'\r\n        ELSE null\r\n    END AS grouped_type,\r\n    opp_channel_opportunity_creation, \r\n    opp_channel_lead_creation,\r\n    opp_medium_opportunity_creation,\r\n    opp_medium_lead_creation,\r\n    opp_source_opportunity_creation, \r\n    opp_source_lead_creation,\r\n    type,\r\n    acv_deal_size_usd AS acv,\r\n    billing_country AS country,\r\n    account_global_region,\r\n    opp_source_xf.company_size_rev,\r\n    opp_source_xf.segment,\r\n    opp_source_xf.industry,\r\n    opp_source_xf.industry_bucket,\r\n    opp_source_xf.channel_bucket,\r\n    opp_source_xf.opp_offer_asset_name_lead_creation\r\nFROM {{ref('opp_source_xf')}}\r\nLEFT JOIN {{ref('user_source_xf')}} ON\r\nopp_source_xf.owner_id=user_source_xf.user_id\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nWHERE demo_date IS NOT null\r\n--AND stage_name = 'Demo'\r\nAND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed','SQL','Discovery','Implement')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "opp_demo_source_xf"], "unique_id": "model.acton_marketing_data.opp_demo_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "opp_demo_source_xf.sql", "original_file_path": "models/opp_demo_source_xf.sql", "name": "opp_demo_source_xf", "alias": "opp_demo_source_xf", "checksum": {"name": "sha256", "checksum": "b0bfdfa1be3382b3935a7486159b5bd03270bf647f938aa380e99aca7b2075c1"}, "tags": [], "refs": [["opp_source_xf"], ["user_source_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.239015}, "model.acton_marketing_data.opp_sales_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\nopportunity_id,\r\nopportunity_name,\r\nopp_source_xf.account_name,\r\nuser_name AS owner_name,\r\nclose_day AS close_date,\r\nopp_lead_source,\r\nopp_channel_opportunity_creation, \r\nopp_medium_opportunity_creation,\r\nopp_source_opportunity_creation, \r\nopp_channel_lead_creation,\r\nopp_medium_lead_creation,\r\nopp_source_lead_creation,\r\nopp_offer_asset_name_lead_creation,\r\nopp_offer_asset_subtype_lead_creation,\r\nopp_offer_asset_topic_lead_creation,\r\nopp_offer_asset_type_lead_creation,\r\ntype,\r\ncase \r\nwhen type in ('New Business') then 'New Business'\r\nwhen type in ('UpSell','Non-Monetary Mod','Admin Opp','Trigger Up','Trigger Down','Trigger Renewal','Renewal','Multiyear Renewal','Admin Conversion','One Time','Downsell') then 'Upsell'\r\nelse null\r\nend as grouped_type,\r\nacv,\r\nbilling_country AS country,\r\naccount_global_region,\r\n    opp_source_xf.company_size_rev,\r\n    opp_source_xf.segment,\r\n    opp_source_xf.industry,\r\n    opp_source_xf.industry_bucket,\r\n    opp_source_xf.channel_bucket\r\nFROM {{ref('opp_source_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.opp_source_xf\r\nLEFT JOIN {{ref('user_source_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.user_source_xf ON\r\nopp_source_xf.owner_id=user_source_xf.user_id\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.account_source_xf ON \r\nopp_source_xf.account_id=account_source_xf.account_id\r\nWHERE close_day IS NOT null\r\nAND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed')\r\nAND is_won = '1'", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "opp_sales_source_xf"], "unique_id": "model.acton_marketing_data.opp_sales_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "opp_sales_source_xf.sql", "original_file_path": "models/opp_sales_source_xf.sql", "name": "opp_sales_source_xf", "alias": "opp_sales_source_xf", "checksum": {"name": "sha256", "checksum": "143a577aaf21e20aaba0b560b998330407908e338393747862f75455896ff9b7"}, "tags": [], "refs": [["opp_source_xf"], ["user_source_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2414873}, "model.acton_marketing_data.opp_voc_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    opportunity_id,\r\n    opportunity_name,\r\n    user_name AS owner_name,\r\n    opp_source_xf.account_name,\r\n    owner_id,\r\n    opp_source_xf.is_closed,\r\n    opp_source_xf.is_won,\r\n    voc_date AS negotiation_date,\r\n    stage_name,\r\n    opp_lead_source,\r\n    CASE \r\n        WHEN type in ('New Business') THEN 'New Business'\r\n        WHEN type in ('UpSell','Non-Monetary Mod','Admin Opp','Trigger Up','Trigger Down','Trigger Renewal','Renewal','Multiyear Renewal','Admin Conversion','One Time','Downsell') THEN 'Upsell'\r\n        ELSE null\r\n    END AS grouped_type,\r\n    opp_channel_opportunity_creation, \r\n    opp_channel_lead_creation,\r\n    opp_medium_opportunity_creation,\r\n    opp_medium_lead_creation,\r\n    opp_source_opportunity_creation, \r\n    opp_source_lead_creation,\r\n    type,\r\n    acv_deal_size_usd AS acv,\r\n    billing_country AS country,\r\n    account_global_region,\r\n    opp_source_xf.company_size_rev,\r\n    opp_source_xf.segment,\r\n    opp_source_xf.industry,\r\n    opp_source_xf.industry_bucket,\r\n    opp_source_xf.channel_bucket,\r\n    opp_source_xf.opp_offer_asset_name_lead_creation\r\nFROM {{ref('opp_source_xf')}}\r\nLEFT JOIN {{ref('user_source_xf')}} ON\r\nopp_source_xf.owner_id=user_source_xf.user_id\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nWHERE voc_date IS NOT null\r\nAND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed','SQL','Discovery','Demo','Implement')\r\nORDER BY 7 DESC", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "opp_voc_source_xf"], "unique_id": "model.acton_marketing_data.opp_voc_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "opp_voc_source_xf.sql", "original_file_path": "models/opp_voc_source_xf.sql", "name": "opp_voc_source_xf", "alias": "opp_voc_source_xf", "checksum": {"name": "sha256", "checksum": "5a095f49b477be0fe0c8b2ab6cb9dc02744d9f8b7b6b31f7acbb25453e2eb075"}, "tags": [], "refs": [["opp_source_xf"], ["user_source_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2438264}, "model.acton_marketing_data.lead_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT *\r\nFROM {{ source('salesforce', 'lead') }}\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        id AS lead_id,\r\n        is_deleted,\r\n        base.created_by_id,\r\n        creator.user_name AS created_by_name,\r\n        first_name,\r\n        last_name, \r\n        title,\r\n        company,\r\n        state,\r\n        country,\r\n        email,\r\n        lead_source,\r\n        status AS lead_status,\r\n        de_industry_c AS industry,\r\n        CASE\r\n            WHEN de_industry_c IN ('Business Services') THEN 'Business Services'\r\n            WHEN de_industry_c IN ('Finance','Insurance') THEN 'Finance'\r\n            WHEN de_industry_c IN ('Manufacturing') THEN 'Manufacturing'\r\n            WHEN de_industry_c IN ('Software','Telecommunications') THEN 'SoftCom'\r\n            ELSE 'Other'\r\n        END AS industry_bucket,\r\n        annual_revenue,\r\n        number_of_employees,\r\n        owner_id AS lead_owner_id,\r\n        is_converted,\r\n        DATE_TRUNC('day',converted_date)::Date AS converted_date,\r\n        converted_account_id,\r\n        converted_contact_id,\r\n        converted_opportunity_id,\r\n        last_modified_date,\r\n        DATE_TRUNC('day',created_date)::Date AS created_date,\r\n        system_modstamp AS systemmodstamp,\r\n        DATE_TRUNC('day',mql_created_date_c)::Date AS mql_created_date,\r\n        DATE_TRUNC('day',mql_most_recent_date_c)::Date AS mql_most_recent_date,\r\n        DATE_TRUNC('day',date_time_to_working_c)::Date AS working_date,\r\n        account_c AS account_id,\r\n        no_longer_with_company_c AS no_longer_with_company,\r\n        ft_utm_channel_c AS channel_first_touch,\r\n        lt_utm_channel_c AS channel_last_touch,\r\n        lt_utm_medium_c AS medium_last_touch,\r\n        lt_utm_content_c AS content_last_touch,\r\n        lt_utm_source_c AS source_last_touch,\r\n        lt_utm_campaign_c AS campaign_last_touch,\r\n        channel_lead_creation_c AS channel_lead_creation,\r\n        medium_lead_creation_c AS medium_lead_creation,\r\n        hand_raiser_c AS is_hand_raiser,\r\n        ft_subchannel_c AS subchannel_first_touch,\r\n        lt_subchannel_c AS subchannel_last_touch,\r\n        lc_subchannel_c AS subchannel_lead_creation,\r\n        ft_offer_asset_type_c AS offer_asset_type_first_touch,\r\n        ft_offer_asset_subtype_c AS offer_asset_subtype_first_touch,\r\n        ft_offer_asset_topic_c AS offer_asset_topic_first_touch,\r\n        ft_offer_asset_name_c AS offer_asset_name_first_touch,\r\n        lc_offer_asset_type_c AS offer_asset_type_lead_creation,\r\n        lc_offer_asset_subtype_c AS offer_asset_subtype_lead_creation,\r\n        lc_offer_asset_topic_c AS offer_asset_topic_lead_creation,\r\n        lc_offer_asset_name_c AS offer_asset_name_lead_creation,\r\n        lt_offer_asset_type_c AS offer_asset_type_last_touch,\r\n        lt_offer_asset_subtype_c AS offer_asset_subtype_last_touch,\r\n        lt_offer_asset_topic_c AS offer_asset_topic_last_touch,\r\n        lt_offer_asset_name_c AS offer_asset_name_last_touch,\r\n        lean_data_a_2_b_account_c AS lean_data_account_id,\r\n        de_current_marketing_automation_c AS current_ma,\r\n        de_current_crm_c AS current_crm,\r\n        DATE_TRUNC('day',marketing_lead_creation_date_c)::Date AS marketing_created_date,\r\n        mql_created_time_c AS mql_created_datetime,\r\n        mql_most_recent_time_c AS mql_most_recent_datetime,\r\n        article_14_notice_date_c AS article_14_notice_date,\r\n        x_9883_lead_score_c AS lead_score,\r\n        ft_utm_medium_c AS medium_first_touch,\r\n        ft_utm_source_c AS source_first_touch,\r\n        ft_utm_campaign_c AS campaign_first_touch,\r\n        channel_lead_creation_c AS lead_channel_forecast,\r\n        email_bounced_reason,\r\n        legitimate_basis_c AS legitimate_basis,\r\n        email_bounced_date,\r\n        source_lead_creation_c AS source_lead_creation,\r\n        campaign_lead_creation_c AS campaign_lead_creation,\r\n        firmographic_demographic_lead_score_c AS firmographic_demographic_lead_score,\r\n        do_not_contact_c AS do_not_contact,\r\n        form_consent_opt_in_c AS form_consent_opt_in,\r\n        CASE \r\n            WHEN annual_revenue <= 49999999 THEN 'SMB'\r\n            WHEN annual_revenue > 49999999 AND annual_revenue <= 499999999 THEN 'Mid-Market'\r\n            WHEN annual_revenue > 499999999 THEN 'Enterprise'\r\n        END AS company_size_rev,\r\n        CASE \r\n            WHEN LOWER(channel_lead_creation_c) = 'organic' THEN 'Organic'\r\n            WHEN LOWER(channel_lead_creation_c) IS null THEN 'Unknown'\r\n            WHEN LOWER(channel_lead_creation_c) = 'social' AND LOWER(medium_lead_creation_c) = 'social-organic' THEN 'Social - Organic'\r\n            WHEN LOWER(channel_lead_creation_c) = 'social' AND LOWER(medium_lead_creation_c) = 'social-paid' THEN 'Paid Social'\r\n            WHEN LOWER(channel_lead_creation_c) = 'ppc' THEN 'PPC/Paid Search'\r\n            WHEN LOWER(channel_lead_creation_c) = 'email' AND LOWER(source_lead_creation_c) like '%act-on%' THEN 'Paid Email' \r\n            WHEN LOWER(channel_lead_creation_c) = 'ppl' AND LOWER(medium_lead_creation_c) = 'syndication partner' THEN 'PPL'\r\n            WHEN LOWER(channel_lead_creation_c) IN ('prospecting','ppl') AND LOWER(medium_lead_creation_c) = 'intent partner' THEN 'Intent Partners'\r\n            WHEN LOWER(channel_lead_creation_c) = 'event' THEN 'Events and Trade Shows'\r\n            WHEN LOWER(channel_lead_creation_c) = 'partner' THEN 'Partners'\r\n            ELSE 'Other'\r\n        END AS channel_bucket,\r\n        CASE\r\n            WHEN country IS NOT null AND country IN ('GB','UK','IE','DE','DK','FI','IS','NO','SE','FR','AL','AD','AM','AT','BY','BE','BA','BG','HR','CS','CY','CZ','EE','FX','GE','GR','HU','IT','LV','LI','LT','LU','MK','MT','MD','MC','ME','NL','PL','PT','RO','SM','RS','SJ','SK','SI','ES','CH','UA','VA','FO','GI','GG','IM','JE','XK','RU','United Kingdom','England') THEN 'EUROPE'\r\n            WHEN country IS NOT null AND country IN ('JP','KR','CN','MN','TW','VN','HK','LA','TH','KH','PH','MY','SG','ID','LK','IN','NP','BT','MM','PK','AF','KG','UZ','TM','KZ') THEN 'APJ'\r\n            WHEN country IS NOT null AND country IN ('AU','CX','NZ','NF','Australia','New Zealand') THEN 'AUNZ'\r\n            WHEN country IS NOT null AND country IN ('AR','BO','BR','BZ','CL','CO','CU','CR','DO','EC','FK','GF','GS','GY','GT','HN','MX','NI','PA','PE','PR','PY','SR','SV','UY','VE')THEN 'LATAM'\r\n            WHEN state IS NOT null AND state IN ('CA','NV','UT','AK','MO','CO','HI','OK','IL','AR','NE','MI','KS','OR','WA','ID','WI','MN','ND','SD','MT','WY','IA','NB','ON','PE','QC','AB','BC','MB','SK','NL','NS','YT','NU','NT') THEN 'NA-WEST'\r\n            WHEN state IS NOT null AND state IN ('NY','CT','MA','VT','NH','ME','NJ','RI','TX','AZ','NM','MS','LA','AL','TN','KY','OH','IN','GA','FL','NC','SC','PA','DC','DE','MD','VA','WV') THEN 'NA-EAST'\r\n            WHEN country IS NOT null AND country IN ('AG','AI','AN','AW','BB','BM','BS','DM','GD','GP','HT','JM','KN','LC','MQ','MS','TC','TT','VC','VG','VI') THEN 'NA-EAST'\r\n            WHEN country IS NOT null AND country IN ('US','CA') AND state IS null  THEN 'NA-NO-STATEPROV'\r\n            WHEN country IS NOT null AND state IS NOT null THEN 'ROW'\r\n            ELSE 'Unknown'\r\n        END AS global_region,\r\n        COALESCE(account_c,lean_data_a_2_b_account_c) AS person_account_id\r\n    FROM base\r\n    LEFT JOIN {{ref('user_source_xf')}} creator ON\r\n    base.created_by_id=creator.user_id\r\n    WHERE base.owner_id != '00Ga0000003Nugr' -- AO-Fake Leads\r\n\r\n)\r\n\r\nSELECT \r\nfinal.*,\r\nCASE\r\n    WHEN global_region IN ('EUROPE','ROW','AUNZ') THEN 'EMEA'\r\n    WHEN company_size_rev IN ('SMB') OR company_size_rev IS null THEN 'Velocity'\r\n    WHEN company_size_rev IN ('Mid-Market','Enterprise') THEN 'Upmarket'\r\n    ELSE null\r\nEND AS segment\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.lead", "model.acton_marketing_data.user_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "lead_source_xf"], "unique_id": "model.acton_marketing_data.lead_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "lead_source_xf.sql", "original_file_path": "models/lead_source_xf.sql", "name": "lead_source_xf", "alias": "lead_source_xf", "checksum": {"name": "sha256", "checksum": "c06441326756d0487ebd73e861a20186bdcf7377a635a9994248e0a110a1d4a2"}, "tags": [], "refs": [["user_source_xf"]], "sources": [["salesforce", "lead"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2460413}, "model.acton_marketing_data.contract_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\nSELECT *\r\nFROM {{ source('salesforce', 'contract') }}\r\n\r\n), final AS (\r\nSELECT\r\nid AS contract_id,\r\naccount_id,\r\nowner_id,\r\nstatus,\r\nis_deleted,\r\nDATE_TRUNC('day',created_date)::Date AS created_date,\r\nDATE_TRUNC('day',created_date)::Date AS end_date,\r\ncreated_by_id,\r\nDATE_TRUNC('day',last_modified_date)::Date AS last_modified_date,\r\nsystem_modstamp AS systemmodstamp,\r\ncontract_status_c AS contract_status,\r\nrelated_opportunity_c AS contract_opportunity_id,\r\nDATE_TRUNC('day',churn_date_c)::Date AS churn_date,\r\ncs_churn_c AS cs_churn,\r\narr_c AS arr,\r\ncontract_acv_c AS contract_acv,\r\nsubscription_term_c AS subscription_term,\r\ncs_churn_recognized_mrr_c AS cs_churn_recognized_mrr,\r\nsales_churn_c AS sales_churn,\r\ncurrent_quarter_debook_value_c AS current_quarter_debook_value,\r\nCASE\r\n    WHEN contract_status_c = 'Cancelled' AND cs_churn_c != false THEN cs_churn_recognized_mrr_c*-12\r\n    WHEN contract_status_c = 'Cancelled' AND sales_churn_c != false THEN current_quarter_debook_value_c\r\n    ELSE 0\r\nEND AS arr_loss_amount\r\nFROM base\r\n\r\n)\r\n\r\nSELECT\r\n*\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.contract"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "contract_source_xf"], "unique_id": "model.acton_marketing_data.contract_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "contract_source_xf.sql", "original_file_path": "models/contract_source_xf.sql", "name": "contract_source_xf", "alias": "contract_source_xf", "checksum": {"name": "sha256", "checksum": "cc568a75faf4d10c06b609bcd1e8c6903699379ab3107fc3e9517ea0846a8626"}, "tags": [], "refs": [], "sources": [["salesforce", "contract"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.248198}, "model.acton_marketing_data.opportunity_history_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT *\r\nFROM {{ source('salesforce', 'opportunity_field_history') }}\r\n\r\n)\r\n\r\nSELECT\r\nid AS opportunity_history_id, \r\nopportunity_id,\r\ncreated_date AS field_modified_at,\r\nfield,\r\nold_value,\r\nnew_value\r\nFROM base\r\nWHERE is_deleted = false", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.opportunity_field_history"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "opportunity_history_xf"], "unique_id": "model.acton_marketing_data.opportunity_history_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "opportunity_history_xf.sql", "original_file_path": "models/opportunity_history_xf.sql", "name": "opportunity_history_xf", "alias": "opportunity_history_xf", "checksum": {"name": "sha256", "checksum": "3249ecca9fa543779e5683c79d3357c7a3ab3d2852d313202ed6fd1c404bfdfa"}, "tags": [], "refs": [], "sources": [["salesforce", "opportunity_field_history"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2503211}, "model.acton_marketing_data.opp_closing_source_ss_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    opportunity_id,\r\n    opportunity_name,\r\n    user_name AS owner_name,\r\n    opp_source_xf.account_name,\r\n    owner_id,\r\n    opp_source_xf.is_closed,\r\n    opp_source_xf.is_won,\r\n    discovery_date,\r\n    stage_name,\r\n    opp_lead_source,\r\n    CASE \r\n        WHEN type in ('New Business') THEN 'New Business'\r\n        WHEN type in ('UpSell','Non-Monetary Mod','Admin Opp','Trigger Up','Trigger Down','Trigger Renewal','Renewal','Multiyear Renewal','Admin Conversion','One Time','Downsell') THEN 'Upsell'\r\n        ELSE null\r\n    END AS grouped_type,\r\n    opp_channel_opportunity_creation, \r\n    opp_channel_lead_creation,\r\n    opp_medium_opportunity_creation,\r\n    opp_medium_lead_creation,\r\n    opp_source_opportunity_creation, \r\n    opp_source_lead_creation,\r\n    type,\r\n    acv_deal_size_usd AS acv,\r\n    billing_country AS country,\r\n    account_global_region\r\nFROM {{ref('opp_source_xf')}}\r\nLEFT JOIN {{ref('user_source_xf')}} ON\r\nopp_source_xf.owner_id=user_source_xf.user_id\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nWHERE discovery_date IS NOT null\r\nAND stage_name = 'Closing'\r\n--AND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed','SQL','Discovery','Demo','VOC/Negotiate')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "opp_closing_source_ss_xf"], "unique_id": "model.acton_marketing_data.opp_closing_source_ss_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "opp_closing_source_ss_xf.sql", "original_file_path": "models/opp_closing_source_ss_xf.sql", "name": "opp_closing_source_ss_xf", "alias": "opp_closing_source_ss_xf", "checksum": {"name": "sha256", "checksum": "4e7b8397f52fc08cd9d5d7123553153250e40808e5107f1e91c76b9323356e9c"}, "tags": [], "refs": [["opp_source_xf"], ["user_source_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.252482}, "model.acton_marketing_data.ao_instance_user_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT *\r\nFROM {{ source('salesforce', 'act_on_instance_user_c') }}\r\n\r\n), final AS (\r\n    SELECT\r\n        base.id AS ao_user_id,\r\n        base.is_deleted,\r\n        base.name AS ao_user_name,\r\n        base.created_date AS ao_user_created_date,\r\n        base.last_modified_date,\r\n        base.system_modstamp AS systemmodstamp,\r\n        base.act_on_instance_c AS ao_user_instance,\r\n        base.email_c AS ao_user_email, \r\n        base.first_name_c AS ao_user_first_name, \r\n        base.last_name_c AS ao_user_last_name, \r\n        base.is_admin_user_c AS is_admin_user,\r\n        base.is_marketing_user_c AS is_marketing_user,\r\n        base.is_sales_user_c AS is_sales_user,\r\n        base.date_user_created_c AS ao_user_date_created,\r\n        base.ao_user_account_id_c AS ao_user_account_id, \r\n        base.contact_c AS ao_user_contact_id,\r\n        base.deleted_c AS deleted,\r\n        base.deleted_date_c AS deleted_date,\r\n        ao_instance_source_xf.ao_instance_name AS ao_user_account_name\r\n    FROM base\r\n    LEFT JOIN {{ref('ao_instance_source_xf')}} ON\r\n    base.act_on_instance_c=ao_instance_source_xf.ao_instance_id\r\n    \r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.act_on_instance_user_c", "model.acton_marketing_data.ao_instance_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "ao_instance_user_source_xf"], "unique_id": "model.acton_marketing_data.ao_instance_user_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "ao_instance_user_source_xf.sql", "original_file_path": "models/ao_instance_user_source_xf.sql", "name": "ao_instance_user_source_xf", "alias": "ao_instance_user_source_xf", "checksum": {"name": "sha256", "checksum": "7bdffb2b18153cc157e05cc438e044b02c2e69ec3ccf8f4e1471860abb4096aa"}, "tags": [], "refs": [["ao_instance_source_xf"]], "sources": [["salesforce", "act_on_instance_user_c"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2547672}, "model.acton_marketing_data.opportunity_line_item_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\nSELECT *\r\nFROM {{ source('salesforce', 'opportunity_line_item') }}\r\n\r\n), final AS (\r\n    SELECT \r\n        id AS line_item_id,\r\n        opportunity_id,\r\n        product_2_id AS product_id,\r\n        name AS line_item_name,\r\n        currency_iso_code,\r\n        discount,\r\n        total_price,\r\n        list_price,\r\n        DATE_TRUNC('day',created_date)::Date AS line_item_created_date,\r\n        DATE_TRUNC('day',last_modified_date)::Date AS last_modified_date,\r\n        system_modstamp AS systemmodstamp,\r\n        is_deleted,\r\n        sbqq_subscription_type_c AS sbqq_subscription_type,\r\n        line_item_mrr_c AS line_item_mrr,\r\n        product_code_c AS product_code,\r\n        annual_price_c AS annual_price,\r\n        discounted_annual_price_c AS discounted_annual_price,\r\n        monthly_gross_c AS monthly_gross,\r\n        monthly_net_c AS monthly_net,\r\n        subscription_type_c AS subscription_type,\r\n        total_discount_c AS total_discount,\r\n        prorate_multiplier_mirror_c AS prorate_multiplier_mirror,\r\n        sbqq_parent_id_c AS sbqq_parent_id,\r\n        opp_product_family_text_c AS product_family\r\n    FROM base\r\n\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.opportunity_line_item"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "opportunity_line_item_xf"], "unique_id": "model.acton_marketing_data.opportunity_line_item_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "opportunity_line_item_xf.sql", "original_file_path": "models/opportunity_line_item_xf.sql", "name": "opportunity_line_item_xf", "alias": "opportunity_line_item_xf", "checksum": {"name": "sha256", "checksum": "a158abf96a1a58e05246ee69f7dfbb96636e68fc45673f98460809b6310dd56d"}, "tags": [], "refs": [], "sources": [["salesforce", "opportunity_line_item"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.256819}, "model.acton_marketing_data.sqo_source_ss_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\nopportunity_id,\r\nopportunity_name,\r\nuser_name AS owner_name,\r\nowner_id,\r\nopp_source_xf.is_closed,\r\nopp_source_xf.is_won,\r\ndiscovery_date,\r\nstage_name,\r\nopp_lead_source,\r\ncase \r\nwhen type in ('New Business') then 'New Business'\r\nwhen type in ('UpSell','Non-Monetary Mod','Admin Opp','Trigger Up','Trigger Down','Trigger Renewal','Renewal','Multiyear Renewal','Admin Conversion','One Time','Downsell') then 'Upsell'\r\nelse null\r\nend as grouped_type,\r\nopp_channel_opportunity_creation, \r\nopp_channel_lead_creation,\r\nopp_medium_opportunity_creation,\r\nopp_medium_lead_creation,\r\nopp_source_opportunity_creation, \r\nopp_source_lead_creation,\r\ntype,\r\nacv_deal_size_usd AS acv,\r\nbilling_country AS country,\r\naccount_global_region\r\nFROM {{ref('opp_source_xf')}}\r\nLEFT JOIN {{ref('user_source_xf')}} ON\r\nopp_source_xf.owner_id=user_source_xf.user_id\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nWHERE discovery_date IS NOT null\r\nAND stage_name = ('Discovery')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "sqo_source_ss_xf"], "unique_id": "model.acton_marketing_data.sqo_source_ss_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sqo_source_ss_xf.sql", "original_file_path": "models/sqo_source_ss_xf.sql", "name": "sqo_source_ss_xf", "alias": "sqo_source_ss_xf", "checksum": {"name": "sha256", "checksum": "6e826f2c8ec71b2227f8f5055a537226be1edee309342024428424c93bab2d87"}, "tags": [], "refs": [["opp_source_xf"], ["user_source_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2588668}, "model.acton_marketing_data.sqls_influenced_by_email_clicks_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH opp_with_contact_base AS (\r\n\r\n    SELECT *\r\n    FROM {{ref('opportunities_with_contacts')}}\r\n\r\n), email_click_base AS (\r\n    SELECT *\r\n    FROM {{ref('email_clicks_ao_xf')}}\r\n\r\n) , sum_base AS (\r\n\r\n    SELECT \r\n        email_click_base.email,\r\n        action_time,\r\n        message_title,\r\n        automated_program_name,\r\n        campaign_name,\r\n        is_current_customer,\r\n        is_hand_raiser,\r\n        mql_created_date,\r\n        close_date,\r\n        is_won,\r\n        opp_created_date,\r\n        discovery_date,\r\n        stage_name,\r\n        acv,\r\n        opp_lead_source,\r\n        type,\r\n        opportunity_id AS opps\r\n    FROM email_click_base\r\n    LEFT JOIN opp_with_contact_base ON \r\n    email_click_base.email=opp_with_contact_base.email\r\n    WHERE opportunity_id IS NOT null\r\n    --GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        automated_program_name,\r\n        message_title,\r\n        action_time,\r\n        campaign_name,\r\n        stage_name,\r\n        opp_created_date,\r\n        type,\r\n        opps\r\n    FROM sum_base\r\n    WHERE opp_created_date IS NOT null\r\n    AND opp_created_date>=action_time::Date\r\n\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opportunities_with_contacts", "model.acton_marketing_data.email_clicks_ao_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "sqls_influenced_by_email_clicks_xf"], "unique_id": "model.acton_marketing_data.sqls_influenced_by_email_clicks_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sqls_influenced_by_email_clicks_xf.sql", "original_file_path": "models/sqls_influenced_by_email_clicks_xf.sql", "name": "sqls_influenced_by_email_clicks_xf", "alias": "sqls_influenced_by_email_clicks_xf", "checksum": {"name": "sha256", "checksum": "09878f93e6eb10458c7b2f0666f2f4cdebe1ee1359249d2fafe38db702b7aa82"}, "tags": [], "refs": [["opportunities_with_contacts"], ["email_clicks_ao_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2612472}, "model.acton_marketing_data.opp_demo_source_ss_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    opportunity_id,\r\n    opportunity_name,\r\n    user_name AS owner_name,\r\n    owner_id,\r\n    opp_source_xf.is_closed,\r\n    opp_source_xf.is_won,\r\n    discovery_date,\r\n    demo_date,\r\n    solution_date,\r\n    confirmed_value_date,\r\n    stage_name,\r\n    opp_lead_source,\r\n    CASE \r\n        WHEN type in ('New Business') THEN 'New Business'\r\n        WHEN type in ('UpSell','Non-Monetary Mod','Admin Opp','Trigger Up','Trigger Down','Trigger Renewal','Renewal','Multiyear Renewal','Admin Conversion','One Time','Downsell') THEN 'Upsell'\r\n        ELSE null\r\n    END AS grouped_type,\r\n    opp_channel_opportunity_creation, \r\n    opp_channel_lead_creation,\r\n    opp_medium_opportunity_creation,\r\n    opp_medium_lead_creation,\r\n    opp_source_opportunity_creation, \r\n    opp_source_lead_creation,\r\n    type,\r\n    acv_deal_size_usd AS acv,\r\n    billing_country AS country,\r\n    account_global_region\r\nFROM {{ref('opp_source_xf')}}\r\nLEFT JOIN {{ref('user_source_xf')}} ON\r\nopp_source_xf.owner_id=user_source_xf.user_id\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nWHERE demo_date IS NOT null\r\nAND stage_name = 'Demo'\r\n--AND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed','SQL','Discovery')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "opp_demo_source_ss_xf"], "unique_id": "model.acton_marketing_data.opp_demo_source_ss_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "opp_demo_source_ss_xf.sql", "original_file_path": "models/opp_demo_source_ss_xf.sql", "name": "opp_demo_source_ss_xf", "alias": "opp_demo_source_ss_xf", "checksum": {"name": "sha256", "checksum": "206c491d55bf9e146d3c03fe992ad347938cf471447763b2f18de64d878d1e97"}, "tags": [], "refs": [["opp_source_xf"], ["user_source_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2632704}, "model.acton_marketing_data.quote_line": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT *\r\n    FROM \"acton\".salesforce.\"sbqq_quote_line_c\"\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        base.id AS quote_id,\r\n        base.is_deleted,\r\n        base.name AS quote_name,\r\n        base.currency_iso_code,\r\n        DATE_TRUNC('day',base.created_date)::Date AS quote_created_date,\r\n        DATE_TRUNC('day',base.last_modified_date)::Date AS quote_last_modified_date,\r\n        base.system_modstamp AS systemmodstamp,\r\n        base.sbqq_quote_c AS sbqq_quote,\r\n        base.sbqq_product_option_c AS sbqq_product_option,\r\n        base.sbqq_product_c AS sbqq_product,\r\n        base.sbqq_prorate_multiplier_c AS sbqq_prorate_multiplier,\r\n        base.sbqq_prorated_list_price_c AS sbqq_prorated_list_price,\r\n        base.sbqq_prorated_price_c AS sbqq_prorated_price,\r\n        base.customer_discount_c AS customer_discount,\r\n        base.sbqq_product_subscription_type_c AS sbqq_product_subscription_type,\r\n        base.sbqq_subscription_term_c AS sbqq_product_subscription_term,\r\n        sbqq_quote_c.sbqq_opportunity_2_c AS opportunity_id,\r\n        product_xf.sbqq_subscription_type,\r\n        product_xf.product_code,\r\n        sbqq_quote_c.sbqq_primary_c AS sbqq_primary_quote\r\n    FROM base\r\n    LEFT JOIN \"acton\".salesforce.\"sbqq_quote_c\" ON\r\n    base.id=sbqq_quote_c.id\r\n    LEFT JOIN {{ref('product_xf')}} ON\r\n    base.sbqq_product_c=product_xf.product_id\r\n\r\n)   \r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.product_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "quote_line"], "unique_id": "model.acton_marketing_data.quote_line", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "quote_line.sql", "original_file_path": "models/quote_line.sql", "name": "quote_line", "alias": "quote_line", "checksum": {"name": "sha256", "checksum": "1bee9c9dcd2e180cf28813e4575f0ded11ddcaba9c416f16c9a45f5ae7bb7682"}, "tags": [], "refs": [["product_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2655382}, "model.acton_marketing_data.new_business_acv_influenced_by_aps_FY21_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH opp_with_contact_base AS (\r\n\r\n    SELECT *\r\n    FROM {{ref('opportunities_with_contacts')}}\r\n\r\n), email_click_base AS (\r\n    \r\n    SELECT *\r\n    FROM {{ref('email_clicks_ao_xf')}}\r\n\r\n) , sum_base AS (\r\n\r\n    SELECT DISTINCT\r\n        email_click_base.email,\r\n        action_time,\r\n        message_title,\r\n        automated_program_name,\r\n        campaign_name,\r\n        is_current_customer,\r\n        is_hand_raiser,\r\n        mql_created_date,\r\n        close_date,\r\n        is_won,\r\n        opp_created_date,\r\n        discovery_date,\r\n        stage_name,\r\n        acv::numeric,\r\n        opp_lead_source,\r\n        type,\r\n        opportunity_id AS opps\r\n    FROM email_click_base\r\n    LEFT JOIN opp_with_contact_base ON \r\n    email_click_base.email=opp_with_contact_base.email\r\n    WHERE opportunity_id IS NOT null\r\n    AND discovery_date >= '2021-01-01'\r\n    AND discovery_date >= action_time::Date\r\n    AND type = 'New Business'\r\n    AND action_time::Date >= '2021-01-01'\r\n    --AND automated_program_name IS NOT null\r\n    --AND automated_program_name != ''\r\n    --AND automated_program_name NOT LIKE '%Conf%'\r\n    --GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\r\n\r\n), intermediate AS (\r\n\r\n    SELECT DISTINCT\r\n        automated_program_name,\r\n        acv\r\n    FROM sum_base\r\n    WHERE discovery_date IS NOT null\r\n    --AND discovery_date>=action_time\r\n    --AND automated_program_name IS NOT null\r\n    --AND automated_program_name != ''\r\n    --AND automated_program_name NOT LIKE '%Conf%'\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        automated_program_name,\r\n        SUM(acv) AS total_acv\r\n    FROM intermediate\r\n    GROUP BY 1\r\n\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opportunities_with_contacts", "model.acton_marketing_data.email_clicks_ao_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "new_business_acv_influenced_by_aps_FY21_xf"], "unique_id": "model.acton_marketing_data.new_business_acv_influenced_by_aps_FY21_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "new_business_acv_influenced_by_aps_FY21_xf.sql", "original_file_path": "models/new_business_acv_influenced_by_aps_FY21_xf.sql", "name": "new_business_acv_influenced_by_aps_FY21_xf", "alias": "new_business_acv_influenced_by_aps_FY21_xf", "checksum": {"name": "sha256", "checksum": "26f926064a22c8dcffd1b750f37e182dc82ce554489d780f740525bbfb3ed930"}, "tags": [], "refs": [["opportunities_with_contacts"], ["email_clicks_ao_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2674496}, "model.acton_marketing_data.date_base_xf": {"raw_sql": "{{ config(materialized='table') }}\r\nSELECT\r\nday::date AS day,\r\nweek,\r\nmonth,\r\nmonth_name,\r\nquarter,\r\nfy\r\nFROM \"acton\".public.date_base", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "date_base_xf"], "unique_id": "model.acton_marketing_data.date_base_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "date_base_xf.sql", "original_file_path": "models/date_base_xf.sql", "name": "date_base_xf", "alias": "date_base_xf", "checksum": {"name": "sha256", "checksum": "11c8c14904f5631b0da8beaa4c4deea3af27d387cfa857de2938c6668e1ccac5"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2695544}, "model.acton_marketing_data.campaign_influence_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT *\r\nFROM {{ source('salesforce', 'campaign_influence') }}\r\n\r\n), final AS (\r\n\r\n    SELECT  \r\n        id AS influence_id,\r\n        created_date AS influence_created_date,\r\n        opportunity_id AS influence_opportunity_id,\r\n        campaign_id AS influence_campaign_id,\r\n        contact_id AS influence_contact_id,\r\n        influence AS influence_amount,\r\n        revenue_share\r\n    FROM base\r\n\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.campaign_influence"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "campaign_influence_xf"], "unique_id": "model.acton_marketing_data.campaign_influence_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "campaign_influence_xf.sql", "original_file_path": "models/campaign_influence_xf.sql", "name": "campaign_influence_xf", "alias": "campaign_influence_xf", "checksum": {"name": "sha256", "checksum": "3f0fecb0ebea3ca82c360c3d233a40a0f6b45c6bd9ffd69df0ca328562f421c5"}, "tags": [], "refs": [], "sources": [["salesforce", "campaign_influence"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2715096}, "model.acton_marketing_data.campaign_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT *\r\nFROM {{ source('salesforce', 'campaign') }}\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n    --Campaign Info\r\n        base.id AS campaign_id,\r\n        base.name AS campaign_name, \r\n        base.type AS campaign_type,\r\n        base.status AS campaign_status,\r\n        DATE_TRUNC('day',base.start_date)::Date AS campaign_start_date,\r\n        DATE_TRUNC('day',base.end_date)::Date AS campaign_end_date,\r\n        base.expected_revenue,\r\n        base.budgeted_cost,\r\n        base.actual_cost,\r\n        base.expected_response,\r\n        base.owner_id AS campaign_owner_id,\r\n        base.is_active AS is_active_campaign,\r\n        base.is_deleted AS is_deleted_campaign,\r\n\r\n    --Parent Campaign Info\r\n        base.parent_id AS parent_campaign_id,\r\n        parent.name AS parent_campaign_name,\r\n        parent.type AS parent_campaign_type,\r\n        parent.status AS parent_campaign_status,\r\n        DATE_TRUNC('day',parent.start_date)::Date AS parent_campaign_start_date,\r\n        DATE_TRUNC('day',parent.end_date)::Date AS parent_campaign_end_date,\r\n        parent.expected_revenue AS parent_expected_revenue,\r\n        parent.budgeted_cost AS parent_budgeted_cost,\r\n        parent.actual_cost AS parent_actual_cost,\r\n        parent.expected_response AS parent_expected_reponse,\r\n        parent.owner_id AS parent_campaign_owner_id,\r\n        parent.is_active AS is_active_parent_campaign\r\n    FROM base\r\n    LEFT JOIN base parent ON \r\n    base.parent_id=parent.id\r\n\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.campaign"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "campaign_source_xf"], "unique_id": "model.acton_marketing_data.campaign_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "campaign_source_xf.sql", "original_file_path": "models/campaign_source_xf.sql", "name": "campaign_source_xf", "alias": "campaign_source_xf", "checksum": {"name": "sha256", "checksum": "a66f35e75badfaa92ed2f9c50fbce4b2f848a325d60e4d2a15158124c7a513e3"}, "tags": [], "refs": [], "sources": [["salesforce", "campaign"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2733881}, "model.acton_marketing_data.sql_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    opportunity_id AS sql_id,\r\n    opportunity_name,\r\n    opp_source_xf.account_name,\r\n    owner_name,\r\n    sdr_name,\r\n    opp_source_xf.is_closed,\r\n    opp_source_xf.is_won,\r\n    created_date,\r\n    stage_name,\r\n    opp_lead_source,\r\n    opp_channel_opportunity_creation, \r\n    opp_medium_opportunity_creation,\r\n    opp_source_opportunity_creation, \r\n    opp_channel_lead_creation,\r\n    opp_medium_lead_creation,\r\n    opp_source_lead_creation,\r\n    type,\r\n    billing_country AS country,\r\n    opp_source_xf.company_size_rev,\r\n    account_global_region,\r\n    opp_source_xf.segment,\r\n    opp_source_xf.industry,\r\n    opp_source_xf.industry_bucket,\r\n    channel_bucket,\r\n    opp_source_xf.opp_offer_asset_name_lead_creation\r\nFROM {{ref('opp_source_xf')}}\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nWHERE created_date IS NOT null\r\nAND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed')\r\n--AND stage_name = 'SQL'", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "sql_source_xf"], "unique_id": "model.acton_marketing_data.sql_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sql_source_xf.sql", "original_file_path": "models/sql_source_xf.sql", "name": "sql_source_xf", "alias": "sql_source_xf", "checksum": {"name": "sha256", "checksum": "a121a05bb1cc27c3968e88c3d9fc9f217239c46bde39ae1fb425a200ab514b0c"}, "tags": [], "refs": [["opp_source_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2753873}, "model.acton_marketing_data.kpi_targets": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT *\r\nFROM \"acton\".public.\"kpi_targets\"\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "kpi_targets"], "unique_id": "model.acton_marketing_data.kpi_targets", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "kpi_targets.sql", "original_file_path": "models/kpi_targets.sql", "name": "kpi_targets", "alias": "kpi_targets", "checksum": {"name": "sha256", "checksum": "9197afc2db20108c676891ee47573b531ca47c281d8e8f210905cadad47a2e55"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.277344}, "model.acton_marketing_data.sal_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    person_id,\r\n    email,\r\n    is_hand_raiser,\r\n    working_date,\r\n    mql_most_recent_date,\r\n    person_status,\r\n    country,\r\n    global_region,\r\n    company,\r\n    company_size_rev,\r\n    lead_source,\r\n    segment,\r\n    industry,\r\n    industry_bucket,\r\n    channel_bucket,\r\n    offer_asset_name_lead_creation\r\nFROM {{ref('person_source_xf')}}\r\nWHERE person_owner_id != '00Ga0000003Nugr'\r\nAND working_date IS NOT null\r\nAND email NOT LIKE '%act-on.com'\r\nAND lead_source = 'Marketing'\r\nAND person_status  NOT IN ('Current Customer','Partner','Bad Data','No Fit')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.person_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "sal_source_xf"], "unique_id": "model.acton_marketing_data.sal_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sal_source_xf.sql", "original_file_path": "models/sal_source_xf.sql", "name": "sal_source_xf", "alias": "sal_source_xf", "checksum": {"name": "sha256", "checksum": "1751656263b001710f3fe407fcc1141cca5b501459f83d98af05eaa76adaad8a"}, "tags": [], "refs": [["person_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.279125}, "model.acton_marketing_data.contact_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT *\r\nFROM {{ source('salesforce', 'contact') }}\r\n\r\n), final AS (\r\n\r\n    SELECT \r\n        base.id AS contact_id,\r\n        base.is_deleted,\r\n        base.created_by_id,\r\n        creator.user_name AS created_by_name,\r\n        base.account_id,\r\n        account_source_xf.account_name,\r\n        base.first_name,\r\n        base.mailing_postal_code,\r\n        base.mailing_country,\r\n        base.email,\r\n        base.title,\r\n        base.lead_source,\r\n        DATE_TRUNC('day',base.created_date)::Date AS created_date,\r\n        base.last_modified_date,\r\n        base.system_modstamp AS systemmodstamp,\r\n        base.current_customer_reference_c AS is_current_customer,\r\n        base.no_longer_with_company_c AS is_no_longer_with_company,\r\n        base.hand_raiser_c AS is_hand_raiser,\r\n        base.mql_created_date_c AS mql_created_date,\r\n        base.mql_most_recent_date_c AS mql_most_recent_date,\r\n        base.contact_role_c AS contact_role,\r\n        base.primary_contact_c AS is_primary_contact,\r\n        base.ft_offer_asset_type_c AS offer_asset_type_first_touch,\r\n        base.ft_offer_asset_subtype_c AS offer_asset_subtype_first_touch,\r\n        base.contact_status_c AS contact_status,\r\n        base.ft_utm_channel_c AS channel_first_touch,\r\n        base.lt_utm_channel_c AS channel_last_touch,\r\n        base.lt_utm_medium_c AS medium_last_touch,\r\n        base.lt_utm_source_c AS source_last_touch,\r\n        base.lt_utm_campaign_c AS campaign_last_touch,\r\n        base.channel_lead_creation_c AS channel_lead_creation,\r\n        base.content_lead_creation_c AS content_lead_creation,\r\n        base.campaign_lead_creation_c AS campaign_lead_creation,\r\n        base.ft_offer_asset_topic_c AS offer_asset_topic_first_touch,\r\n        base.ft_offer_asset_name_c AS offer_asset_name_first_touch,\r\n        base.lc_offer_asset_type_c AS offer_asset_type_lead_creation,\r\n        base.lc_offer_asset_subtype_c AS offer_asset_subtype_lead_creation,\r\n        base.lc_offer_asset_topic_c AS offer_asset_topic_lead_creation,\r\n        base.lc_offer_asset_name_c AS offer_asset_name_lead_creation,\r\n        base.lt_offer_asset_type_c AS offer_asset_type_last_touch,\r\n        base.lt_offer_asset_subtype_c AS offer_asset_subtype_last_touch,\r\n        base.lt_offer_asset_name_c AS offer_asset_name_last_touch,\r\n        base.lt_offer_asset_topic_c AS offer_asset_topic_last_touch,\r\n        base.renewal_contact_c AS is_renewal_contact, --verify data type\r\n        base.account_owner_email_c AS account_owner_email,\r\n        base.account_csm_email_c AS account_csm_email,\r\n        base.ft_subchannel_c AS subchannel_first_touch,\r\n        base.lt_subchannel_c AS subchannel_last_touch,\r\n        base.lc_subchannel_c AS subchannel_lead_creation,\r\n        base.x_9883_lead_score_c AS lead_score,\r\n        base.status_reason_c AS status_reason,\r\n        DATE_TRUNC('day',marketing_lead_creation_date_c)::Date AS marketing_created_date,\r\n        base.current_map_c AS current_ma,\r\n        base.account_lookup_c AS account_lookup,\r\n        base.ft_utm_campaign_c AS campaign_first_touch,\r\n        base.ft_utm_medium_c AS medium_first_touch,\r\n        base.ft_utm_source_c AS source_first_touch,\r\n        base.lead_id_converted_from_c AS lead_id_converted_from,\r\n        base.was_a_handraiser_lead_c AS was_a_handraiser_lead,\r\n        base.medium_lead_creation_c AS medium_lead_creation,\r\n        base.source_lead_creation_c AS source_lead_creation,\r\n        base.owner_id AS contact_owner_id,\r\n        base.firmographic_demographic_lead_score_c AS firmographic_demographic_lead_score,\r\n        base.last_name, \r\n        base.data_enrich_company_name_c AS de_account_name,\r\n        DATE_TRUNC('day',date_time_to_working_c)::Date AS working_date,\r\n        account_source_xf.account_owner_id,\r\n        account_source_xf.account_owner_name,\r\n        account_source_xf.annual_revenue,\r\n        account_source_xf.de_current_crm,\r\n        account_source_xf.de_current_ma,\r\n        account_source_xf.account_csm_name AS account_csm_name,\r\n        account_source_xf.csm_id AS account_csm_id,\r\n        account_source_xf.sdr_phone AS account_sdr_phone,\r\n        account_source_xf.sdr_photo AS account_sdr_photo,\r\n        account_source_xf.sdr_calendly AS account_sdr_calendly,\r\n        account_source_xf.sdr_title AS account_sdr_title,\r\n        account_source_xf.sdr_full_name AS account_sdr_full_name,\r\n        account_source_xf.sdr_email AS account_sdr_email,\r\n        account_source_xf.account_deliverability_consultant_email,\r\n        account_source_xf.account_deliverability_consultant,\r\n        user_source_xf.user_email AS owner_email,\r\n        CASE\r\n            WHEN account_source_xf.annual_revenue <= 49999999 THEN 'SMB'\r\n            WHEN account_source_xf.annual_revenue > 49999999 AND account_source_xf.annual_revenue <= 499999999 THEN 'Mid-Market'\r\n            WHEN account_source_xf.annual_revenue > 499999999 THEN 'Enterprise'\r\n        END AS company_size_rev,\r\n        account_source_xf.global_region,\r\n        account_source_xf.segment,\r\n        account_source_xf.de_industry AS industry,\r\n        CASE\r\n            WHEN account_source_xf.de_industry IN ('Business Services') THEN 'Business Services'\r\n            WHEN account_source_xf.de_industry IN ('Finance','Insurance') THEN 'Finance'\r\n            WHEN account_source_xf.de_industry IN ('Manufacturing') THEN 'Manufacturing'\r\n            WHEN account_source_xf.de_industry IN ('Software','Telecommunications') THEN 'SoftCom'\r\n            ELSE 'Other'\r\n        END AS industry_bucket,\r\n        CASE \r\n            WHEN LOWER(channel_lead_creation_c) = 'organic' THEN 'Organic'\r\n            WHEN LOWER(channel_lead_creation_c) IS null THEN 'Unknown'\r\n            WHEN LOWER(channel_lead_creation_c) = 'social' AND LOWER(medium_lead_creation_c) = 'social-organic' THEN 'Social - Organic'\r\n            WHEN LOWER(channel_lead_creation_c) = 'social' AND LOWER(medium_lead_creation_c) = 'social-paid' THEN 'Paid Social'\r\n            WHEN LOWER(channel_lead_creation_c) = 'ppc' THEN 'PPC/Paid Search'\r\n            WHEN LOWER(channel_lead_creation_c) = 'email' AND LOWER(source_lead_creation_c) like '%act-on%' THEN 'Paid Email' \r\n            WHEN LOWER(channel_lead_creation_c) = 'ppl' AND LOWER(medium_lead_creation_c) = 'syndication partner' THEN 'PPL'\r\n            WHEN LOWER(channel_lead_creation_c) IN ('prospecting','ppl') AND LOWER(medium_lead_creation_c) = 'intent partner' THEN 'Intent Partners'\r\n            WHEN LOWER(channel_lead_creation_c) = 'event' THEN 'Events and Trade Shows'\r\n            WHEN LOWER(channel_lead_creation_c) = 'partner' THEN 'Partners'\r\n            ELSE 'Other'\r\n        END AS channel_bucket\r\n    FROM base\r\n    LEFT JOIN {{ref('account_source_xf')}} ON\r\n    base.account_id=account_source_xf.account_id\r\n    LEFT JOIN {{ref('user_source_xf')}} ON\r\n    base.owner_id=user_source_xf.user_id\r\n    LEFT JOIN {{ref('user_source_xf')}} creator ON\r\n    base.created_by_id=creator.user_id\r\n\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.contact", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "contact_source_xf"], "unique_id": "model.acton_marketing_data.contact_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "contact_source_xf.sql", "original_file_path": "models/contact_source_xf.sql", "name": "contact_source_xf", "alias": "contact_source_xf", "checksum": {"name": "sha256", "checksum": "8699c28a3575ac1ec1d35de937c03b868ccd60760ee63782874bd6423998ffdf"}, "tags": [], "refs": [["account_source_xf"], ["user_source_xf"], ["user_source_xf"]], "sources": [["salesforce", "contact"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2813363}, "model.acton_marketing_data.lead_mql_source_ss_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    lead_id,\r\n    email,\r\n    lead_source,\r\n    is_converted,\r\n    is_hand_raiser,\r\n    mql_created_date,\r\n    mql_most_recent_date,\r\n    lead_status,\r\n    country,\r\n    lead_owner,\r\n    global_region\r\nFROM {{ref('lead_source_ss_xf')}}\r\nWHERE mql_most_recent_date IS NOT null\r\nAND lead_owner != '00Ga0000003Nugr' -- AO-Fake Leads\r\nAND email NOT LIKE '%act-on.com'\r\nAND lead_source = 'Marketing'", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.lead_source_ss_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "lead_mql_source_ss_xf"], "unique_id": "model.acton_marketing_data.lead_mql_source_ss_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "lead_mql_source_ss_xf.sql", "original_file_path": "models/lead_mql_source_ss_xf.sql", "name": "lead_mql_source_ss_xf", "alias": "lead_mql_source_ss_xf", "checksum": {"name": "sha256", "checksum": "9b632fc8605aa1df4af5d7d8e2076ed838b3d826b0454a969604ce4268a5654d"}, "tags": [], "refs": [["lead_source_ss_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.283607}, "model.acton_marketing_data.sqls_influenced_by_email_opens_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH opp_with_contact_base AS (\r\nSELECT *\r\nFROM {{ref('opportunities_with_contacts')}}\r\n--FROM \"acton\".dbt_actonmarketing.opportunities_with_contacts\r\n\r\n), email_click_base AS (\r\n    SELECT *\r\n    FROM {{ref('email_opens_ao_xf')}}\r\n    --FROM \"acton\".dbt_actonmarketing.email_opens_ao_xf\r\n\r\n) , sum_base AS (\r\nSELECT \r\nemail_click_base.email,\r\naction_time,\r\nmessage_title,\r\nautomated_program_name,\r\ncampaign_name,\r\nis_current_customer,\r\nis_hand_raiser,\r\nmql_created_date,\r\nclose_date,\r\nis_won,\r\nopp_created_date,\r\ndiscovery_date,\r\nstage_name,\r\nacv,\r\nopp_lead_source,\r\ntype,\r\nopportunity_id AS opps\r\nFROM email_click_base\r\nLEFT JOIN opp_with_contact_base ON \r\nemail_click_base.email=opp_with_contact_base.email\r\nWHERE opportunity_id IS NOT null\r\n--GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\r\n\r\n), final AS (\r\nSELECT\r\nautomated_program_name,\r\nmessage_title,\r\naction_time,\r\ncampaign_name,\r\nstage_name,\r\nopp_created_date,\r\ntype,\r\nopps\r\nFROM sum_base\r\nWHERE opp_created_date IS NOT null\r\nAND opp_created_date>=action_time\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opportunities_with_contacts", "model.acton_marketing_data.email_opens_ao_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "sqls_influenced_by_email_opens_xf"], "unique_id": "model.acton_marketing_data.sqls_influenced_by_email_opens_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sqls_influenced_by_email_opens_xf.sql", "original_file_path": "models/sqls_influenced_by_email_opens_xf.sql", "name": "sqls_influenced_by_email_opens_xf", "alias": "sqls_influenced_by_email_opens_xf", "checksum": {"name": "sha256", "checksum": "fd87c2fc558caa1cbaf68efad6ed2dbe960e169571d07b245a01f4c37d0df897"}, "tags": [], "refs": [["opportunities_with_contacts"], ["email_opens_ao_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2856555}, "model.acton_marketing_data.ao_instance_source_xf": {"raw_sql": "{{ config(materialized='table') }}\r\nWITH base AS (\r\nSELECT *\r\nFROM {{ source('salesforce', 'act_on_instance_c') }}\r\n\r\n), final AS (\r\n    \r\n    SELECT\r\n        id AS ao_instance_id,\r\n        is_deleted,\r\n        name AS ao_instance_name,\r\n        created_date AS ao_instance_created_date,\r\n        last_modified_date,\r\n        system_modstamp AS systemmodstamp,\r\n        ao_account_name_c AS ao_account_name,\r\n        cdb_ao_instance_id_c AS cdb_ao_instance_id,\r\n        account_c AS ao_instance_account,\r\n        parent_account_c AS ao_instance_parent_account,\r\n        ao_parent_id_c AS ao_instance_parent_account_id \r\n    FROM base\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.salesforce.act_on_instance_c"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "ao_instance_source_xf"], "unique_id": "model.acton_marketing_data.ao_instance_source_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "ao_instance_source_xf.sql", "original_file_path": "models/ao_instance_source_xf.sql", "name": "ao_instance_source_xf", "alias": "ao_instance_source_xf", "checksum": {"name": "sha256", "checksum": "bf79ac86baa6a48631e185e7996e8ecbf72fecbff13e48639990dd7a73e58151"}, "tags": [], "refs": [], "sources": [["salesforce", "act_on_instance_c"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2876065}, "model.acton_marketing_data.test": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        lead_history_xf.lead_id,\r\n        lead_history_xf.field_modified_at,\r\n        lead_history_xf.field,\r\n        lead_history_xf.old_value,\r\n        lead_history_xf.new_value,\r\n        'lead' AS type\r\n    FROM {{ref('lead_history_xf')}}\r\n    LEFT JOIN {{ref('lead_source_xf')}} ON \r\n    lead_history_xf.lead_id=lead_source_xf.lead_id\r\n    WHERE marketing_created_date >= '2022-08-29'\r\n    AND lead_score = 0\r\n    AND firmographic_demographic_lead_score > 0\r\n    UNION ALL\r\n    SELECT \r\n        contact_history_xf.contact_id,\r\n        contact_history_xf.field_modified_at,\r\n        contact_history_xf.field,\r\n        contact_history_xf.old_value,\r\n        contact_history_xf.new_value,\r\n        'contact' AS type\r\n    FROM {{ref('contact_history_xf')}}\r\n    LEFT JOIN {{ref('contact_source_xf')}} ON \r\n    contact_history_xf.contact_id=contact_source_xf.contact_id\r\n    WHERE marketing_created_date >= '2022-08-29'\r\n    AND lead_score = 0\r\n    AND firmographic_demographic_lead_score > 0\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        lead_id,\r\n        old_value,\r\n        new_value,\r\n        field_modified_at,\r\n        type\r\n    FROM base \r\n    WHERE (field ='X9883_Lead_Score__c'\r\n    AND new_value = '0.0'\r\n    AND old_value IS NOT null\r\n    AND field_modified_at::Date = '2022-09-21')\r\n    ORDER BY lead_id,field_modified_at\r\n\r\n)\r\n\r\nSELECT \r\n    lead_id,\r\n    old_value,\r\n    new_value,\r\n    field_modified_at,\r\n    type\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.lead_history_xf", "model.acton_marketing_data.lead_source_xf", "model.acton_marketing_data.contact_history_xf", "model.acton_marketing_data.contact_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "test", "test"], "unique_id": "model.acton_marketing_data.test", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "test/test.sql", "original_file_path": "models/test/test.sql", "name": "test", "alias": "test", "checksum": {"name": "sha256", "checksum": "1cf86eef96b801b732ed6377568ace4a69535119fee1aed2464b4d70f6aa5ca9"}, "tags": [], "refs": [["lead_history_xf"], ["lead_source_xf"], ["contact_history_xf"], ["contact_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.289523}, "model.acton_marketing_data.new_account_welcome_series_list": {"raw_sql": "WITH opp_and_acct_base AS (\r\n\r\n    SELECT\r\n        opportunity_id,\r\n        opp_source_xf.account_id,\r\n        opportunity_name,\r\n        customer_since,\r\n        account_csm_name,\r\n        account_csm_email,\r\n        account_csm_photo,\r\n        onboarding.user_name AS onboarding_specialist,\r\n        onboarding_specialist_email,\r\n        onboarding_specialist_photo,\r\n        owner.user_name AS account_owner,\r\n        account_owner_email,\r\n        account_owner_photo,\r\n        onboarding_completion_date,\r\n        opp_source_xf.close_date\r\n    FROM {{ref('opp_source_xf')}}\r\n    LEFT JOIN {{ref('account_source_xf')}} ON\r\n    opp_source_xf.account_id=account_source_xf.account_id\r\n    LEFT JOIN {{ref('user_source_xf')}} owner ON\r\n    account_source_xf.account_owner_id=owner.user_id\r\n    LEFT JOIN {{ref('user_source_xf')}} onboarding ON\r\n    account_source_xf.onboarding_specialist=onboarding.user_id\r\n    WHERE stage_name = 'Implement'\r\n   -- AND is_current_customer = 'true'\r\n    AND opp_source_xf.account_id != '0011O00002LeGkEQAV'\r\n    AND account_type != 'Partner Owned'\r\n\r\n)\r\n\r\nSELECT DISTINCT\r\n    opp_and_acct_base.opportunity_id,\r\n    opp_and_acct_base.account_id,\r\n    opp_and_acct_base.opportunity_name,\r\n    opp_and_acct_base.customer_since,\r\n    CASE \r\n        WHEN opp_and_acct_base.account_csm_name IS null THEN 'Support'\r\n        ELSE opp_and_acct_base.account_csm_name \r\n    END AS account_csm_name,\r\n    CASE \r\n        WHEN opp_and_acct_base.account_csm_email IS null THEN 'support@act-on.com'\r\n        ELSE opp_and_acct_base.account_csm_email \r\n    END AS account_csm_email,\r\n    CASE \r\n        WHEN opp_and_acct_base.account_csm_photo IS null THEN 'https://success.act-on.com/cdnr/forpcid1/acton/attachment/9883/f-fa8432de-9cea-4bf7-b6d4-eca1c9656b82/1/-/-/-/-/NewUserWelcomeSeries-EM3-Support.png'\r\n        ELSE opp_and_acct_base.account_csm_photo \r\n    END AS account_csm_photo,\r\n    opp_and_acct_base.onboarding_specialist,\r\n    opp_and_acct_base.onboarding_specialist_email,\r\n    opp_and_acct_base.onboarding_specialist_photo,\r\n    opp_and_acct_base.account_owner,\r\n    opp_and_acct_base.account_owner_email,\r\n    opp_and_acct_base.account_owner_photo,\r\n    contact_source_xf.first_name AS \"First Name\",\r\n    contact_source_xf.last_name AS \"Last Name\",\r\n    contact_source_xf.email AS \"Email\",\r\n    ao_instance_user_source_xf.ao_user_name,\r\n    ao_instance_user_source_xf.ao_user_id,\r\n    ao_instance_user_source_xf.is_marketing_user,\r\n    opp_and_acct_base.onboarding_completion_date,\r\n    ao_instance_user_source_xf.ao_user_created_date\r\nFROM {{ref('ao_instance_user_source_xf')}}\r\nLEFT JOIN {{ref('contact_source_xf')}} ON\r\ncontact_source_xf.contact_id=ao_instance_user_source_xf.ao_user_contact_id\r\nLEFT JOIN opp_and_acct_base ON\r\nopp_and_acct_base.account_id=contact_source_xf.account_id\r\nWHERE 1=1\r\nAND is_marketing_user = 'true'\r\nAND customer_since > CURRENT_DATE-60\r\nAND ao_user_created_date >= '2022-06-01'", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.ao_instance_user_source_xf", "model.acton_marketing_data.contact_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "new_user", "new_account_welcome_series_list"], "unique_id": "model.acton_marketing_data.new_account_welcome_series_list", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "new_user/new_account_welcome_series_list.sql", "original_file_path": "models/new_user/new_account_welcome_series_list.sql", "name": "new_account_welcome_series_list", "alias": "new_account_welcome_series_list", "checksum": {"name": "sha256", "checksum": "ed575767659f1bff9e79c1a112919b7da9ad156991dbaf0804a0d35fe3276cc1"}, "tags": [], "refs": [["opp_source_xf"], ["account_source_xf"], ["user_source_xf"], ["user_source_xf"], ["ao_instance_user_source_xf"], ["contact_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2920299}, "model.acton_marketing_data.new_user_welcome_series_list": {"raw_sql": "WITH opp_and_acct_base AS (\r\n\r\n    SELECT\r\n        opportunity_id,\r\n        opp_source_xf.account_id,\r\n        opportunity_name,\r\n        customer_since,\r\n        account_csm_name,\r\n        account_csm_email,\r\n        account_csm_photo,\r\n        onboarding.user_name AS onboarding_specialist,\r\n        onboarding_specialist_email,\r\n        onboarding_specialist_photo,\r\n        owner.user_name AS account_owner,\r\n        account_owner_email,\r\n        account_owner_photo,\r\n        onboarding_completion_date,\r\n        opp_source_xf.close_date\r\n    FROM {{ref('opp_source_xf')}}\r\n    LEFT JOIN {{ref('account_source_xf')}} ON\r\n    opp_source_xf.account_id=account_source_xf.account_id\r\n    LEFT JOIN {{ref('user_source_xf')}} owner ON\r\n    account_source_xf.account_owner_id=owner.user_id\r\n    LEFT JOIN {{ref('user_source_xf')}} onboarding ON\r\n    account_source_xf.onboarding_specialist=onboarding.user_id\r\n    WHERE stage_name = 'Implement'\r\n   -- AND is_current_customer = 'true'\r\n    AND opp_source_xf.account_id != '0011O00002LeGkEQAV'\r\n    AND account_type != 'Partner Owned'\r\n\r\n)\r\n\r\nSELECT DISTINCT\r\n    opp_and_acct_base.opportunity_id,\r\n    opp_and_acct_base.account_id,\r\n    opp_and_acct_base.opportunity_name,\r\n    opp_and_acct_base.customer_since,\r\n    CASE \r\n        WHEN opp_and_acct_base.account_csm_name IS null THEN 'Support'\r\n        ELSE opp_and_acct_base.account_csm_name \r\n    END AS account_csm_name,\r\n    CASE \r\n        WHEN opp_and_acct_base.account_csm_email IS null THEN 'support@act-on.com'\r\n        ELSE opp_and_acct_base.account_csm_email \r\n    END AS account_csm_email,\r\n    CASE \r\n        WHEN opp_and_acct_base.account_csm_photo IS null THEN 'https://success.act-on.com/cdnr/forpcid1/acton/attachment/9883/f-fa8432de-9cea-4bf7-b6d4-eca1c9656b82/1/-/-/-/-/NewUserWelcomeSeries-EM3-Support.png'\r\n        ELSE opp_and_acct_base.account_csm_photo \r\n    END AS account_csm_photo,\r\n    opp_and_acct_base.onboarding_specialist,\r\n    opp_and_acct_base.onboarding_specialist_email,\r\n    opp_and_acct_base.onboarding_specialist_photo,\r\n    opp_and_acct_base.account_owner,\r\n    opp_and_acct_base.account_owner_email,\r\n    opp_and_acct_base.account_owner_photo,\r\n    contact_source_xf.first_name AS \"First Name\",\r\n    contact_source_xf.last_name AS \"Last Name\",\r\n    contact_source_xf.email AS \"Email\",\r\n    ao_instance_user_source_xf.ao_user_name,\r\n    ao_instance_user_source_xf.ao_user_id,\r\n    ao_instance_user_source_xf.is_marketing_user,\r\n    opp_and_acct_base.onboarding_completion_date,\r\n    ao_instance_user_source_xf.ao_user_created_date\r\nFROM {{ref('ao_instance_user_source_xf')}}\r\nLEFT JOIN {{ref('contact_source_xf')}} ON\r\ncontact_source_xf.contact_id=ao_instance_user_source_xf.ao_user_contact_id\r\nLEFT JOIN opp_and_acct_base ON\r\nopp_and_acct_base.account_id=contact_source_xf.account_id\r\nWHERE 1=1\r\nAND is_marketing_user = 'true'\r\nAND customer_since >= '2022-01-01'\r\nAND customer_since < CURRENT_DATE-60\r\nAND ao_user_created_date >= '2022-06-01'", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.ao_instance_user_source_xf", "model.acton_marketing_data.contact_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "new_user", "new_user_welcome_series_list"], "unique_id": "model.acton_marketing_data.new_user_welcome_series_list", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "new_user/new_user_welcome_series_list.sql", "original_file_path": "models/new_user/new_user_welcome_series_list.sql", "name": "new_user_welcome_series_list", "alias": "new_user_welcome_series_list", "checksum": {"name": "sha256", "checksum": "1c2071f6e59a1ce49ef85cac088c55404456fe6b517040bba456442f1d0e85c2"}, "tags": [], "refs": [["opp_source_xf"], ["account_source_xf"], ["user_source_xf"], ["user_source_xf"], ["ao_instance_user_source_xf"], ["contact_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.294381}, "model.acton_marketing_data.topo_leads": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    segment,\r\n    lead_source,\r\n    global_region,\r\n    'Inquiries' AS type,\r\n    month,\r\n    quarter,\r\n    COUNT(*) AS records\r\nFROM {{ref('funnel_report_all_time_leads')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nfunnel_report_all_time_leads.created_date=date_base_xf.day\r\nWHERE created_date >= '2021-01-01'\r\nAND lead_source IN ('Marketing','Sales','SDR','Channel')\r\nGROUP BY 1,2,3,4,5,6\r\nORDER BY 1,2,3,4,5,6", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "topo_model", "topo_leads"], "unique_id": "model.acton_marketing_data.topo_leads", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "topo_model/topo_leads.sql", "original_file_path": "models/topo_model/topo_leads.sql", "name": "topo_leads", "alias": "topo_leads", "checksum": {"name": "sha256", "checksum": "678832d4afd88a6f27418155fcd36235b18de97c554a603642fd7fef38a99d04"}, "tags": [], "refs": [["funnel_report_all_time_leads"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2968495}, "model.acton_marketing_data.topo_all": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT *\r\nFROM {{ref('topo_closing')}}\r\nUNION ALL\r\nSELECT *\r\nFROM {{ref('topo_demos')}}\r\nUNION ALL\r\nSELECT *\r\nFROM {{ref('topo_leads')}}\r\nUNION ALL\r\nSELECT *\r\nFROM {{ref('topo_lost')}}\r\nUNION ALL\r\nSELECT *\r\nFROM {{ref('topo_mqls')}}\r\nUNION ALL\r\nSELECT *\r\nFROM {{ref('topo_pipe')}}\r\nUNION ALL\r\nSELECT *\r\nFROM {{ref('topo_sals')}}\r\nUNION ALL\r\nSELECT *\r\nFROM {{ref('topo_sqls')}}\r\nUNION ALL\r\nSELECT *\r\nFROM {{ref('topo_sqos')}}\r\nUNION ALL\r\nSELECT *\r\nFROM {{ref('topo_voc')}}\r\nUNION ALL\r\nSELECT *\r\nFROM {{ref('topo_won_acv')}}\r\nUNION ALL\r\nSELECT *\r\nFROM {{ref('topo_won')}}", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.topo_closing", "model.acton_marketing_data.topo_demos", "model.acton_marketing_data.topo_leads", "model.acton_marketing_data.topo_lost", "model.acton_marketing_data.topo_mqls", "model.acton_marketing_data.topo_pipe", "model.acton_marketing_data.topo_sals", "model.acton_marketing_data.topo_sqls", "model.acton_marketing_data.topo_sqos", "model.acton_marketing_data.topo_voc", "model.acton_marketing_data.topo_won_acv", "model.acton_marketing_data.topo_won"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "topo_model", "topo_all"], "unique_id": "model.acton_marketing_data.topo_all", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "topo_model/topo_all.sql", "original_file_path": "models/topo_model/topo_all.sql", "name": "topo_all", "alias": "topo_all", "checksum": {"name": "sha256", "checksum": "6616619ec3a8370a431eebc1b213cc43b12595d0b986060198048478ae2612bb"}, "tags": [], "refs": [["topo_closing"], ["topo_demos"], ["topo_leads"], ["topo_lost"], ["topo_mqls"], ["topo_pipe"], ["topo_sals"], ["topo_sqls"], ["topo_sqos"], ["topo_voc"], ["topo_won_acv"], ["topo_won"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.2988951}, "model.acton_marketing_data.topo_won_acv": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    segment,\r\n    opp_lead_source AS lead_source,\r\n    account_global_region AS global_region,\r\n    'Won ACV' AS type,\r\n    month,\r\n    quarter,\r\n    SUM(acv) AS records\r\nFROM {{ref('funnel_report_all_time_won')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nfunnel_report_all_time_won.won_date=date_base_xf.day\r\nWHERE won_date >= '2021-01-01'\r\nAND opp_lead_source IN ('Marketing','Sales','SDR','Channel')\r\nGROUP BY 1,2,3,4,5,6\r\nORDER BY 1,2,3,4,5,6", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "topo_model", "topo_won_acv"], "unique_id": "model.acton_marketing_data.topo_won_acv", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "topo_model/topo_won_acv.sql", "original_file_path": "models/topo_model/topo_won_acv.sql", "name": "topo_won_acv", "alias": "topo_won_acv", "checksum": {"name": "sha256", "checksum": "e089342b627813cb2c81e3c3b49d1ef40c69c4af7edea875dd71862ff111389a"}, "tags": [], "refs": [["funnel_report_all_time_won"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.301798}, "model.acton_marketing_data.topo_mqls": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    segment,\r\n    lead_source,\r\n    global_region,\r\n    'MQL' AS type,\r\n    month,\r\n    quarter,\r\n    COUNT(*) AS records\r\nFROM {{ref('funnel_report_all_time_mqls')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nfunnel_report_all_time_mqls.mql_date=date_base_xf.day\r\nWHERE mql_date >= '2021-01-01'\r\nAND lead_source IN ('Marketing','Sales','SDR','Channel')\r\nGROUP BY 1,2,3,4,5,6\r\nORDER BY 1,2,3,4,5,6", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "topo_model", "topo_mqls"], "unique_id": "model.acton_marketing_data.topo_mqls", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "topo_model/topo_mqls.sql", "original_file_path": "models/topo_model/topo_mqls.sql", "name": "topo_mqls", "alias": "topo_mqls", "checksum": {"name": "sha256", "checksum": "7535c0da8bfcaef6fff769aa1492989d2fb925f901946b96f504589bea8d98f8"}, "tags": [], "refs": [["funnel_report_all_time_mqls"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3038225}, "model.acton_marketing_data.topo_sqls": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    segment,\r\n    opp_lead_source AS lead_source,\r\n    account_global_region AS global_region,\r\n    'SQL' AS type,\r\n    month,\r\n    quarter,\r\n    COUNT(*) AS records\r\nFROM {{ref('funnel_report_all_time_sqls')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nfunnel_report_all_time_sqls.sql_date=date_base_xf.day\r\nWHERE sql_date >= '2021-01-01'\r\nAND opp_lead_source IN ('Marketing','Sales','SDR','Channel')\r\nGROUP BY 1,2,3,4,5,6\r\nORDER BY 1,2,3,4,5,6", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "topo_model", "topo_sqls"], "unique_id": "model.acton_marketing_data.topo_sqls", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "topo_model/topo_sqls.sql", "original_file_path": "models/topo_model/topo_sqls.sql", "name": "topo_sqls", "alias": "topo_sqls", "checksum": {"name": "sha256", "checksum": "e9763db998efcc4ad93582a748febae200247e289bc1310a40bfc1c061487ce4"}, "tags": [], "refs": [["funnel_report_all_time_sqls"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3059866}, "model.acton_marketing_data.topo_sals": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    segment,\r\n    lead_source,\r\n    global_region,\r\n    'SAL' AS type,\r\n    month,\r\n    quarter,\r\n    COUNT(*) AS records\r\nFROM {{ref('funnel_report_all_time_sals')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nfunnel_report_all_time_sals.sal_date=date_base_xf.day\r\nWHERE sal_date >= '2021-01-01'\r\nAND lead_source IN ('Marketing','Sales','SDR','Channel')\r\nGROUP BY 1,2,3,4,5,6\r\nORDER BY 1,2,3,4,5,6", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "topo_model", "topo_sals"], "unique_id": "model.acton_marketing_data.topo_sals", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "topo_model/topo_sals.sql", "original_file_path": "models/topo_model/topo_sals.sql", "name": "topo_sals", "alias": "topo_sals", "checksum": {"name": "sha256", "checksum": "dc06fbb64db8e8d04cda35c339b2c61c4c3ae6b38cfbe13d72f89653cc2f16f2"}, "tags": [], "refs": [["funnel_report_all_time_sals"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3079832}, "model.acton_marketing_data.topo_closing": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    segment,\r\n    opp_lead_source AS lead_source,\r\n    account_global_region AS global_region,\r\n    'CLOSING' AS type,\r\n    month,\r\n    quarter,\r\n    COUNT(*) AS records\r\nFROM {{ref('funnel_report_all_time_closing')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nfunnel_report_all_time_closing.closing_date=date_base_xf.day\r\nWHERE closing_date >= '2021-01-01'\r\nAND opp_lead_source IN ('Marketing','Sales','SDR','Channel')\r\nGROUP BY 1,2,3,4,5,6\r\nORDER BY 1,2,3,4,5,6", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "topo_model", "topo_closing"], "unique_id": "model.acton_marketing_data.topo_closing", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "topo_model/topo_closing.sql", "original_file_path": "models/topo_model/topo_closing.sql", "name": "topo_closing", "alias": "topo_closing", "checksum": {"name": "sha256", "checksum": "c9d3256dffd1f37f85d858d59dc50098f566b036c106800694079c5ecac305c0"}, "tags": [], "refs": [["funnel_report_all_time_closing"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3099563}, "model.acton_marketing_data.topo_lost": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    segment,\r\n    opp_lead_source AS lead_source,\r\n    account_global_region AS global_region,\r\n    'Lost' AS type,\r\n    month,\r\n    quarter,\r\n    COUNT(*) AS records\r\nFROM {{ref('funnel_report_all_time_lost')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nfunnel_report_all_time_lost.lost_date=date_base_xf.day\r\nWHERE lost_date >= '2021-01-01'\r\nAND opp_lead_source IN ('Marketing','Sales','SDR','Channel')\r\nGROUP BY 1,2,3,4,5,6\r\nORDER BY 1,2,3,4,5,6", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "topo_model", "topo_lost"], "unique_id": "model.acton_marketing_data.topo_lost", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "topo_model/topo_lost.sql", "original_file_path": "models/topo_model/topo_lost.sql", "name": "topo_lost", "alias": "topo_lost", "checksum": {"name": "sha256", "checksum": "71ede907cbd1522ca1ccd75841449f308a2c2cb863eb89786b2a62fe8c223297"}, "tags": [], "refs": [["funnel_report_all_time_lost"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3122785}, "model.acton_marketing_data.topo_sqos": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    segment,\r\n    opp_lead_source AS lead_source,\r\n    account_global_region AS global_region,\r\n    'SQO' AS type,\r\n    month,\r\n    quarter,\r\n    COUNT(*) AS records\r\nFROM {{ref('funnel_report_all_time_sqos')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nfunnel_report_all_time_sqos.sqo_date=date_base_xf.day\r\nWHERE sqo_date >= '2021-01-01'\r\nAND opp_lead_source IN ('Marketing','Sales','SDR','Channel')\r\nGROUP BY 1,2,3,4,5,6\r\nORDER BY 1,2,3,4,5,6", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "topo_model", "topo_sqos"], "unique_id": "model.acton_marketing_data.topo_sqos", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "topo_model/topo_sqos.sql", "original_file_path": "models/topo_model/topo_sqos.sql", "name": "topo_sqos", "alias": "topo_sqos", "checksum": {"name": "sha256", "checksum": "6a7c778f5d067b4213e3d7be057884078c0a6a94915f886838d546e7a2d0e579"}, "tags": [], "refs": [["funnel_report_all_time_sqos"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3143094}, "model.acton_marketing_data.topo_pipe": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    segment,\r\n    opp_lead_source AS lead_source,\r\n    account_global_region AS global_region,\r\n    'PIPE' AS type,\r\n    month,\r\n    quarter,\r\n    SUM(acv) AS records\r\nFROM {{ref('funnel_report_all_time_sqos')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nfunnel_report_all_time_sqos.sqo_date=date_base_xf.day\r\nWHERE sqo_date >= '2021-01-01'\r\nAND opp_lead_source IN ('Marketing','Sales','SDR','Channel')\r\nGROUP BY 1,2,3,4,5,6\r\nORDER BY 1,2,3,4,5,6", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "topo_model", "topo_pipe"], "unique_id": "model.acton_marketing_data.topo_pipe", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "topo_model/topo_pipe.sql", "original_file_path": "models/topo_model/topo_pipe.sql", "name": "topo_pipe", "alias": "topo_pipe", "checksum": {"name": "sha256", "checksum": "50339211ba4dc33971099f1d79e8f1076269b97b8468515e5a9cb2cd73b979d0"}, "tags": [], "refs": [["funnel_report_all_time_sqos"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3164837}, "model.acton_marketing_data.topo_won": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    segment,\r\n    opp_lead_source AS lead_source,\r\n    account_global_region AS global_region,\r\n    'Won' AS type,\r\n    month,\r\n    quarter,\r\n    COUNT(*) AS records\r\nFROM {{ref('funnel_report_all_time_won')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nfunnel_report_all_time_won.won_date=date_base_xf.day\r\nWHERE won_date >= '2021-01-01'\r\nAND opp_lead_source IN ('Marketing','Sales','SDR','Channel')\r\nGROUP BY 1,2,3,4,5,6\r\nORDER BY 1,2,3,4,5,6", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "topo_model", "topo_won"], "unique_id": "model.acton_marketing_data.topo_won", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "topo_model/topo_won.sql", "original_file_path": "models/topo_model/topo_won.sql", "name": "topo_won", "alias": "topo_won", "checksum": {"name": "sha256", "checksum": "6f0cd517205924b5e11bc3b0181c32bb7ad41a0cdfe08ec004e7c343d5927c97"}, "tags": [], "refs": [["funnel_report_all_time_won"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3185906}, "model.acton_marketing_data.topo_demos": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    segment,\r\n    opp_lead_source AS lead_source,\r\n    account_global_region AS global_region,\r\n    'DEMO' AS type,\r\n    month,\r\n    quarter,\r\n    COUNT(*) AS records\r\nFROM {{ref('funnel_report_all_time_demo')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nfunnel_report_all_time_demo.demo_date=date_base_xf.day\r\nWHERE demo_date >= '2021-01-01'\r\nAND opp_lead_source IN ('Marketing','Sales','SDR','Channel')\r\nGROUP BY 1,2,3,4,5,6\r\nORDER BY 1,2,3,4,5,6", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "topo_model", "topo_demos"], "unique_id": "model.acton_marketing_data.topo_demos", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "topo_model/topo_demos.sql", "original_file_path": "models/topo_model/topo_demos.sql", "name": "topo_demos", "alias": "topo_demos", "checksum": {"name": "sha256", "checksum": "dae03ced86e4801d22bf5f143fa833be183990de550b2b9b9b5cb1e7d8504bbb"}, "tags": [], "refs": [["funnel_report_all_time_demo"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.320564}, "model.acton_marketing_data.topo_voc": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT\r\n    segment,\r\n    opp_lead_source AS lead_source,\r\n    account_global_region AS global_region,\r\n    'VOC' AS type,\r\n    month,\r\n    quarter,\r\n    COUNT(*) AS records\r\nFROM {{ref('funnel_report_all_time_voc')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nfunnel_report_all_time_voc.voc_date=date_base_xf.day\r\nWHERE voc_date >= '2021-01-01'\r\nAND opp_lead_source IN ('Marketing','Sales','SDR','Channel')\r\nGROUP BY 1,2,3,4,5,6\r\nORDER BY 1,2,3,4,5,6", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "topo_model", "topo_voc"], "unique_id": "model.acton_marketing_data.topo_voc", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "topo_model/topo_voc.sql", "original_file_path": "models/topo_model/topo_voc.sql", "name": "topo_voc", "alias": "topo_voc", "checksum": {"name": "sha256", "checksum": "69cca010738c01509d0de60f7ee98cb16a35bd36cfb1b05249eb4446e9d55abf"}, "tags": [], "refs": [["funnel_report_all_time_voc"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.322866}, "model.acton_marketing_data.marketing_lead_creation_date_history_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        lead_history_xf.lead_id,\r\n        lead_history_xf.field_modified_at,\r\n        lead_history_xf.field,\r\n        lead_history_xf.old_value,\r\n        lead_history_xf.new_value,\r\n        'lead' AS type\r\n    FROM {{ref('lead_history_xf')}}\r\n    LEFT JOIN {{ref('lead_source_xf')}} ON \r\n    lead_history_xf.lead_id=lead_source_xf.lead_id\r\n    WHERE marketing_created_date IS null\r\n    UNION ALL\r\n    SELECT \r\n        contact_history_xf.contact_id,\r\n        contact_history_xf.field_modified_at,\r\n        contact_history_xf.field,\r\n        contact_history_xf.old_value,\r\n        contact_history_xf.new_value,\r\n        'contact' AS type\r\n    FROM {{ref('contact_history_xf')}}\r\n    LEFT JOIN {{ref('contact_source_xf')}} ON \r\n    contact_history_xf.contact_id=contact_source_xf.contact_id\r\n    WHERE marketing_created_date IS null\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        lead_id,\r\n        old_value,\r\n        new_value,\r\n        field_modified_at,\r\n        type,\r\n        ROW_NUMBER() OVER(PARTITION BY lead_id ORDER BY field_modified_at) AS event_number\r\n    FROM base \r\n    WHERE field ='X9883_Lead_Score__c'\r\n    AND new_value > '0.0'\r\n    ORDER BY lead_id,field_modified_at\r\n\r\n)\r\n\r\nSELECT \r\n    lead_id,\r\n    old_value,\r\n    new_value,\r\n    field_modified_at,\r\n    type\r\nFROM final\r\nWHERE event_number = 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.lead_history_xf", "model.acton_marketing_data.lead_source_xf", "model.acton_marketing_data.contact_history_xf", "model.acton_marketing_data.contact_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "funnel_date_updates", "marketing_lead_creation_date_history_xf"], "unique_id": "model.acton_marketing_data.marketing_lead_creation_date_history_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "funnel_date_updates/marketing_lead_creation_date_history_xf.sql", "original_file_path": "models/funnel_date_updates/marketing_lead_creation_date_history_xf.sql", "name": "marketing_lead_creation_date_history_xf", "alias": "marketing_lead_creation_date_history_xf", "checksum": {"name": "sha256", "checksum": "6dc7ce24f9e0818e54ec6359e2e6574f1e081afde3efbdeee4385430a03080bc"}, "tags": [], "refs": [["lead_history_xf"], ["lead_source_xf"], ["contact_history_xf"], ["contact_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3248892}, "model.acton_marketing_data.opp_demo_date_history_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        opportunity_history_xf.opportunity_id,\r\n        opp_source_xf.type AS opp_type,\r\n        opportunity_history_xf.field_modified_at,\r\n        opportunity_history_xf.field,\r\n        opportunity_history_xf.old_value,\r\n        opportunity_history_xf.new_value\r\n    FROM {{ref('opportunity_history_xf')}}\r\n    LEFT JOIN {{ref('opp_source_xf')}} ON \r\n    opportunity_history_xf.opportunity_id=opp_source_xf.opportunity_id\r\n    WHERE demo_date IS null\r\n    AND type IN ('New Business','UpSell','Renewal')\r\n    AND field_modified_at >= '2021-01-01'\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        opportunity_id,\r\n        opp_type,\r\n        old_value,\r\n        new_value,\r\n        field_modified_at,\r\n        ROW_NUMBER() OVER(PARTITION BY opportunity_id ORDER BY field_modified_at) AS event_number\r\n    FROM base \r\n    WHERE field = 'StageName'\r\n    AND new_value = 'Demo'\r\n    ORDER BY opportunity_id,field_modified_at\r\n\r\n)\r\n\r\nSELECT \r\n    opportunity_id,\r\n    opp_type,\r\n    old_value,\r\n    new_value,\r\n    field_modified_at\r\nFROM final\r\nWHERE event_number = 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opportunity_history_xf", "model.acton_marketing_data.opp_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "funnel_date_updates", "opp_demo_date_history_xf"], "unique_id": "model.acton_marketing_data.opp_demo_date_history_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "funnel_date_updates/opp_demo_date_history_xf.sql", "original_file_path": "models/funnel_date_updates/opp_demo_date_history_xf.sql", "name": "opp_demo_date_history_xf", "alias": "opp_demo_date_history_xf", "checksum": {"name": "sha256", "checksum": "99b51873270f0ad547a1b13870587c6dbdcdec6a524352a78210cc616403b9fb"}, "tags": [], "refs": [["opportunity_history_xf"], ["opp_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.327198}, "model.acton_marketing_data.working_date_history_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        lead_history_xf.lead_id,\r\n        lead_history_xf.field_modified_at,\r\n        lead_history_xf.field,\r\n        lead_history_xf.old_value,\r\n        lead_history_xf.new_value,\r\n        'lead' AS type\r\n    FROM {{ref('lead_history_xf')}}\r\n    LEFT JOIN {{ref('lead_source_xf')}} ON \r\n    lead_history_xf.lead_id=lead_source_xf.lead_id\r\n    WHERE working_date IS null\r\n    UNION ALL\r\n    SELECT \r\n        contact_history_xf.contact_id,\r\n        contact_history_xf.field_modified_at,\r\n        contact_history_xf.field,\r\n        contact_history_xf.old_value,\r\n        contact_history_xf.new_value,\r\n        'contact' AS type\r\n    FROM {{ref('contact_history_xf')}}\r\n    LEFT JOIN {{ref('contact_source_xf')}} ON \r\n    contact_history_xf.contact_id=contact_source_xf.contact_id\r\n    WHERE working_date IS null\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        lead_id,\r\n        old_value,\r\n        new_value,\r\n        field_modified_at,\r\n        type,\r\n        ROW_NUMBER() OVER(PARTITION BY lead_id ORDER BY field_modified_at) AS event_number\r\n    FROM base \r\n    WHERE field = 'Status'\r\n    AND new_value = 'Working'\r\n    ORDER BY lead_id,field_modified_at\r\n\r\n)\r\n\r\nSELECT \r\n    lead_id,\r\n    old_value,\r\n    new_value,\r\n    field_modified_at,\r\n    type\r\nFROM final\r\nWHERE event_number = 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.lead_history_xf", "model.acton_marketing_data.lead_source_xf", "model.acton_marketing_data.contact_history_xf", "model.acton_marketing_data.contact_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "funnel_date_updates", "working_date_history_xf"], "unique_id": "model.acton_marketing_data.working_date_history_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "funnel_date_updates/working_date_history_xf.sql", "original_file_path": "models/funnel_date_updates/working_date_history_xf.sql", "name": "working_date_history_xf", "alias": "working_date_history_xf", "checksum": {"name": "sha256", "checksum": "08ad9ce415fed26438371a6ff6db08d17877c2658fac9674c21d9c79f2bea39b"}, "tags": [], "refs": [["lead_history_xf"], ["lead_source_xf"], ["contact_history_xf"], ["contact_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3292186}, "model.acton_marketing_data.opp_closing_date_history_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        opportunity_history_xf.opportunity_id,\r\n        opp_source_xf.type AS opp_type,\r\n        opportunity_history_xf.field_modified_at,\r\n        opportunity_history_xf.field,\r\n        opportunity_history_xf.old_value,\r\n        opportunity_history_xf.new_value\r\n    FROM {{ref('opportunity_history_xf')}}\r\n    LEFT JOIN {{ref('opp_source_xf')}} ON \r\n    opportunity_history_xf.opportunity_id=opp_source_xf.opportunity_id\r\n    WHERE closing_date IS null\r\n    AND type IN ('New Business','UpSell','Renewal')\r\n    AND field_modified_at >= '2021-01-01'\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        opportunity_id,\r\n        opp_type,\r\n        old_value,\r\n        new_value,\r\n        field_modified_at,\r\n        ROW_NUMBER() OVER(PARTITION BY opportunity_id ORDER BY field_modified_at) AS event_number\r\n    FROM base \r\n    WHERE field = 'StageName'\r\n    AND new_value = 'Closing'\r\n    ORDER BY opportunity_id,field_modified_at\r\n\r\n)\r\n\r\nSELECT \r\n    opportunity_id,\r\n    opp_type,\r\n    old_value,\r\n    new_value,\r\n    field_modified_at\r\nFROM final\r\nWHERE event_number = 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opportunity_history_xf", "model.acton_marketing_data.opp_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "funnel_date_updates", "opp_closing_date_history_xf"], "unique_id": "model.acton_marketing_data.opp_closing_date_history_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "funnel_date_updates/opp_closing_date_history_xf.sql", "original_file_path": "models/funnel_date_updates/opp_closing_date_history_xf.sql", "name": "opp_closing_date_history_xf", "alias": "opp_closing_date_history_xf", "checksum": {"name": "sha256", "checksum": "23f9f9731ab14c02ed89e3d2d7bd414d171fabb9991bb00bd34e30b9c8b50992"}, "tags": [], "refs": [["opportunity_history_xf"], ["opp_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3315914}, "model.acton_marketing_data.mql_date_history_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        lead_history_xf.lead_id,\r\n        lead_history_xf.field_modified_at,\r\n        lead_history_xf.field,\r\n        lead_history_xf.old_value,\r\n        lead_history_xf.new_value,\r\n        'lead' AS type\r\n    FROM {{ref('lead_history_xf')}}\r\n    LEFT JOIN {{ref('lead_source_xf')}} ON \r\n    lead_history_xf.lead_id=lead_source_xf.lead_id\r\n    WHERE mql_most_recent_date IS null\r\n    AND field ='X9883_Lead_Score__c'\r\n    AND new_value::Decimal >= '50.0'\r\n    AND old_value::Decimal < '50.0'\r\n    UNION ALL\r\n    SELECT \r\n        contact_history_xf.contact_id,\r\n        contact_history_xf.field_modified_at,\r\n        contact_history_xf.field,\r\n        contact_history_xf.old_value,\r\n        contact_history_xf.new_value,\r\n        'contact' AS type\r\n    FROM {{ref('contact_history_xf')}}\r\n    LEFT JOIN {{ref('contact_source_xf')}} ON \r\n    contact_history_xf.contact_id=contact_source_xf.contact_id\r\n    WHERE mql_most_recent_date IS null\r\n    AND field ='X9883_Lead_Score__c'\r\n    AND new_value::Decimal >= '50.0'\r\n    AND old_value::Decimal < '50.0'\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        lead_id,\r\n        old_value,\r\n        new_value,\r\n        field_modified_at,\r\n        type,\r\n        ROW_NUMBER() OVER(PARTITION BY lead_id ORDER BY field_modified_at) AS event_number\r\n    FROM base \r\n    ORDER BY lead_id,field_modified_at\r\n\r\n)\r\n\r\nSELECT \r\n    lead_id,\r\n    old_value,\r\n    new_value,\r\n    field_modified_at,\r\n    type\r\nFROM final\r\nWHERE event_number = 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.lead_history_xf", "model.acton_marketing_data.lead_source_xf", "model.acton_marketing_data.contact_history_xf", "model.acton_marketing_data.contact_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "funnel_date_updates", "mql_date_history_xf"], "unique_id": "model.acton_marketing_data.mql_date_history_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "funnel_date_updates/mql_date_history_xf.sql", "original_file_path": "models/funnel_date_updates/mql_date_history_xf.sql", "name": "mql_date_history_xf", "alias": "mql_date_history_xf", "checksum": {"name": "sha256", "checksum": "1fa54ddfad8a80b7b3f7fb1a43b21da6962577f6eb862d0053ed6c6b9cdf2da7"}, "tags": [], "refs": [["lead_history_xf"], ["lead_source_xf"], ["contact_history_xf"], ["contact_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3338253}, "model.acton_marketing_data.opp_discovery_date_history_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        opportunity_history_xf.opportunity_id,\r\n        opp_source_xf.type AS opp_type,\r\n        opportunity_history_xf.field_modified_at,\r\n        opportunity_history_xf.field,\r\n        opportunity_history_xf.old_value,\r\n        opportunity_history_xf.new_value\r\n    FROM {{ref('opportunity_history_xf')}}\r\n    LEFT JOIN {{ref('opp_source_xf')}} ON \r\n    opportunity_history_xf.opportunity_id=opp_source_xf.opportunity_id\r\n    WHERE discovery_date IS null\r\n    AND type IN ('New Business','UpSell','Renewal')\r\n    AND field_modified_at >= '2021-01-01'\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        opportunity_id,\r\n        opp_type,\r\n        old_value,\r\n        new_value,\r\n        field_modified_at,\r\n        ROW_NUMBER() OVER(PARTITION BY opportunity_id ORDER BY field_modified_at) AS event_number\r\n    FROM base \r\n    WHERE field = 'StageName'\r\n    AND new_value = 'Discovery'\r\n    ORDER BY opportunity_id,field_modified_at\r\n\r\n)\r\n\r\nSELECT \r\n    opportunity_id,\r\n    opp_type,\r\n    old_value,\r\n    new_value,\r\n    field_modified_at\r\nFROM final\r\nWHERE event_number = 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opportunity_history_xf", "model.acton_marketing_data.opp_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "funnel_date_updates", "opp_discovery_date_history_xf"], "unique_id": "model.acton_marketing_data.opp_discovery_date_history_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "funnel_date_updates/opp_discovery_date_history_xf.sql", "original_file_path": "models/funnel_date_updates/opp_discovery_date_history_xf.sql", "name": "opp_discovery_date_history_xf", "alias": "opp_discovery_date_history_xf", "checksum": {"name": "sha256", "checksum": "ca75cbfea918629a628d0408b6cd880e5b28ad86ecb9cb31f6c52248c00546a0"}, "tags": [], "refs": [["opportunity_history_xf"], ["opp_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3360772}, "model.acton_marketing_data.opp_voc_date_history_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        opportunity_history_xf.opportunity_id,\r\n        opp_source_xf.type AS opp_type,\r\n        opportunity_history_xf.field_modified_at,\r\n        opportunity_history_xf.field,\r\n        opportunity_history_xf.old_value,\r\n        opportunity_history_xf.new_value\r\n    FROM {{ref('opportunity_history_xf')}}\r\n    LEFT JOIN {{ref('opp_source_xf')}} ON \r\n    opportunity_history_xf.opportunity_id=opp_source_xf.opportunity_id\r\n    WHERE voc_date IS null\r\n    AND type IN ('New Business','UpSell','Renewal')\r\n    AND field_modified_at >= '2021-01-01'\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        opportunity_id,\r\n        opp_type,\r\n        old_value,\r\n        new_value,\r\n        field_modified_at,\r\n        ROW_NUMBER() OVER(PARTITION BY opportunity_id ORDER BY field_modified_at) AS event_number\r\n    FROM base \r\n    WHERE field = 'StageName'\r\n    AND new_value = 'VOC/Negotiate'\r\n    ORDER BY opportunity_id,field_modified_at\r\n\r\n)\r\n\r\nSELECT \r\n    opportunity_id,\r\n    opp_type,\r\n    old_value,\r\n    new_value,\r\n    field_modified_at\r\nFROM final\r\nWHERE event_number = 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opportunity_history_xf", "model.acton_marketing_data.opp_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "funnel_date_updates", "opp_voc_date_history_xf"], "unique_id": "model.acton_marketing_data.opp_voc_date_history_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "funnel_date_updates/opp_voc_date_history_xf.sql", "original_file_path": "models/funnel_date_updates/opp_voc_date_history_xf.sql", "name": "opp_voc_date_history_xf", "alias": "opp_voc_date_history_xf", "checksum": {"name": "sha256", "checksum": "e701d2c0e23a2a3a8b16eae103e6cc492abfd149e6db81c8ad4c173b2d2108cb"}, "tags": [], "refs": [["opportunity_history_xf"], ["opp_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3382082}, "model.acton_marketing_data.pipeline_2021_1H_PPC": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_pipeline AS (\r\n\r\nSELECT\r\nopportunity_id,\r\nopp_source_lead_creation,\r\nacv_deal_size_usd\r\nFROM {{ref('opp_source_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.opp_source_xf\r\nWHERE discovery_date >= '2020-01-01'\r\nAND discovery_date <= '2021-06-21'\r\nAND type = 'New Business'\r\nAND stage_name != 'Closed - Duplicate'\r\nAND stage_name != 'Closed - Admin Removed'\r\nAND opp_channel_lead_creation = 'ppc'\r\nAND opp_source_lead_creation NOT LIKE ('%act-on%')\r\nAND opp_source_lead_creation NOT LIKE ('%linkedin%')\r\nAND opp_source_lead_creation NOT LIKE ('%social%')\r\nAND opp_source_lead_creation NOT LIKE ('%SoftwareAdvice%')\r\n\r\n)\r\n\r\nSELECT\r\nopp_source_lead_creation,\r\nCOUNT(DISTINCT opportunity_id),\r\nSUM(acv_deal_size_usd)\r\nFROM base_pipeline\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "pipeline", "pipeline_2021_1H_PPC"], "unique_id": "model.acton_marketing_data.pipeline_2021_1H_PPC", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "pipeline/pipeline_2021_1H_PPC.sql", "original_file_path": "models/pipeline/pipeline_2021_1H_PPC.sql", "name": "pipeline_2021_1H_PPC", "alias": "pipeline_2021_1H_PPC", "checksum": {"name": "sha256", "checksum": "7fd7ffc467d0bf797c3cd0a682850a44e335132c3568bf067779c4b9b13970a7"}, "tags": [], "refs": [["opp_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3401897}, "model.acton_marketing_data.qoq_mktg_created_leads_by_attribution": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_quarter AS (\r\n\r\n    SELECT DISTINCT\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day BETWEEN CURRENT_DATE-90 AND CURRENT_DATE\r\n\r\n)\r\n\r\nSELECT\r\n    person_id,\r\n    last_quarter.quarter,\r\n    channel_lead_creation,\r\n    medium_lead_creation,\r\n    source_lead_creation,\r\n    country,\r\n    company_size_rev \r\nFROM {{ref('person_source_xf')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nmarketing_created_date=date_base_xf.day\r\nLEFT JOIN last_quarter ON \r\ndate_base_xf.quarter=last_quarter.quarter\r\nWHERE last_quarter.quarter IS NOT null\r\nAND marketing_created_date IS NOT null\r\nAND person_owner_id != '00Ga0000003Nugr' -- AO-Fake Leads\r\nAND email NOT LIKE '%act-on.com'\r\nAND lead_source = 'Marketing'", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "qoq", "leads", "qoq_mktg_created_leads_by_attribution"], "unique_id": "model.acton_marketing_data.qoq_mktg_created_leads_by_attribution", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "qoq/leads/qoq_mktg_created_leads_by_attribution.sql", "original_file_path": "models/qoq/leads/qoq_mktg_created_leads_by_attribution.sql", "name": "qoq_mktg_created_leads_by_attribution", "alias": "qoq_mktg_created_leads_by_attribution", "checksum": {"name": "sha256", "checksum": "098c365478521438f05595d7f824df54954bb0350939b7fdeecedd3d3a3f73a0"}, "tags": [], "refs": [["date_base_xf"], ["person_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3426921}, "model.acton_marketing_data.marketo_ap_reporting": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT *\r\nFROM {{ref('new_business_acv_influenced_by_aps_FY21_xf')}}\r\nWHERE LOWER(automated_program_name) LIKE 'marketo'", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.new_business_acv_influenced_by_aps_FY21_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "campaign_reporting", "marketo_ap_reporting"], "unique_id": "model.acton_marketing_data.marketo_ap_reporting", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "campaign_reporting/marketo_ap_reporting.sql", "original_file_path": "models/campaign_reporting/marketo_ap_reporting.sql", "name": "marketo_ap_reporting", "alias": "marketo_ap_reporting", "checksum": {"name": "sha256", "checksum": "8e7d72b81a9e49736d8ad76106ecc11d536e13965a38a3bd3b07b2d2e5176903"}, "tags": [], "refs": [["new_business_acv_influenced_by_aps_FY21_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3447707}, "model.acton_marketing_data.marketo_persons_influenced": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        email,\r\n        global_region,\r\n        marketing_created_date,\r\n        mql_most_recent_date,\r\n        campaign_first_touch,\r\n        campaign_last_touch,\r\n        campaign_lead_creation,\r\n        offer_asset_name_first_touch,\r\n        offer_asset_name_last_touch,\r\n        offer_asset_name_lead_creation,\r\n        offer_asset_subtype_first_touch,\r\n        offer_asset_subtype_last_touch,\r\n        offer_asset_subtype_lead_creation,\r\n        offer_asset_topic_first_touch,\r\n        offer_asset_topic_last_touch,\r\n        offer_asset_topic_lead_creation,\r\n        offer_asset_type_first_touch,\r\n        offer_asset_type_last_touch,\r\n        offer_asset_type_lead_creation\r\n    FROM {{ref('person_source_xf')}}\r\n    WHERE (campaign_first_touch LIKE 'marketo ap'\r\n        OR campaign_last_touch LIKE 'marketo ap'\r\n        OR campaign_lead_creation LIKE 'marketo ap')\r\n    \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.person_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "campaign_reporting", "marketo_persons_influenced"], "unique_id": "model.acton_marketing_data.marketo_persons_influenced", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "campaign_reporting/marketo_persons_influenced.sql", "original_file_path": "models/campaign_reporting/marketo_persons_influenced.sql", "name": "marketo_persons_influenced", "alias": "marketo_persons_influenced", "checksum": {"name": "sha256", "checksum": "1bdfd636dc7fac522d708cca7ca851146290de4bc0b3547a73720157673496a5"}, "tags": [], "refs": [["person_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.346658}, "model.acton_marketing_data.campaign_primary_source": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n    --Campaign Info\r\n        campaign_member.campaign_id,\r\n        campaign.campaign_name,\r\n        campaign.campaign_start_date,\r\n        campaign.campaign_end_date,\r\n        campaign.budgeted_cost,\r\n        campaign.actual_cost,\r\n        campaign.campaign_type,\r\n        campaign.campaign_status,\r\n        campaign.is_active_campaign,\r\n\r\n    --Parent Campaign Info\r\n        campaign.parent_campaign_id,\r\n        campaign.parent_campaign_name,\r\n        campaign.parent_campaign_start_date,\r\n        campaign.parent_campaign_end_date,\r\n        campaign.parent_budgeted_cost,\r\n        campaign.parent_actual_cost,\r\n        campaign.parent_campaign_type,\r\n        campaign.parent_campaign_status,\r\n        campaign.is_active_parent_campaign,\r\n\r\n    --Campaign Member Info\r\n        campaign_member.lead_or_contact_id,\r\n        campaign_member.campaign_member_id,\r\n        campaign_member.campaign_member_status,\r\n        campaign_member.campaign_member_type,\r\n        campaign_member.campaign_member_has_responded,\r\n        campaign_member.campaign_member_created_date,\r\n        campaign_member.campaign_member_first_responded_date,\r\n\r\n    --Person Info\r\n        person.email,\r\n        person.person_status,\r\n        person.lead_score,\r\n\r\n    --Account Info\r\n        person.lean_data_account_id AS account_id,\r\n        COALESCE(account.account_name,person.company) AS account_name,\r\n        account.account_owner_name,\r\n        account.account_csm_name,\r\n        COALESCE(account.global_region,person.global_region) AS global_region,\r\n        account.executive_sponsor,\r\n        account.assigned_account_tier,\r\n        account.customer_since,\r\n        account.renewal_date,\r\n        account.business_model,\r\n        account.contract_type,\r\n        account.delivered_support_tier,\r\n        COALESCE(account.industry,person.industry) AS industry,\r\n        COALESCE(account.industry_bucket,person.industry_bucket) AS industry_bucket,\r\n        COALESCE(account.company_size_rev,person.company_size_rev) AS company_size_rev,\r\n        COALESCE(account.segment,person.segment) AS segment,\r\n        account.account_type,\r\n        account.is_current_customer,\r\n\r\n    --Opportunity Info\r\n        campaign_influence.influence_opportunity_id AS opportunity_id,\r\n        opp.opportunity_name,\r\n        opp.acv AS acv_deal_size_usd,\r\n        opp.created_date,\r\n        opp.discovery_date,\r\n        opp.close_date,\r\n        opp.type AS opp_type,\r\n        opp.is_closed,\r\n        opp.is_won,\r\n        CASE \r\n            WHEN is_won = true THEN influence_opportunity_id\r\n            END AS won_opportunity_id,\r\n        CASE \r\n            WHEN is_won = true THEN acv\r\n            END AS won_opportunity_acv\r\nFROM {{ref('campaign_member_source_xf')}} campaign_member\r\nLEFT JOIN {{ref('campaign_source_xf')}} campaign\r\nON campaign_member.campaign_id=campaign.campaign_id\r\nLEFT JOIN {{ref('person_source_xf')}} person\r\nON campaign_member.lead_or_contact_id=person.person_id\r\nLEFT JOIN {{ref('account_source_xf')}} account\r\nON person.lean_data_account_id=account.account_id\r\nLEFT JOIN {{ref('campaign_influence_xf')}} campaign_influence\r\nON campaign_member.campaign_id=campaign_influence.influence_campaign_id\r\nAND campaign_influence.influence_contact_id=person.person_id\r\nLEFT JOIN {{ref('opp_source_xf')}} opp\r\nON campaign_influence.influence_opportunity_id=opp.opportunity_id\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.campaign_member_source_xf", "model.acton_marketing_data.campaign_source_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.campaign_influence_xf", "model.acton_marketing_data.opp_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "campaign_reporting", "campaign_primary_source"], "unique_id": "model.acton_marketing_data.campaign_primary_source", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "campaign_reporting/campaign_primary_source.sql", "original_file_path": "models/campaign_reporting/campaign_primary_source.sql", "name": "campaign_primary_source", "alias": "campaign_primary_source", "checksum": {"name": "sha256", "checksum": "a6f8d9549c4f8f28ddc12b9bbc0b956b4f9841ec683287994bfe4586b7d5868d"}, "tags": [], "refs": [["campaign_member_source_xf"], ["campaign_source_xf"], ["person_source_xf"], ["account_source_xf"], ["campaign_influence_xf"], ["opp_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3486538}, "model.acton_marketing_data.ao_emails": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT *\r\n    FROM {{ source('data_studio_s3', 'data_studio_emails') }}\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.data_studio_s3.data_studio_emails"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "ao_data", "ao_emails"], "unique_id": "model.acton_marketing_data.ao_emails", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "ao_data/ao_emails.sql", "original_file_path": "models/ao_data/ao_emails.sql", "name": "ao_emails", "alias": "ao_emails", "checksum": {"name": "sha256", "checksum": "1aa64fbcd42b3d5be5ded05a65ac68d480e41eae7cb16b9ff37d829909d23f4f"}, "tags": [], "refs": [], "sources": [["data_studio_s3", "data_studio_emails"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.351003}, "model.acton_marketing_data.ao_webinars": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT *\r\n    FROM {{ source('data_studio_s3', 'data_studio_webinars') }}\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.data_studio_s3.data_studio_webinars"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "ao_data", "ao_webinars"], "unique_id": "model.acton_marketing_data.ao_webinars", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "ao_data/ao_webinars.sql", "original_file_path": "models/ao_data/ao_webinars.sql", "name": "ao_webinars", "alias": "ao_webinars", "checksum": {"name": "sha256", "checksum": "67a22115d76f5e03d9bd836970c62ba6e325bc57a8e1f3a2e5113e56f56d8119"}, "tags": [], "refs": [], "sources": [["data_studio_s3", "data_studio_webinars"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.353232}, "model.acton_marketing_data.ao_forms": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT *\r\n    FROM {{ source('data_studio_s3', 'data_studio_forms') }}\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.data_studio_s3.data_studio_forms"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "ao_data", "ao_forms"], "unique_id": "model.acton_marketing_data.ao_forms", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "ao_data/ao_forms.sql", "original_file_path": "models/ao_data/ao_forms.sql", "name": "ao_forms", "alias": "ao_forms", "checksum": {"name": "sha256", "checksum": "60d39903aab08487434041e29b34d4b0d15c04c74d7ce53c418fa351888c0d81"}, "tags": [], "refs": [], "sources": [["data_studio_s3", "data_studio_forms"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3551626}, "model.acton_marketing_data.ao_landingpages": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT *\r\n    FROM {{ source('data_studio_s3', 'data_studio_landingpages') }}\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.data_studio_s3.data_studio_landingpages"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "ao_data", "ao_landingpages"], "unique_id": "model.acton_marketing_data.ao_landingpages", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "ao_data/ao_landingpages.sql", "original_file_path": "models/ao_data/ao_landingpages.sql", "name": "ao_landingpages", "alias": "ao_landingpages", "checksum": {"name": "sha256", "checksum": "66ab65a32f8a23861c3eff27050240c9ec2a19c8c57333904cbd24e8bc2a0589"}, "tags": [], "refs": [], "sources": [["data_studio_s3", "data_studio_landingpages"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.357234}, "model.acton_marketing_data.ao_combined": {"raw_sql": "", "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "ao_data", "ao_combined"], "unique_id": "model.acton_marketing_data.ao_combined", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "ao_data/ao_combined.sql", "original_file_path": "models/ao_data/ao_combined.sql", "name": "ao_combined", "alias": "ao_combined", "checksum": {"name": "sha256", "checksum": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3592393}, "model.acton_marketing_data.ao_media": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT *\r\n    FROM {{ source('data_studio_s3', 'data_studio_media') }}\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.data_studio_s3.data_studio_media"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "ao_data", "ao_media"], "unique_id": "model.acton_marketing_data.ao_media", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "ao_data/ao_media.sql", "original_file_path": "models/ao_data/ao_media.sql", "name": "ao_media", "alias": "ao_media", "checksum": {"name": "sha256", "checksum": "948ef3f89231c22bc9455707bcc254f89f9e50ec8d86a3947213799d6d5c58d3"}, "tags": [], "refs": [], "sources": [["data_studio_s3", "data_studio_media"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3609624}, "model.acton_marketing_data.ao_webpages": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT *\r\n    FROM {{ source('data_studio_s3', 'data_studio_webpages') }}\r\n\r\n)\r\n\r\nSELECT\r\n    action,\r\n    action_time,\r\n    action_day,\r\n    cookie_id,\r\n    attribution_id,\r\n    contact_e_mail,\r\n    ip_address,\r\n    page_url,\r\n    referral_url,\r\n    visitor_type,\r\n    e_mail_domain,\r\n    unique_visitor_id,\r\n    url_path_info\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.acton_marketing_data.data_studio_s3.data_studio_webpages"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "ao_data", "ao_webpages"], "unique_id": "model.acton_marketing_data.ao_webpages", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "ao_data/ao_webpages.sql", "original_file_path": "models/ao_data/ao_webpages.sql", "name": "ao_webpages", "alias": "ao_webpages", "checksum": {"name": "sha256", "checksum": "751cdb5bba142e2a7b2196aa56629538587a461c4a7473c0c266b0a6c78c7b6f"}, "tags": [], "refs": [], "sources": [["data_studio_s3", "data_studio_webpages"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3632212}, "model.acton_marketing_data.funnel_report_previous_week_leads": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        person_source_xf.person_id AS lead_id,\r\n        person_source_xf.marketing_created_date AS created_date,\r\n        country,\r\n        global_region\r\n    FROM {{ref('person_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    person_source_xf.marketing_created_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_leads"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_leads", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_leads.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_leads.sql", "name": "funnel_report_previous_week_leads", "alias": "funnel_report_previous_week_leads", "checksum": {"name": "sha256", "checksum": "1b36bfeeb9984768a32f37e633be35165312e5fd4c4ad58e2a837309fbebcce6"}, "tags": [], "refs": [["date_base_xf"], ["person_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3652117}, "model.acton_marketing_data.funnel_report_current_quarter_sqos_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sqo_source_ss_xf.opportunity_id AS sqo_id,\r\n        sqo_source_ss_xf.discovery_date AS sqo_date,\r\n        acv,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('sqo_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sqo_source_ss_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_sqos_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_sqos_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_sqos_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_sqos_ss.sql", "name": "funnel_report_current_quarter_sqos_ss", "alias": "funnel_report_current_quarter_sqos_ss", "checksum": {"name": "sha256", "checksum": "aeb8d47227d4aa136abad48937dba238867bf8fedf6bd0e98c5f91213611cf6c"}, "tags": [], "refs": [["date_base_xf"], ["sqo_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3673222}, "model.acton_marketing_data.funnel_report_current_quarter_by_week_pipeline": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        week,\r\n        opp_lead_source\r\n    FROM {{ref('funnel_report_current_quarter_sqos')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        opp_lead_source\r\n    FROM {{ref('funnel_report_current_quarter_demo')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        opp_lead_source\r\n    FROM {{ref('funnel_report_current_quarter_voc')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        opp_lead_source\r\n    FROM {{ref('funnel_report_current_quarter_closing')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    week,\r\n    opp_lead_source\r\n    FROM base_prep\r\n\r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        week,\r\n        opp_lead_source\r\n    FROM {{ref('funnel_report_current_quarter_sqos')}}\r\n    GROUP BY 3,4\r\n\r\n), demo_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        week,\r\n        opp_lead_source\r\n    FROM {{ref('funnel_report_current_quarter_demo')}}\r\n    GROUP BY 3,4\r\n\r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        week,\r\n        opp_lead_source\r\n    FROM {{ref('funnel_report_current_quarter_voc')}}\r\n    GROUP BY 3,4\r\n\r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        week,\r\n        opp_lead_source\r\n    FROM {{ref('funnel_report_current_quarter_closing')}}\r\n    GROUP BY 3,4\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.week,\r\n        base.opp_lead_source,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE     \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv\r\n    FROM base\r\n    LEFT JOIN sqo_base ON\r\n    base.week=sqo_base.week\r\n    AND base.opp_lead_source=sqo_base.opp_lead_source\r\n    LEFT JOIN demo_base ON\r\n    base.week=demo_base.week\r\n    AND base.opp_lead_source=demo_base.opp_lead_source\r\n    LEFT JOIN voc_base ON\r\n    base.week=voc_base.week\r\n    AND base.opp_lead_source=voc_base.opp_lead_source\r\n    LEFT JOIN closing_base ON\r\n    base.week=closing_base.week\r\n    AND base.opp_lead_source=closing_base.opp_lead_source\r\n    GROUP BY 1,2\r\n    ORDER BY 1,2\r\n\r\n)\r\n\r\nSELECT\r\n    week,\r\n    opp_lead_source,\r\n    SUM(sqos+demo+voc+closing) AS records,\r\n    SUM(sqo_acv+demo_acv+voc_acv+closing_acv) AS pipeline\r\nFROM final\r\nGROUP BY 1,2\r\nUNION ALL \r\nSELECT\r\n    'Total' AS week,\r\n    opp_lead_source,\r\n    SUM(sqos+demo+voc+closing) AS records,\r\n    SUM(sqo_acv+demo_acv+voc_acv+closing_acv) AS pipeline\r\nFROM final\r\nGROUP BY 1,2\r\nORDER BY 1,2", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_closing"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_by_week_pipeline"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_by_week_pipeline", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_by_week_pipeline.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_by_week_pipeline.sql", "name": "funnel_report_current_quarter_by_week_pipeline", "alias": "funnel_report_current_quarter_by_week_pipeline", "checksum": {"name": "sha256", "checksum": "8314a5a5627bab162d67c045d1183daf4ac05b59c70512eaaff3cfa347e069a8"}, "tags": [], "refs": [["funnel_report_current_quarter_sqos"], ["funnel_report_current_quarter_demo"], ["funnel_report_current_quarter_voc"], ["funnel_report_current_quarter_closing"], ["funnel_report_current_quarter_sqos"], ["funnel_report_current_quarter_demo"], ["funnel_report_current_quarter_voc"], ["funnel_report_current_quarter_closing"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3696475}, "model.acton_marketing_data.funnel_report_current_quarter_ss_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS last_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS last_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS last_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS last_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS last_sqo_to_won\r\n    FROM {{ref('funnel_report_current_quarter_ss_xf')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_quarter_ss_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_ss_conversion"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_ss_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_ss_conversion.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_ss_conversion.sql", "name": "funnel_report_current_quarter_ss_conversion", "alias": "funnel_report_current_quarter_ss_conversion", "checksum": {"name": "sha256", "checksum": "0d9492abdd4d07308b26af7b3daca946c1be572729c0584364c588f38ad5ad90"}, "tags": [], "refs": [["funnel_report_current_quarter_ss_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3721242}, "model.acton_marketing_data.funnel_report_current_week_sals": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sal_source_xf.person_id AS sal_id,\r\n        sal_source_xf.working_date AS sal_date,\r\n        country,\r\n        global_region\r\n    FROM {{ref('sal_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sal_source_xf.working_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_sals"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_sals", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_sals.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_sals.sql", "name": "funnel_report_current_week_sals", "alias": "funnel_report_current_week_sals", "checksum": {"name": "sha256", "checksum": "1ba0a54bfd4e358290d2928b03f8ae0b80a51454b8d942892392c0543b54e047"}, "tags": [], "refs": [["date_base_xf"], ["sal_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3743773}, "model.acton_marketing_data.funnel_report_all_time_filters_industry": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        created_date AS date\r\n    FROM {{ref('funnel_report_all_time_leads')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        mql_date\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sal_date\r\n    FROM {{ref('funnel_report_all_time_sals')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sql_date\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sqo_date\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        demo_date\r\n    FROM {{ref('funnel_report_all_time_demo')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        voc_date\r\n    FROM {{ref('funnel_report_all_time_voc')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        closing_date\r\n    FROM {{ref('funnel_report_all_time_closing')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        won_date\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        lost_date\r\n    FROM {{ref('funnel_report_all_time_lost')}}\r\n\r\n), final AS (\r\n\r\n    SELECT DISTINCT\r\n        base.industry\r\n    FROM base\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_all_time_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_filters_industry"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_filters_industry", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_filters_industry.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_filters_industry.sql", "name": "funnel_report_all_time_filters_industry", "alias": "funnel_report_all_time_filters_industry", "checksum": {"name": "sha256", "checksum": "c7d4c98370b026ce59cb26641d423445561759d5062cc9dc9d1c6a7a48c375d2"}, "tags": [], "refs": [["funnel_report_all_time_leads"], ["funnel_report_all_time_mqls"], ["funnel_report_all_time_sals"], ["funnel_report_all_time_sqls"], ["funnel_report_all_time_sqos"], ["funnel_report_all_time_demo"], ["funnel_report_all_time_voc"], ["funnel_report_all_time_closing"], ["funnel_report_all_time_won"], ["funnel_report_all_time_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3764577}, "model.acton_marketing_data.funnel_report_current_week_ss_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_leads_ss')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_mqls_ss')}}\r\n    GROUP BY 1,3,4,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_sals_ss')}}\r\n    GROUP BY 1,2,4,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_sqls_ss')}}\r\n    GROUP BY 1,2,3,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_sqos_ss')}}\r\n    GROUP BY 1,2,3,4,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        COUNT(DISTINCT demo_id) AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_demo_ss')}}\r\n    GROUP BY 1,2,3,4,5,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_voc_ss')}}\r\n    GROUP BY 1,2,3,4,5,6,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_closing_ss')}}\r\n    GROUP BY 1,2,3,4,5,6,7,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        COUNT(DISTINCT won_id) AS won\r\n    FROM {{ref('funnel_report_current_week_won')}}\r\n    GROUP BY 1,2,3,4,5,6,7,8\r\n\r\n)\r\n\r\nSELECT\r\n    SUM(leads) AS leads,\r\n    SUM(mqls) AS mqls,\r\n    SUM(sals) AS sals,\r\n    SUM(sqls) AS sqls,\r\n    SUM(sqos) AS sqos,\r\n    SUM(demos) AS demos,\r\n    SUM(voc) AS voc,\r\n    SUM(closing) AS closing,\r\n    SUM(won) AS won\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_won"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_ss_xf"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_ss_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_ss_xf.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_ss_xf.sql", "name": "funnel_report_current_week_ss_xf", "alias": "funnel_report_current_week_ss_xf", "checksum": {"name": "sha256", "checksum": "717b8d5e62111eeed5735778c93cc2945c72e8dfc3123d8a6586dc2d91747619"}, "tags": [], "refs": [["funnel_report_current_week_leads_ss"], ["funnel_report_current_week_mqls_ss"], ["funnel_report_current_week_sals_ss"], ["funnel_report_current_week_sqls_ss"], ["funnel_report_current_week_sqos_ss"], ["funnel_report_current_week_demo_ss"], ["funnel_report_current_week_voc_ss"], ["funnel_report_current_week_closing_ss"], ["funnel_report_current_week_won"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3792198}, "model.acton_marketing_data.funnel_report_all_time_mql2sql_velocity": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        mql_created_date AS mql_date,\r\n        opportunity_id,\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket,\r\n        opp_created_date AS sql_date,\r\n        account_global_region,\r\n        opp_company_size_rev,\r\n        opp_lead_source,\r\n        opp_segment,\r\n        opp_industry,\r\n        opp_channel_bucket,\r\n        opp_industry_bucket\r\n    FROM {{ref('opportunities_with_contacts')}}\r\n    WHERE type='New Business'\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        mql_date,\r\n        sql_date,\r\n        opp_company_size_rev,\r\n        opp_lead_source,\r\n        account_global_region,\r\n        opp_segment,\r\n        opp_industry,\r\n        opp_channel_bucket,\r\n        opp_industry_bucket,\r\n        {{ dbt_utils.datediff(\"mql_date\",\"sql_date\",'day')}} AS mql2sql_velocity\r\n    FROM base\r\n    WHERE sql_date >= mql_date\r\n)\r\n\r\nSELECT\r\n    account_global_region,\r\n    opp_company_size_rev,\r\n    opp_lead_source,\r\n    opp_segment,\r\n    opp_industry,\r\n    opp_channel_bucket,\r\n    opp_industry_bucket,\r\n    sql_date,\r\n    mql2sql_velocity\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.opportunities_with_contacts"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_mql2sql_velocity"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_mql2sql_velocity", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_mql2sql_velocity.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_mql2sql_velocity.sql", "name": "funnel_report_all_time_mql2sql_velocity", "alias": "funnel_report_all_time_mql2sql_velocity", "checksum": {"name": "sha256", "checksum": "c664b0df81c7668addc6bcfcc46cc1f8dcfcff51d86720a5f51eefd4e42bebe0"}, "tags": [], "refs": [["opportunities_with_contacts"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.381883}, "model.acton_marketing_data.funnel_report_current_week_sqls": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sql_id,\r\n        sql_source_xf.created_date AS sql_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('sql_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sql_source_xf.created_date::Date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_sqls"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_sqls", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_sqls.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_sqls.sql", "name": "funnel_report_current_week_sqls", "alias": "funnel_report_current_week_sqls", "checksum": {"name": "sha256", "checksum": "84caf54f4b1d2a9440edc8ebc7c8b0504e3afc951b47ad9fbf5fd0a9145d4cb2"}, "tags": [], "refs": [["date_base_xf"], ["sql_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3871264}, "model.acton_marketing_data.funnel_report_all_time_l20_velocity_opp": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        marketing_created_date,\r\n        opportunity_id,\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket,\r\n        opp_created_date,\r\n        account_global_region,\r\n        opp_company_size_rev,\r\n        opp_lead_source,\r\n        opp_segment,\r\n        opp_industry,\r\n        opp_channel_bucket,\r\n        opp_industry_bucket\r\n    FROM {{ref('opportunities_with_contacts')}}\r\n    WHERE type='New Business'\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        marketing_created_date,\r\n        opp_created_date,\r\n        account_global_region,\r\n        opp_company_size_rev,\r\n        opp_lead_source,\r\n        opp_segment,\r\n        opp_industry,\r\n        opp_channel_bucket,\r\n        opp_industry_bucket,\r\n        {{ dbt_utils.datediff(\"marketing_created_date\",\"opp_created_date\",'day')}} AS lead_to_opp_velocity\r\n    FROM base\r\n    WHERE opp_created_date >= marketing_created_date\r\n)\r\n\r\nSELECT\r\n    account_global_region,\r\n    opp_company_size_rev,\r\n    opp_lead_source,\r\n    opp_segment,\r\n    opp_industry,\r\n    opp_channel_bucket,\r\n    opp_industry_bucket,\r\n    opp_created_date,\r\n    lead_to_opp_velocity\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.opportunities_with_contacts"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_l20_velocity_opp"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_l20_velocity_opp", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_l20_velocity_opp.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_l20_velocity_opp.sql", "name": "funnel_report_all_time_l20_velocity_opp", "alias": "funnel_report_all_time_l20_velocity_opp", "checksum": {"name": "sha256", "checksum": "9254fe4c290baa246bf90a18727ab413d8b3ef3f56d6d411a5a93ee7c6eda82b"}, "tags": [], "refs": [["opportunities_with_contacts"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3893325}, "model.acton_marketing_data.funnel_report_current_quarter_sqls": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sql_source_xf.sql_id,\r\n        sql_source_xf.created_date AS sql_date,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('sql_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sql_source_xf.created_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_sqls"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_sqls", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_sqls.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_sqls.sql", "name": "funnel_report_current_quarter_sqls", "alias": "funnel_report_current_quarter_sqls", "checksum": {"name": "sha256", "checksum": "6d9b8455c968dbbe70407a0f34bb619b822ace21f188ee1522f09cac9ba27424"}, "tags": [], "refs": [["date_base_xf"], ["sql_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.394354}, "model.acton_marketing_data.funnel_report_current_week_sqos_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sqo_source_ss_xf.opportunity_id AS sqo_id,\r\n        acv,    \r\n        sqo_source_ss_xf.discovery_date AS sqo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('sqo_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sqo_source_ss_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_sqos_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_sqos_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_sqos_ss.sql", "name": "funnel_report_current_week_sqos_ss", "alias": "funnel_report_current_week_sqos_ss", "checksum": {"name": "sha256", "checksum": "27c5662355606f80c26c581109184b0c8499cc50dd8fe44d97c5a3f43e9b8b4d"}, "tags": [], "refs": [["date_base_xf"], ["sqo_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.3964503}, "model.acton_marketing_data.funnel_report_rolling3mo_sals": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH rolling_3mo AS (\r\n\r\n    SELECT DISTINCT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day >= CURRENT_DATE-90\r\n    AND day <= CURRENT_DATE\r\n    ORDER BY 1\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sal_source_xf.person_id AS sal_id,\r\n        sal_source_xf.working_date AS working_date,\r\n        rolling_3mo.week,\r\n        global_region\r\n    FROM {{ref('sal_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sal_source_xf.working_date=date_base_xf.day\r\n    LEFT JOIN rolling_3mo ON \r\n    date_base_xf.week=rolling_3mo.week\r\n    WHERE rolling_3mo.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_sals"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_sals", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_sals.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_sals.sql", "name": "funnel_report_rolling3mo_sals", "alias": "funnel_report_rolling3mo_sals", "checksum": {"name": "sha256", "checksum": "8caf4afa6e264b125fdbb241ade057d78a63cded281cf52fb4b3e798489381f5"}, "tags": [], "refs": [["date_base_xf"], ["sal_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.398504}, "model.acton_marketing_data.funnel_report_current_quarter_by_week_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqos')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    week,\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads')}}\r\n    GROUP BY 2,3\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls')}}\r\n    GROUP BY 2,3\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals')}}\r\n    GROUP BY 2,3\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls')}}\r\n    GROUP BY 2,3\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqos')}}\r\n    GROUP BY 2,3\r\n\r\n)\r\n\r\nSELECT\r\n    base.week,\r\n    base.global_region,\r\n    CASE \r\n        WHEN SUM(leads) IS null THEN 0\r\n        ELSE SUM(leads) \r\n    END AS leads,\r\n    CASE \r\n        WHEN SUM(mqls) IS null THEN 0\r\n        ELSE SUM(mqls) \r\n    END AS mqls,\r\n    CASE \r\n        WHEN SUM(sals) IS null THEN 0\r\n        ELSE SUM(sals) \r\n    END AS sals,\r\n    CASE \r\n        WHEN SUM(sqls) IS null THEN 0\r\n        ELSE SUM(sqls) \r\n    END AS sqls,\r\n    CASE \r\n        WHEN SUM(sqos) IS null THEN 0\r\n        ELSE SUM(sqos) \r\n    END AS sqos\r\nFROM base\r\nLEFT JOIN lead_base ON\r\nbase.week=lead_base.week\r\nAND base.global_region=lead_base.global_region\r\nLEFT JOIN mql_base ON\r\nbase.week=mql_base.week\r\nAND base.global_region=mql_base.global_region\r\nLEFT JOIN sal_base ON\r\nbase.week=sal_base.week\r\nAND base.global_region=sal_base.global_region\r\nLEFT JOIN sql_base ON\r\nbase.week=sql_base.week\r\nAND base.global_region=sql_base.account_global_region\r\nLEFT JOIN sqo_base ON\r\nbase.week=sqo_base.week\r\nAND base.global_region=sqo_base.account_global_region\r\nGROUP BY 1,2\r\nORDER BY 1,2", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_by_week_xf"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_by_week_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_by_week_xf.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_by_week_xf.sql", "name": "funnel_report_current_quarter_by_week_xf", "alias": "funnel_report_current_quarter_by_week_xf", "checksum": {"name": "sha256", "checksum": "173ea3612888a6d71ba7bfc617d7f8ebc0e16b2675c28edb4641a4b72f03b3db"}, "tags": [], "refs": [["funnel_report_current_quarter_leads"], ["funnel_report_current_quarter_mqls"], ["funnel_report_current_quarter_sals"], ["funnel_report_current_quarter_sqls"], ["funnel_report_current_quarter_sqos"], ["funnel_report_current_quarter_leads"], ["funnel_report_current_quarter_mqls"], ["funnel_report_current_quarter_sals"], ["funnel_report_current_quarter_sqls"], ["funnel_report_current_quarter_sqos"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4007702}, "model.acton_marketing_data.funnel_report_current_quarter_ss_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_quarter_leads_ss')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_quarter_mqls_ss')}}\r\n    GROUP BY 1,3,4,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_quarter_sals_ss')}}\r\n    GROUP BY 1,2,4,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_quarter_sqls_ss')}}\r\n    GROUP BY 1,2,3,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_quarter_sqos_ss')}}\r\n    GROUP BY 1,2,3,4,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        COUNT(DISTINCT demo_id) AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_quarter_demo_ss')}}\r\n    GROUP BY 1,2,3,4,5,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_quarter_voc_ss')}}\r\n    GROUP BY 1,2,3,4,5,6,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_quarter_closing_ss')}}\r\n    GROUP BY 1,2,3,4,5,6,7,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        COUNT(DISTINCT won_id) AS won\r\n    FROM {{ref('funnel_report_current_quarter_won')}}\r\n    GROUP BY 1,2,3,4,5,6,7,8\r\n\r\n)\r\n\r\nSELECT\r\n    SUM(leads) AS leads,\r\n    SUM(mqls) AS mqls,\r\n    SUM(sals) AS sals,\r\n    SUM(sqls) AS sqls,\r\n    SUM(sqos) AS sqos,\r\n    SUM(demos) AS demos,\r\n    SUM(voc) AS voc,\r\n    SUM(closing) AS closing,\r\n    SUM(won) AS won\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqos_ss", "model.acton_marketing_data.funnel_report_current_quarter_demo_ss", "model.acton_marketing_data.funnel_report_current_quarter_voc_ss", "model.acton_marketing_data.funnel_report_current_quarter_closing_ss", "model.acton_marketing_data.funnel_report_current_quarter_won"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_ss_xf"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_ss_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_ss_xf.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_ss_xf.sql", "name": "funnel_report_current_quarter_ss_xf", "alias": "funnel_report_current_quarter_ss_xf", "checksum": {"name": "sha256", "checksum": "74bbae89bfffc30faa7558471691ed60ae1edc61639ba4ae4ec5bdd19acec074"}, "tags": [], "refs": [["funnel_report_current_quarter_leads_ss"], ["funnel_report_current_quarter_mqls_ss"], ["funnel_report_current_quarter_sals_ss"], ["funnel_report_current_quarter_sqls_ss"], ["funnel_report_current_quarter_sqos_ss"], ["funnel_report_current_quarter_demo_ss"], ["funnel_report_current_quarter_voc_ss"], ["funnel_report_current_quarter_closing_ss"], ["funnel_report_current_quarter_won"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4037209}, "model.acton_marketing_data.funnel_report_all_time_lost": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n        SELECT DISTINCT\r\n        opp_source_xf.opportunity_id AS lost_id,\r\n        CONCAT('https://acton.my.salesforce.com/',opp_source_xf.opportunity_id) AS lost_url,\r\n        opp_source_xf.account_name,\r\n        opp_source_xf.type AS opp_type,\r\n        acv_deal_size_usd,\r\n        opp_source_xf.close_date AS lost_date,\r\n        CASE\r\n        WHEN opp_source_xf.account_global_region IS null THEN 'blank'\r\n        ELSE opp_source_xf.account_global_region\r\n    END AS account_global_region,\r\n    CASE\r\n        WHEN opp_source_xf.company_size_rev IS null THEN 'blank'\r\n        ELSE opp_source_xf.company_size_rev\r\n    END AS company_size_rev,\r\n    CASE\r\n        WHEN opp_source_xf.opp_lead_source IS null THEN 'blank'\r\n        ELSE opp_source_xf.opp_lead_source\r\n    END AS opp_lead_source,\r\n    CASE\r\n        WHEN opp_source_xf.segment IS null THEN 'blank'\r\n        ELSE opp_source_xf.segment\r\n    END AS segment,\r\n    CASE\r\n        WHEN opp_source_xf.industry IS null THEN 'blank'\r\n        ELSE opp_source_xf.industry\r\n    END AS industry,\r\n    CASE\r\n        WHEN opp_source_xf.industry_bucket IS null THEN 'blank'\r\n        ELSE opp_source_xf.industry_bucket\r\n    END AS industry_bucket,\r\n    CASE\r\n        WHEN opp_source_xf.channel_bucket IS null THEN 'blank'\r\n        ELSE opp_source_xf.channel_bucket\r\n    END AS channel_bucket,\r\n    CASE\r\n        WHEN opp_offer_asset_name_lead_creation IS null THEN 'blank'\r\n        ELSE opp_offer_asset_name_lead_creation\r\n    END AS offer_asset_name_lead_creation\r\n    FROM {{ref('opp_source_xf')}}\r\n    LEFT JOIN {{ref('account_source_xf')}} ON\r\n    opp_source_xf.account_id=account_source_xf.account_id\r\n    WHERE opp_source_xf.close_date IS NOT null\r\n    AND opp_source_xf.stage_name IN ('Closed \u2013 Lost No Resources / Budget','Closed \u2013 Lost Not Ready / No Decision','Closed \u2013 Lost Product Deficiency','Closed - Lost to Competitor', 'Closed Lost')\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_lost"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_lost", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_lost.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_lost.sql", "name": "funnel_report_all_time_lost", "alias": "funnel_report_all_time_lost", "checksum": {"name": "sha256", "checksum": "8a9d6d2bda7b023c0abfd65560801adedc69d085e336fbc412db057ff53d8e7a"}, "tags": [], "refs": [["opp_source_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4064445}, "model.acton_marketing_data.funnel_report_rolling3mo_sqls": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH rolling_3mo AS (\r\n\r\n    SELECT DISTINCT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day >= CURRENT_DATE-90\r\n    AND day <= CURRENT_DATE\r\n    ORDER BY 1\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sql_source_xf.sql_id AS sql_id,\r\n        sql_source_xf.created_date AS created_date,\r\n        rolling_3mo.week,\r\n        account_global_region\r\n    FROM {{ref('sql_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sql_source_xf.created_date=date_base_xf.day\r\n    LEFT JOIN rolling_3mo ON \r\n    date_base_xf.week=rolling_3mo.week\r\n    WHERE rolling_3mo.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_sqls"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_sqls.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_sqls.sql", "name": "funnel_report_rolling3mo_sqls", "alias": "funnel_report_rolling3mo_sqls", "checksum": {"name": "sha256", "checksum": "fc69d57f00a196ab578765e7f141b1b8afddb95a6c9097a08deae6a55a000f4e"}, "tags": [], "refs": [["date_base_xf"], ["sql_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4085093}, "model.acton_marketing_data.funnel_report_current_quarter_sals": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sal_source_xf.person_id AS sal_id,\r\n        sal_source_xf.working_date AS sal_date,\r\n        week,\r\n        global_region\r\n    FROM {{ref('sal_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sal_source_xf.working_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_sals"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_sals", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_sals.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_sals.sql", "name": "funnel_report_current_quarter_sals", "alias": "funnel_report_current_quarter_sals", "checksum": {"name": "sha256", "checksum": "11bad2ea9f092f964920d325d099eeed792ca8cdc08c00e949a6717f7de31633"}, "tags": [], "refs": [["date_base_xf"], ["sal_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.410737}, "model.acton_marketing_data.funnel_report_previous_week_voc_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_voc_source_ss_xf.opportunity_id AS voc_id,\r\n        acv,\r\n        opp_voc_source_ss_xf.negotiation_date AS sqo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_voc_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_voc_source_ss_xf.negotiation_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_voc_ss"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_voc_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_voc_ss.sql", "name": "funnel_report_previous_week_voc_ss", "alias": "funnel_report_previous_week_voc_ss", "checksum": {"name": "sha256", "checksum": "9eb67802d8b83fe1f83984da712bd19e44a8d2b4a15742bbeeaf19bee382f36c"}, "tags": [], "refs": [["date_base_xf"], ["opp_voc_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.412902}, "model.acton_marketing_data.funnel_report_all_time_sqos_to_target": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH sqo_target AS (\r\n\r\n    SELECT \r\n        kpi_month,\r\n        kpi_region,\r\n        kpi_target AS sqos_target\r\n    FROM {{ref('kpi_targets')}}\r\n    WHERE kpi = 'target_sqos'\r\n\r\n), actual_sqos AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',sqo_date)::Date AS sqos_month,\r\n        CASE \r\n            WHEN account_global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN account_global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        COUNT(DISTINCT sqo_id) AS sqos\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    WHERE sqo_date >= '2022-04-01'\r\n    GROUP BY 1,2\r\n)\r\n\r\nSELECT\r\n    sqos_month,\r\n    actual_sqos.region,\r\n    sqos,\r\n    sqos_target,\r\n    sqos/sqos_target AS actual_vs_target\r\nFROM actual_sqos\r\nLEFT JOIN sqo_target ON\r\nactual_sqos.sqos_month=sqo_target.kpi_month\r\nAND actual_sqos.region=sqo_target.kpi_region\r\nWHERE region IS NOT null", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.kpi_targets", "model.acton_marketing_data.funnel_report_all_time_sqos"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_sqos_to_target"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_sqos_to_target", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_sqos_to_target.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_sqos_to_target.sql", "name": "funnel_report_all_time_sqos_to_target", "alias": "funnel_report_all_time_sqos_to_target", "checksum": {"name": "sha256", "checksum": "83987d935de3b1bf18b1efa42c564969679b9fac98f394fb80a1e5c70c5c5124"}, "tags": [], "refs": [["kpi_targets"], ["funnel_report_all_time_sqos"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4153564}, "model.acton_marketing_data.funnel_report_current_quarter_closing": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_closing_source_xf.opportunity_id AS closing_id,\r\n        acv,\r\n        opp_closing_source_xf.closing_date AS closing_date,\r\n        country,\r\n        account_global_region,\r\n        opp_lead_source,\r\n        week\r\n    FROM {{ref('opp_closing_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_closing_source_xf.closing_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_closing"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_closing", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_closing.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_closing.sql", "name": "funnel_report_current_quarter_closing", "alias": "funnel_report_current_quarter_closing", "checksum": {"name": "sha256", "checksum": "58389e39637e05d61c4b5dafb2ef71b5ecd5c7f9fea7efcb740798bad2079b4f"}, "tags": [], "refs": [["date_base_xf"], ["opp_closing_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4173338}, "model.acton_marketing_data.funnel_report_previous_week_mqls": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        lead_mql_source_xf.person_id AS mql_id,\r\n        lead_mql_source_xf.mql_created_date AS mql_date,\r\n        country,\r\n        global_region\r\n    FROM {{ref('lead_mql_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    lead_mql_source_xf.mql_created_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_mqls"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_mqls", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_mqls.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_mqls.sql", "name": "funnel_report_previous_week_mqls", "alias": "funnel_report_previous_week_mqls", "checksum": {"name": "sha256", "checksum": "c47c11b439e5138371049e1161bf45fe9a2c519df9e973c7fde18a1617c52274"}, "tags": [], "refs": [["date_base_xf"], ["lead_mql_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4194458}, "model.acton_marketing_data.funnel_report_rolling3mo_combined_na": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_leads')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_mqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sals')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sqos')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_demo')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_voc')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_closing')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_won')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_leads')}}\r\n    GROUP BY 2,3\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_mqls')}}\r\n    GROUP BY 2,3\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sals')}}\r\n    GROUP BY 2,3\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sqls')}}\r\n    GROUP BY 2,3\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sqos')}}\r\n    GROUP BY 2,3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_demo')}}\r\n    GROUP BY 2,3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_voc')}}\r\n    GROUP BY 2,3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_closing')}}\r\n    GROUP BY 2,3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_won')}}\r\n    GROUP BY 2,3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.week,\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    AND base.week=lead_base.week\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    AND base.week=mql_base.week\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    AND base.week=sal_base.week\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    AND base.week=sql_base.week\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    AND base.week=sqo_base.week\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    AND base.week=demo_base.week\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    AND base.week=voc_base.week\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    AND base.week=closing_base.week\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    AND base.week=won_base.week\r\n    GROUP BY 1,2\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\n    week,\r\n    SUM(leads) AS leads,\r\n    SUM(mqls) AS mqls,\r\n    SUM(sals) AS sals,\r\n    SUM(sqls) AS sqls,\r\n    SUM(sqos) AS sqos,\r\n    SUM(demo) AS demo,\r\n    SUM(voc) AS voc, \r\n    SUM(closing) AS closing,\r\n    SUM(won) AS won\r\nFROM final\r\nWHERE global_region NOT IN ('EUROPE','APJ','AUNZ','ROW')\r\nGROUP BY 1\r\nORDER BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_won", "model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_won"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_combined_na"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_combined_na", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_combined_na.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_combined_na.sql", "name": "funnel_report_rolling3mo_combined_na", "alias": "funnel_report_rolling3mo_combined_na", "checksum": {"name": "sha256", "checksum": "4d37bca6018a2bd7802e55260acf12da3c0a0ed725f44bad3391d4660bf06a59"}, "tags": [], "refs": [["funnel_report_rolling3mo_leads"], ["funnel_report_rolling3mo_mqls"], ["funnel_report_rolling3mo_sals"], ["funnel_report_rolling3mo_sqls"], ["funnel_report_rolling3mo_sqos"], ["funnel_report_rolling3mo_demo"], ["funnel_report_rolling3mo_voc"], ["funnel_report_rolling3mo_closing"], ["funnel_report_rolling3mo_won"], ["funnel_report_rolling3mo_leads"], ["funnel_report_rolling3mo_mqls"], ["funnel_report_rolling3mo_sals"], ["funnel_report_rolling3mo_sqls"], ["funnel_report_rolling3mo_sqos"], ["funnel_report_rolling3mo_demo"], ["funnel_report_rolling3mo_voc"], ["funnel_report_rolling3mo_closing"], ["funnel_report_rolling3mo_won"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4216628}, "model.acton_marketing_data.funnel_report_rolling3mo_closing": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH rolling_3mo AS (\r\n\r\n    SELECT DISTINCT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day >= CURRENT_DATE-90\r\n    AND day <= CURRENT_DATE\r\n    ORDER BY 1\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_closing_source_xf.opportunity_id AS closing_id,\r\n        opp_closing_source_xf.closing_date AS closing_date,\r\n        --opp_closing_source_xf.closing_date AS closing_date,\r\n        rolling_3mo.week,\r\n        account_global_region\r\n    FROM {{ref('opp_closing_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_closing_source_xf.closing_date=date_base_xf.day\r\n    --opp_closing_source_xf.closing_date=date_base_xf.day\r\n    LEFT JOIN rolling_3mo ON \r\n    date_base_xf.week=rolling_3mo.week\r\n    WHERE rolling_3mo.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_closing"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_closing", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_closing.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_closing.sql", "name": "funnel_report_rolling3mo_closing", "alias": "funnel_report_rolling3mo_closing", "checksum": {"name": "sha256", "checksum": "7e450f6ffafee05d3bd863837813486d58c1214c854140365f3be1666205e7dc"}, "tags": [], "refs": [["date_base_xf"], ["opp_closing_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4244375}, "model.acton_marketing_data.funnel_report_current_week_closing": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_closing_source_xf.opportunity_id AS closing_id,\r\n        acv,\r\n        opp_closing_source_xf.closing_date AS closing_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_closing_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_closing_source_xf.closing_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_closing"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_closing", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_closing.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_closing.sql", "name": "funnel_report_current_week_closing", "alias": "funnel_report_current_week_closing", "checksum": {"name": "sha256", "checksum": "3e4056931e117b1564106c0a0ab50ce213b327c032e094bc8338d3376044f4c8"}, "tags": [], "refs": [["date_base_xf"], ["opp_closing_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.426737}, "model.acton_marketing_data.funnel_report_all_time_sqos": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        sqo_source_xf.opportunity_id AS sqo_id,\r\n        CONCAT('https://acton.my.salesforce.com/',sqo_source_xf.opportunity_id) AS sqo_url,\r\n        sqo_source_xf.discovery_date AS sqo_date,\r\n        account_name,\r\n        opportunity_name,\r\n        type AS opp_type,\r\n        owner_name,\r\n        sdr_name,\r\n        created_date,\r\n        close_date,\r\n        acv,\r\n        CASE\r\n        WHEN account_global_region IS null THEN 'blank'\r\n        ELSE account_global_region\r\n    END AS account_global_region,\r\n    CASE\r\n        WHEN company_size_rev IS null THEN 'blank'\r\n        ELSE company_size_rev\r\n    END AS company_size_rev,\r\n    CASE\r\n        WHEN opp_lead_source IS null THEN 'blank'\r\n        ELSE opp_lead_source\r\n    END AS opp_lead_source,\r\n    CASE\r\n        WHEN segment IS null THEN 'blank'\r\n        ELSE segment\r\n    END AS segment,\r\n    CASE\r\n        WHEN industry IS null THEN 'blank'\r\n        ELSE industry\r\n    END AS industry,\r\n    CASE\r\n        WHEN industry_bucket IS null THEN 'blank'\r\n        ELSE industry_bucket\r\n    END AS industry_bucket,\r\n    CASE\r\n        WHEN channel_bucket IS null THEN 'blank'\r\n        ELSE channel_bucket\r\n    END AS channel_bucket,\r\n    CASE\r\n        WHEN opp_offer_asset_name_lead_creation IS null THEN 'blank'\r\n        ELSE opp_offer_asset_name_lead_creation\r\n    END AS offer_asset_name_lead_creation\r\n    FROM {{ref('sqo_source_xf')}}\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.sqo_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_sqos"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_sqos", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_sqos.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_sqos.sql", "name": "funnel_report_all_time_sqos", "alias": "funnel_report_all_time_sqos", "checksum": {"name": "sha256", "checksum": "0188fc0bca8f02a7752cacba955f164af129befc3138bec71bc0c1740b836ce2"}, "tags": [], "refs": [["sqo_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.428843}, "model.acton_marketing_data.funnel_report_previous_week_demo": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_demo_source_xf.opportunity_id AS demo_id,\r\n        acv,\r\n        opp_demo_source_xf.demo_date AS demo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_demo_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_demo_source_xf.demo_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_demo"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_demo", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_demo.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_demo.sql", "name": "funnel_report_previous_week_demo", "alias": "funnel_report_previous_week_demo", "checksum": {"name": "sha256", "checksum": "3175ce6f74b6e64bf5ea9485c86d02087b75c307f01aec2fd05e3db3e142681e"}, "tags": [], "refs": [["date_base_xf"], ["opp_demo_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4308298}, "model.acton_marketing_data.funnel_report_all_time_filters_date": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        created_date AS date\r\n    FROM {{ref('funnel_report_all_time_leads')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        mql_date\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sal_date\r\n    FROM {{ref('funnel_report_all_time_sals')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sql_date\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sqo_date\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        demo_date\r\n    FROM {{ref('funnel_report_all_time_demo')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        voc_date\r\n    FROM {{ref('funnel_report_all_time_voc')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        closing_date\r\n    FROM {{ref('funnel_report_all_time_closing')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        won_date\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        lost_date\r\n    FROM {{ref('funnel_report_all_time_lost')}}\r\n\r\n), final AS (\r\n\r\n    SELECT DISTINCT\r\n        base.date    \r\n    FROM base\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_all_time_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_filters_date"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_filters_date", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_filters_date.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_filters_date.sql", "name": "funnel_report_all_time_filters_date", "alias": "funnel_report_all_time_filters_date", "checksum": {"name": "sha256", "checksum": "2222effdd84473f6e1fd863cf5c4b90979c4cec5a9d0f08043886aa6254d0255"}, "tags": [], "refs": [["funnel_report_all_time_leads"], ["funnel_report_all_time_mqls"], ["funnel_report_all_time_sals"], ["funnel_report_all_time_sqls"], ["funnel_report_all_time_sqos"], ["funnel_report_all_time_demo"], ["funnel_report_all_time_voc"], ["funnel_report_all_time_closing"], ["funnel_report_all_time_won"], ["funnel_report_all_time_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4328933}, "model.acton_marketing_data.funnel_report_all_time_pipeline": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        sqo_source_xf.opportunity_id AS sqo_id,\r\n        CONCAT('https://acton.my.salesforce.com/',sqo_source_xf.opportunity_id) AS sqo_url,\r\n        sqo_source_xf.discovery_date AS sqo_date,\r\n        account_name,\r\n        opportunity_name,\r\n        stage_name,\r\n        type AS opp_type,\r\n        owner_name,\r\n        sdr_name,\r\n        created_date,\r\n        close_date,\r\n        acv,\r\n        CASE\r\n        WHEN account_global_region IS null THEN 'blank'\r\n        ELSE account_global_region\r\n    END AS account_global_region,\r\n    CASE\r\n        WHEN company_size_rev IS null THEN 'blank'\r\n        ELSE company_size_rev\r\n    END AS company_size_rev,\r\n    CASE\r\n        WHEN opp_lead_source IS null THEN 'blank'\r\n        ELSE opp_lead_source\r\n    END AS opp_lead_source,\r\n    CASE\r\n        WHEN segment IS null THEN 'blank'\r\n        ELSE segment\r\n    END AS segment,\r\n    CASE\r\n        WHEN industry IS null THEN 'blank'\r\n        ELSE industry\r\n    END AS industry,\r\n    CASE\r\n        WHEN industry_bucket IS null THEN 'blank'\r\n        ELSE industry_bucket\r\n    END AS industry_bucket,\r\n    CASE\r\n        WHEN channel_bucket IS null THEN 'blank'\r\n        ELSE channel_bucket\r\n    END AS channel_bucket\r\n    FROM {{ref('sqo_source_xf')}}\r\n\r\n) , final AS (\r\n\r\n    SELECT\r\n        sqo_id,\r\n        sqo_date,\r\n        opportunity_name,\r\n        stage_name,\r\n        opp_type,\r\n        acv,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        CASE\r\n            WHEN stage_name = 'Discovery' THEN '1.SQO'\r\n            WHEN stage_name = 'Demo' THEN '2.Demo'\r\n            WHEN stage_name = 'VOC/Negotiate' THEN '3.VOC'\r\n            WHEN stage_name = 'Closing' THEN '4.Closing'\r\n            WHEN stage_name = 'Implement' THEN '5.Closed Won'\r\n            WHEN LOWER(stage_name) LIKE '%lost%' THEN '6.Closed Lost'\r\n            WHEN stage_name = 'Not Renewed' THEN '7.Not Renewed'\r\n        END AS current_stage\r\n    FROM base\r\n\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.sqo_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_pipeline"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_pipeline", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_pipeline.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_pipeline.sql", "name": "funnel_report_all_time_pipeline", "alias": "funnel_report_all_time_pipeline", "checksum": {"name": "sha256", "checksum": "d673b787eb32b5aeb73b1fa0ec4cfb17048d34a579f5089cef15c6986d5a3a65"}, "tags": [], "refs": [["sqo_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4359457}, "model.acton_marketing_data.funnel_report_current_quarter_voc_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_voc_source_ss_xf.opportunity_id AS voc_id,\r\n        acv,\r\n        opp_voc_source_ss_xf.negotiation_date AS sqo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_voc_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_voc_source_ss_xf.negotiation_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_voc_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_voc_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_voc_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_voc_ss.sql", "name": "funnel_report_current_quarter_voc_ss", "alias": "funnel_report_current_quarter_voc_ss", "checksum": {"name": "sha256", "checksum": "4011a493f8a4bb5a7fa8448830da1e085fcec4a3eadb2048f1cf94f6d25969fa"}, "tags": [], "refs": [["date_base_xf"], ["opp_voc_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4379113}, "model.acton_marketing_data.funnel_report_previous_week_sqos_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sqo_source_ss_xf.opportunity_id AS sqo_id,\r\n        acv,\r\n        sqo_source_ss_xf.discovery_date AS sqo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('sqo_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sqo_source_ss_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_sqos_ss"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_sqos_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_sqos_ss.sql", "name": "funnel_report_previous_week_sqos_ss", "alias": "funnel_report_previous_week_sqos_ss", "checksum": {"name": "sha256", "checksum": "4bcf30889b8b5a37ee09164fd877fc9821a23788140430f7ec17e4a814d69645"}, "tags": [], "refs": [["date_base_xf"], ["sqo_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4399865}, "model.acton_marketing_data.funnel_report_current_quarter_mqls": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        lead_mql_source_xf.person_id AS mql_id,\r\n        lead_mql_source_xf.mql_created_date AS mql_date,\r\n        week,\r\n        global_region\r\n    FROM {{ref('lead_mql_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    lead_mql_source_xf.mql_created_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_mqls"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_mqls", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_mqls.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_mqls.sql", "name": "funnel_report_current_quarter_mqls", "alias": "funnel_report_current_quarter_mqls", "checksum": {"name": "sha256", "checksum": "86bb77281c307af828a51f67b2f3728225aaab1817d6c03bd7ea3678b9d0dd0b"}, "tags": [], "refs": [["date_base_xf"], ["lead_mql_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4422288}, "model.acton_marketing_data.funnel_report_rolling3mo_mqls": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH rolling_3mo AS (\r\n\r\n    SELECT DISTINCT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day >= CURRENT_DATE-90\r\n    AND day <= CURRENT_DATE\r\n    ORDER BY 1\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        lead_mql_source_xf.person_id AS mql_id,\r\n        lead_mql_source_xf.mql_most_recent_date AS mql_date,\r\n        rolling_3mo.week,\r\n        global_region\r\n    FROM {{ref('lead_mql_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    lead_mql_source_xf.mql_most_recent_date=date_base_xf.day\r\n    LEFT JOIN rolling_3mo ON \r\n    date_base_xf.week=rolling_3mo.week\r\n    WHERE rolling_3mo.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_mqls"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_mqls.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_mqls.sql", "name": "funnel_report_rolling3mo_mqls", "alias": "funnel_report_rolling3mo_mqls", "checksum": {"name": "sha256", "checksum": "fc97141426887fcec11e022cea0f2798bac81eb713d625cfe41f12174ca199b8"}, "tags": [], "refs": [["date_base_xf"], ["lead_mql_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4443817}, "model.acton_marketing_data.funnel_report_rolling3mo_conversion_emea": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n    SELECT \r\n        week,\r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS sqo_to_won\r\n    FROM {{ref('funnel_report_rolling3mo_combined_emea')}}\r\n    GROUP BY 1\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_rolling3mo_combined_emea"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_conversion_emea"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_conversion_emea", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_conversion_emea.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_conversion_emea.sql", "name": "funnel_report_rolling3mo_conversion_emea", "alias": "funnel_report_rolling3mo_conversion_emea", "checksum": {"name": "sha256", "checksum": "855ba9aca15e83c09b6cab723710b030a8239d30d344e2730b27a35c039f5e73"}, "tags": [], "refs": [["funnel_report_rolling3mo_combined_emea"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4475522}, "model.acton_marketing_data.funnel_report_all_time_asp_to_target": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH asp_target AS (\r\n\r\n    SELECT \r\n        kpi_month,\r\n        kpi_region,\r\n        kpi_target AS asp_target\r\n    FROM {{ref('kpi_targets')}}\r\n    WHERE kpi = 'target_asp'\r\n\r\n), actual_asp AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',sqo_date)::Date AS asp_month,\r\n        CASE \r\n            WHEN account_global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN account_global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        SUM(acv)/COUNT(DISTINCT sqo_id) AS asp\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    WHERE sqo_date >= '2022-04-01'\r\n    GROUP BY 1,2\r\n)\r\n\r\nSELECT\r\n    asp_month,\r\n    actual_asp.region,\r\n    asp,\r\n    asp_target,\r\n    asp/asp_target AS actual_vs_target\r\nFROM actual_asp\r\nLEFT JOIN asp_target ON\r\nactual_asp.asp_month=asp_target.kpi_month\r\nAND actual_asp.region=asp_target.kpi_region\r\nWHERE region IS NOT null", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.kpi_targets", "model.acton_marketing_data.funnel_report_all_time_sqos"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_asp_to_target"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_asp_to_target", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_asp_to_target.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_asp_to_target.sql", "name": "funnel_report_all_time_asp_to_target", "alias": "funnel_report_all_time_asp_to_target", "checksum": {"name": "sha256", "checksum": "a3d211cf0c544e1ec6fab862d5ae7eb38fac299557f806be29cd96fe597b42cd"}, "tags": [], "refs": [["kpi_targets"], ["funnel_report_all_time_sqos"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4494853}, "model.acton_marketing_data.funnel_report_current_week_demo": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_demo_source_xf.opportunity_id AS demo_id,\r\n        acv,\r\n        opp_demo_source_xf.demo_date AS sqo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_demo_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_demo_source_xf.demo_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_demo"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_demo", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_demo.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_demo.sql", "name": "funnel_report_current_week_demo", "alias": "funnel_report_current_week_demo", "checksum": {"name": "sha256", "checksum": "b22f3e313532a7735a1c60ad22303093db26a229b6d30fd093b103165bc2b1f1"}, "tags": [], "refs": [["date_base_xf"], ["opp_demo_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4515545}, "model.acton_marketing_data.funnel_report_all_time_intrapipe_to_target": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH intrapipe_target AS (\r\n\r\n    SELECT \r\n        kpi_month,\r\n        kpi_region,\r\n        kpi_target AS intrapipe_target\r\n    FROM {{ref('kpi_targets')}}\r\n    WHERE kpi = 'target_intra_qtr_pipe'\r\n\r\n), actual_intrapipe AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',sqo_date)::Date AS intrapipe_month,\r\n        CASE \r\n            WHEN account_global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN account_global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        SUM(acv)/COUNT(DISTINCT sqo_id) AS intrapipe\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    WHERE sqo_date >= '2022-04-01'\r\n    AND DATE_TRUNC('month',sqo_date)=DATE_TRUNC('month',close_date)\r\n    GROUP BY 1,2\r\n)\r\n\r\nSELECT\r\n    intrapipe_month,\r\n    actual_intrapipe.region,\r\n    intrapipe,\r\n    intrapipe_target,\r\n    intrapipe/intrapipe_target AS actual_vs_target\r\nFROM actual_intrapipe\r\nLEFT JOIN intrapipe_target ON\r\nactual_intrapipe.intrapipe_month=intrapipe_target.kpi_month\r\nAND actual_intrapipe.region=intrapipe_target.kpi_region\r\nWHERE region IS NOT null", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.kpi_targets", "model.acton_marketing_data.funnel_report_all_time_sqos"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_intrapipe_to_target"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_intrapipe_to_target", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_intrapipe_to_target.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_intrapipe_to_target.sql", "name": "funnel_report_all_time_intrapipe_to_target", "alias": "funnel_report_all_time_intrapipe_to_target", "checksum": {"name": "sha256", "checksum": "fc09779f6aec80abc31d0448010f40f2ac4eb7d6c6ac4d2569ea219ea2cf233b"}, "tags": [], "refs": [["kpi_targets"], ["funnel_report_all_time_sqos"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4536633}, "model.acton_marketing_data.funnel_report_previous_week_sqls": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sql_source_xf.sql_id,\r\n        sql_source_xf.created_date AS sql_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('sql_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sql_source_xf.created_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_sqls"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_sqls", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_sqls.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_sqls.sql", "name": "funnel_report_previous_week_sqls", "alias": "funnel_report_previous_week_sqls", "checksum": {"name": "sha256", "checksum": "47f54e3ba462cca21c1e77334a71b0c8b2a8f4cebc2ebf7efc23684278ee0bd9"}, "tags": [], "refs": [["date_base_xf"], ["sql_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4558964}, "model.acton_marketing_data.funnel_report_current_week_voc_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_voc_source_ss_xf.opportunity_id AS voc_id,\r\n        acv,\r\n        opp_voc_source_ss_xf.negotiation_date AS sqo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_voc_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_voc_source_ss_xf.negotiation_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_voc_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_voc_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_voc_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_voc_ss.sql", "name": "funnel_report_current_week_voc_ss", "alias": "funnel_report_current_week_voc_ss", "checksum": {"name": "sha256", "checksum": "12d066c66385453310ae54e6aaf8cd292be98a767c6c9d88e808c7b6006a4b75"}, "tags": [], "refs": [["date_base_xf"], ["opp_voc_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4581306}, "model.acton_marketing_data.funnel_report_current_week_mqls": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        lead_mql_source_xf.person_id AS mql_id,\r\n        lead_mql_source_xf.mql_created_date AS mql_date,\r\n        country,\r\n        global_region\r\n    FROM {{ref('lead_mql_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    lead_mql_source_xf.mql_created_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_mqls"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_mqls", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_mqls.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_mqls.sql", "name": "funnel_report_current_week_mqls", "alias": "funnel_report_current_week_mqls", "checksum": {"name": "sha256", "checksum": "ec851d3da4785cec4e6bf75a1a7180575161d6b753de80f0735935860645a03d"}, "tags": [], "refs": [["date_base_xf"], ["lead_mql_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4605412}, "model.acton_marketing_data.funnel_report_current_quarter_demo": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_demo_source_xf.opportunity_id AS demo_id,\r\n        acv,\r\n        opp_demo_source_xf.demo_date AS sqo_date,\r\n        country,\r\n        account_global_region,\r\n        opp_lead_source,\r\n        week\r\n    FROM {{ref('opp_demo_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_demo_source_xf.demo_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_demo"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_demo", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_demo.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_demo.sql", "name": "funnel_report_current_quarter_demo", "alias": "funnel_report_current_quarter_demo", "checksum": {"name": "sha256", "checksum": "4d4289ceb22d38fee55fc1229e7ee1e06b15ff2e637a8bf4d031dc7d74ada6cb"}, "tags": [], "refs": [["date_base_xf"], ["opp_demo_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4628272}, "model.acton_marketing_data.funnel_report_all_time_won": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_sales_source_xf.opportunity_id AS won_id,\r\n        CONCAT('https://acton.my.salesforce.com/',opp_sales_source_xf.opportunity_id) AS won_url,\r\n        opp_sales_source_xf.close_date AS won_date,\r\n        account_name,\r\n        type AS opp_type,\r\n        acv,\r\n        opp_offer_asset_subtype_lead_creation,\r\n        opp_offer_asset_topic_lead_creation,\r\n        opp_offer_asset_type_lead_creation,\r\n        CASE\r\n        WHEN account_global_region IS null THEN 'blank'\r\n        ELSE account_global_region\r\n    END AS account_global_region,\r\n    CASE\r\n        WHEN company_size_rev IS null THEN 'blank'\r\n        ELSE company_size_rev\r\n    END AS company_size_rev,\r\n    CASE\r\n        WHEN opp_lead_source IS null THEN 'blank'\r\n        ELSE opp_lead_source\r\n    END AS opp_lead_source,\r\n    CASE\r\n        WHEN segment IS null THEN 'blank'\r\n        ELSE segment\r\n    END AS segment,\r\n    CASE\r\n        WHEN industry IS null THEN 'blank'\r\n        ELSE industry\r\n    END AS industry,\r\n    CASE\r\n        WHEN industry_bucket IS null THEN 'blank'\r\n        ELSE industry_bucket\r\n    END AS industry_bucket,\r\n    CASE\r\n        WHEN channel_bucket IS null THEN 'blank'\r\n        ELSE channel_bucket\r\n    END AS channel_bucket,\r\n    CASE\r\n        WHEN opp_offer_asset_name_lead_creation IS null THEN 'blank'\r\n        ELSE opp_offer_asset_name_lead_creation\r\n    END AS offer_asset_name_lead_creation\r\n    FROM {{ref('opp_sales_source_xf')}}\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_sales_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_won"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_won", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_won.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_won.sql", "name": "funnel_report_all_time_won", "alias": "funnel_report_all_time_won", "checksum": {"name": "sha256", "checksum": "6d1e6156888e9ede507ed4d8592a40dba9451ffcc17592bd42c7f059645f8820"}, "tags": [], "refs": [["opp_sales_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4650135}, "model.acton_marketing_data.funnel_report_rolling3mo_demo": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH rolling_3mo AS (\r\n\r\n    SELECT DISTINCT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day >= CURRENT_DATE-90\r\n    AND day <= CURRENT_DATE\r\n    ORDER BY 1\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_demo_source_xf.opportunity_id AS demo_id,\r\n        opp_demo_source_xf.demo_date AS demo_date,\r\n        rolling_3mo.week,\r\n        account_global_region\r\n    FROM {{ref('opp_demo_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_demo_source_xf.demo_date=date_base_xf.day\r\n    LEFT JOIN rolling_3mo ON \r\n    date_base_xf.week=rolling_3mo.week\r\n    WHERE rolling_3mo.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_demo"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_demo", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_demo.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_demo.sql", "name": "funnel_report_rolling3mo_demo", "alias": "funnel_report_rolling3mo_demo", "checksum": {"name": "sha256", "checksum": "8dde39f4791d1b84f1c56a2d0d0d3173dd3de4d48c9190b6abda797202a97629"}, "tags": [], "refs": [["date_base_xf"], ["opp_demo_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4673185}, "model.acton_marketing_data.funnel_report_previous_week_sals": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sal_source_xf.person_id AS sal_id,\r\n        sal_source_xf.working_date AS sal_date,\r\n        country,\r\n        global_region\r\n    FROM {{ref('sal_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sal_source_xf.working_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_sals"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_sals", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_sals.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_sals.sql", "name": "funnel_report_previous_week_sals", "alias": "funnel_report_previous_week_sals", "checksum": {"name": "sha256", "checksum": "f68e820f9c132f0a1548e5782a65b2b3ac13c7e2e0d1d2941c6d720b2c0614fa"}, "tags": [], "refs": [["date_base_xf"], ["sal_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.469423}, "model.acton_marketing_data.funnel_report_rolling3mo_combined": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_leads')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_mqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sals')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sqos')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_demo')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_voc')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_closing')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_won')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_leads')}}\r\n    GROUP BY 2,3\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_mqls')}}\r\n    GROUP BY 2,3\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sals')}}\r\n    GROUP BY 2,3\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sqls')}}\r\n    GROUP BY 2,3\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sqos')}}\r\n    GROUP BY 2,3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_demo')}}\r\n    GROUP BY 2,3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_voc')}}\r\n    GROUP BY 2,3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_closing')}}\r\n    GROUP BY 2,3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_won')}}\r\n    GROUP BY 2,3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.week,\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    AND base.week=lead_base.week\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    AND base.week=mql_base.week\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    AND base.week=sal_base.week\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    AND base.week=sql_base.week\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    AND base.week=sqo_base.week\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    AND base.week=demo_base.week\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    AND base.week=voc_base.week\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    AND base.week=closing_base.week\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    AND base.week=won_base.week\r\n    GROUP BY 1,2\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\n    week,\r\n    SUM(leads) AS leads,\r\n    SUM(mqls) AS mqls,\r\n    SUM(sals) AS sals,\r\n    SUM(sqls) AS sqls,\r\n    SUM(sqos) AS sqos,\r\n    SUM(demo) AS demo,\r\n    SUM(voc) AS voc, \r\n    SUM(closing) AS closing,\r\n    SUM(won) AS won\r\nFROM final\r\nGROUP BY 1\r\nORDER BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_won", "model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_won"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_combined"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_combined", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_combined.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_combined.sql", "name": "funnel_report_rolling3mo_combined", "alias": "funnel_report_rolling3mo_combined", "checksum": {"name": "sha256", "checksum": "73cf17a5e4b4977731b043ce3c3a7c9403d52ab75710038694c92ddafd11f0ce"}, "tags": [], "refs": [["funnel_report_rolling3mo_leads"], ["funnel_report_rolling3mo_mqls"], ["funnel_report_rolling3mo_sals"], ["funnel_report_rolling3mo_sqls"], ["funnel_report_rolling3mo_sqos"], ["funnel_report_rolling3mo_demo"], ["funnel_report_rolling3mo_voc"], ["funnel_report_rolling3mo_closing"], ["funnel_report_rolling3mo_won"], ["funnel_report_rolling3mo_leads"], ["funnel_report_rolling3mo_mqls"], ["funnel_report_rolling3mo_sals"], ["funnel_report_rolling3mo_sqls"], ["funnel_report_rolling3mo_sqos"], ["funnel_report_rolling3mo_demo"], ["funnel_report_rolling3mo_voc"], ["funnel_report_rolling3mo_closing"], ["funnel_report_rolling3mo_won"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4715617}, "model.acton_marketing_data.funnel_report_all_time_sal2sql_velocity": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        working_date,\r\n        opportunity_id,\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket,\r\n        opp_created_date,\r\n        account_global_region,\r\n        opp_company_size_rev,\r\n        opp_lead_source,\r\n        opp_segment,\r\n        opp_industry,\r\n        opp_channel_bucket,\r\n        opp_industry_bucket\r\n    FROM {{ref('opportunities_with_contacts')}}\r\n    WHERE type='New Business'\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        working_date,\r\n        opp_created_date,\r\n        account_global_region,\r\n        opp_company_size_rev,\r\n        opp_lead_source,\r\n        opp_segment,\r\n        opp_industry,\r\n        opp_channel_bucket,\r\n        opp_industry_bucket,\r\n        {{ dbt_utils.datediff(\"working_date\",\"opp_created_date\",'day')}} AS sal2sql_velocity\r\n    FROM base\r\n    WHERE opp_created_date >= working_date\r\n)\r\n\r\nSELECT\r\n    account_global_region,\r\n    opp_company_size_rev,\r\n    opp_lead_source,\r\n    opp_segment,\r\n    opp_industry,\r\n    opp_channel_bucket,\r\n    opp_industry_bucket,\r\n    opp_created_date,\r\n    sal2sql_velocity\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.opportunities_with_contacts"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_sal2sql_velocity"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_sal2sql_velocity", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_sal2sql_velocity.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_sal2sql_velocity.sql", "name": "funnel_report_all_time_sal2sql_velocity", "alias": "funnel_report_all_time_sal2sql_velocity", "checksum": {"name": "sha256", "checksum": "142cfbb5a0c6d43f5e9787b78b67a26105dd9ac86deb20e9e2b39cd39b25a634"}, "tags": [], "refs": [["opportunities_with_contacts"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4743447}, "model.acton_marketing_data.funnel_report_current_quarter_by_week_na_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT *\r\n    FROM {{ref('funnel_report_current_quarter_by_week_xf')}}\r\n    WHERE global_region NOT IN ('EUROPE','APJ','AUNZ','ROW')\r\n\r\n)\r\n\r\nSELECT\r\n    week,\r\n    SUM(leads) AS leads,\r\n    SUM(mqls) AS mqls,\r\n    SUM(sals) AS sals,\r\n    SUM(sqls) AS sqls,\r\n    SUM(sqos) AS sqos\r\nFROM base\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_by_week_na_xf"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_by_week_na_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_by_week_na_xf.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_by_week_na_xf.sql", "name": "funnel_report_current_quarter_by_week_na_xf", "alias": "funnel_report_current_quarter_by_week_na_xf", "checksum": {"name": "sha256", "checksum": "fe8fe369c26c2d7064ccc77fc4f381737903947733ea0c7a2852057280f047a2"}, "tags": [], "refs": [["funnel_report_current_quarter_by_week_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.479655}, "model.acton_marketing_data.funnel_report_previous_week_closing": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_closing_source_xf.opportunity_id AS closing_id,\r\n        acv,\r\n        opp_closing_source_xf.closing_date AS closing_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_closing_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_closing_source_xf.closing_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_closing"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_closing", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_closing.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_closing.sql", "name": "funnel_report_previous_week_closing", "alias": "funnel_report_previous_week_closing", "checksum": {"name": "sha256", "checksum": "f30691e4dbf1bd1fb45a9a4c5c64bdf61a2e59655d3ca6f06abac2e73e547c2d"}, "tags": [], "refs": [["date_base_xf"], ["opp_closing_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.481612}, "model.acton_marketing_data.funnel_report_current_week_leads": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        person_source_xf.person_id AS lead_id,\r\n        person_source_xf.marketing_created_date AS created_date,\r\n        country,\r\n        global_region\r\n    FROM {{ref('person_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    person_source_xf.marketing_created_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND marketing_created_date IS NOT null\r\n    AND person_owner_id != '00Ga0000003Nugr' -- AO-Fake Leads\r\n    AND email NOT LIKE '%act-on.com'\r\n    AND lead_source = 'Marketing'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_leads"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_leads", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_leads.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_leads.sql", "name": "funnel_report_current_week_leads", "alias": "funnel_report_current_week_leads", "checksum": {"name": "sha256", "checksum": "a8d09cb4a4ac4489f08941ab6307188b81bef70de3e4a1c66e879f35cfbe9b6d"}, "tags": [], "refs": [["date_base_xf"], ["person_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4838579}, "model.acton_marketing_data.funnel_report_all_time_cwpipe_to_target": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH won_pipe_target AS (\r\n\r\n    SELECT \r\n        kpi_month,\r\n        kpi_region,\r\n        kpi_target AS won_pipe_target\r\n    FROM {{ref('kpi_targets')}}\r\n    WHERE kpi = 'target_cw_pipe'\r\n\r\n), actual_won_pipe AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',won_date)::Date AS won_month,\r\n        CASE \r\n            WHEN account_global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN account_global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        SUM(acv) AS won_pipe\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n    WHERE won_date >= '2022-04-01'\r\n    GROUP BY 1,2\r\n)\r\n\r\nSELECT\r\n    won_month,\r\n    actual_won_pipe.region,\r\n    won_pipe,\r\n    won_pipe_target,\r\n    won_pipe/won_pipe_target AS actual_vs_target\r\nFROM actual_won_pipe\r\nLEFT JOIN won_pipe_target ON\r\nactual_won_pipe.won_month=won_pipe_target.kpi_month\r\nAND actual_won_pipe.region=won_pipe_target.kpi_region\r\nWHERE region IS NOT null", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.kpi_targets", "model.acton_marketing_data.funnel_report_all_time_won"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_cwpipe_to_target"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_cwpipe_to_target", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_cwpipe_to_target.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_cwpipe_to_target.sql", "name": "funnel_report_all_time_cwpipe_to_target", "alias": "funnel_report_all_time_cwpipe_to_target", "checksum": {"name": "sha256", "checksum": "4407cd2039748d8c5803af007f7dff2448bcdd6c96ac210a4a6061580c129165"}, "tags": [], "refs": [["kpi_targets"], ["funnel_report_all_time_won"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4860542}, "model.acton_marketing_data.funnel_report_rolling3mo_leads": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH rolling_3mo AS (\r\n\r\n    SELECT DISTINCT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day >= CURRENT_DATE-90\r\n    AND day <= CURRENT_DATE\r\n    ORDER BY 1\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        person_source_xf.person_id AS lead_id,\r\n        person_source_xf.marketing_created_date AS created_date,\r\n        rolling_3mo.week,\r\n        global_region\r\n    FROM {{ref('person_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    person_source_xf.marketing_created_date=date_base_xf.day\r\n    LEFT JOIN rolling_3mo ON \r\n    date_base_xf.week=rolling_3mo.week\r\n    WHERE rolling_3mo.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_leads"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_leads", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_leads.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_leads.sql", "name": "funnel_report_rolling3mo_leads", "alias": "funnel_report_rolling3mo_leads", "checksum": {"name": "sha256", "checksum": "6b1980257a2c14656fc368dd2541932f6bb76e1f3bd9ebec90d446b2d2e27929"}, "tags": [], "refs": [["date_base_xf"], ["person_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4883437}, "model.acton_marketing_data.funnel_report_all_time_l20_velocity_opp_annual": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        marketing_created_date,\r\n        opportunity_id,\r\n        opp_created_date,\r\n        type AS opp_type,\r\n        opp_segment\r\n    FROM {{ref('opportunities_with_contacts')}}\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        marketing_created_date,\r\n        opp_created_date,\r\n        opp_type,\r\n        opp_segment,\r\n        {{ dbt_utils.datediff(\"marketing_created_date\",\"opp_created_date\",'day')}} AS lead_to_opp_velocity\r\n    FROM base\r\n    WHERE opp_created_date >= marketing_created_date\r\n)\r\n\r\nSELECT\r\nopp_segment,\r\nopp_type,\r\nDATE_TRUNC('year',opp_created_date) AS opp_created_year,\r\nAVG(lead_to_opp_velocity) AS avg_lead_to_opp_velocity\r\nFROM final\r\nGROUP BY 1,2,3", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.opportunities_with_contacts"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_l20_velocity_opp_annual"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_l20_velocity_opp_annual", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_l20_velocity_opp_annual.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_l20_velocity_opp_annual.sql", "name": "funnel_report_all_time_l20_velocity_opp_annual", "alias": "funnel_report_all_time_l20_velocity_opp_annual", "checksum": {"name": "sha256", "checksum": "34311d431bb4fe95a29daa9cf08e885570a2d53ba83249a4e33e7b8eeec5d76e"}, "tags": [], "refs": [["opportunities_with_contacts"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4905128}, "model.acton_marketing_data.funnel_report_current_quarter_leads": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        person_source_xf.person_id AS lead_id,\r\n        person_source_xf.marketing_created_date AS created_date,\r\n        week,\r\n        global_region\r\n    FROM {{ref('person_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    person_source_xf.marketing_created_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_leads"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_leads", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_leads.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_leads.sql", "name": "funnel_report_current_quarter_leads", "alias": "funnel_report_current_quarter_leads", "checksum": {"name": "sha256", "checksum": "a212347bebe36f21dd9a62d11573476b7d9d8bb6fb1c5a018092aaf8d45c2176"}, "tags": [], "refs": [["date_base_xf"], ["person_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4954512}, "model.acton_marketing_data.funnel_report_all_time_sqo2demo_velocity": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH sqo_opp AS (\r\n\r\n    SELECT\r\n        sqo_id,\r\n        sqo_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n\r\n),  demo_opp AS (\r\n\r\n    SELECT\r\n        demo_id,\r\n        demo_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_demo')}}\r\n    \r\n), final AS (\r\n\r\n    SELECT\r\n        demo_id,\r\n        demo_date,\r\n        sqo_date,\r\n        demo_opp.account_global_region,\r\n        demo_opp.company_size_rev,\r\n        demo_opp.opp_lead_source,\r\n        demo_opp.segment,\r\n        demo_opp.industry,\r\n        demo_opp.channel_bucket,\r\n        demo_opp.industry_bucket,\r\n        {{ dbt_utils.datediff(\"sqo_date\",\"demo_date\",'day')}} AS sqo2demo_velocity\r\n    FROM demo_opp\r\n    LEFT JOIN sqo_opp ON \r\n    demo_opp.demo_id=sqo_opp.sqo_id\r\n)\r\n\r\nSELECT\r\n    account_global_region,\r\n    company_size_rev,\r\n    opp_lead_source,\r\n    segment,\r\n    industry,\r\n    channel_bucket,\r\n    industry_bucket,\r\n    demo_date,\r\n    sqo2demo_velocity\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_demo"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_sqo2demo_velocity"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_sqo2demo_velocity", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_sqo2demo_velocity.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_sqo2demo_velocity.sql", "name": "funnel_report_all_time_sqo2demo_velocity", "alias": "funnel_report_all_time_sqo2demo_velocity", "checksum": {"name": "sha256", "checksum": "5350e1a0a85829b70086e07ea6501a4262afd1630e9d88aecebdfd60517720cd"}, "tags": [], "refs": [["funnel_report_all_time_sqos"], ["funnel_report_all_time_demo"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.4977994}, "model.acton_marketing_data.funnel_report_all_time_voc": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_voc_source_xf.opportunity_id AS voc_id,\r\n        CONCAT('https://acton.my.salesforce.com/',opp_voc_source_xf.opportunity_id) AS voc_url,\r\n        account_name,\r\n        type AS opp_type,\r\n        acv,\r\n        opp_voc_source_xf.negotiation_date AS voc_date,\r\n        CASE\r\n        WHEN account_global_region IS null THEN 'blank'\r\n        ELSE account_global_region\r\n    END AS account_global_region,\r\n    CASE\r\n        WHEN company_size_rev IS null THEN 'blank'\r\n        ELSE company_size_rev\r\n    END AS company_size_rev,\r\n    CASE\r\n        WHEN opp_lead_source IS null THEN 'blank'\r\n        ELSE opp_lead_source\r\n    END AS opp_lead_source,\r\n    CASE\r\n        WHEN segment IS null THEN 'blank'\r\n        ELSE segment\r\n    END AS segment,\r\n    CASE\r\n        WHEN industry IS null THEN 'blank'\r\n        ELSE industry\r\n    END AS industry,\r\n    CASE\r\n        WHEN industry_bucket IS null THEN 'blank'\r\n        ELSE industry_bucket\r\n    END AS industry_bucket,\r\n    CASE\r\n        WHEN channel_bucket IS null THEN 'blank'\r\n        ELSE channel_bucket\r\n    END AS channel_bucket,\r\n    CASE\r\n        WHEN opp_offer_asset_name_lead_creation IS null THEN 'blank'\r\n        ELSE opp_offer_asset_name_lead_creation\r\n    END AS offer_asset_name_lead_creation\r\n    FROM {{ref('opp_voc_source_xf')}}\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_voc_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_voc"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_voc", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_voc.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_voc.sql", "name": "funnel_report_all_time_voc", "alias": "funnel_report_all_time_voc", "checksum": {"name": "sha256", "checksum": "6730b38978cb34ed83af8d488cc29f8fd6d9b7dd7fd247211a885fc8f76258a9"}, "tags": [], "refs": [["opp_voc_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.502826}, "model.acton_marketing_data.funnel_report_current_week_closing_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_closing_source_ss_xf.opportunity_id AS closing_id,\r\n        acv,\r\n        opp_closing_source_ss_xf.discovery_date AS closing_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_closing_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_closing_source_ss_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_closing_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_closing_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_closing_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_closing_ss.sql", "name": "funnel_report_current_week_closing_ss", "alias": "funnel_report_current_week_closing_ss", "checksum": {"name": "sha256", "checksum": "2a478e5b2b6201e7de028f88d8c5258aca9e382a89581f01aba7fa27f43f26ca"}, "tags": [], "refs": [["date_base_xf"], ["opp_closing_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5048313}, "model.acton_marketing_data.funnel_report_previous_week_demo_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_demo_source_ss_xf.opportunity_id AS demo_id,\r\n        acv,\r\n        opp_demo_source_ss_xf.demo_date AS demo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_demo_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_demo_source_ss_xf.demo_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_demo_ss"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_demo_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_demo_ss.sql", "name": "funnel_report_previous_week_demo_ss", "alias": "funnel_report_previous_week_demo_ss", "checksum": {"name": "sha256", "checksum": "692cd37cf6f95c351ffaaa4ce1cbe40c374df0ec936cc9b57701062e977d9c6c"}, "tags": [], "refs": [["date_base_xf"], ["opp_demo_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5071173}, "model.acton_marketing_data.funnel_report_current_week_won": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_sales_source_xf.opportunity_id AS won_id,\r\n        acv,\r\n        opp_sales_source_xf.close_date AS won_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_sales_source_xf')}} \r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_sales_source_xf.close_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_sales_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_won"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_won", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_won.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_won.sql", "name": "funnel_report_current_week_won", "alias": "funnel_report_current_week_won", "checksum": {"name": "sha256", "checksum": "ba4315e583c2b40ada0a722dd364c9827330d7e1d7091f7cd50edc73baecc9c3"}, "tags": [], "refs": [["date_base_xf"], ["opp_sales_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5093262}, "model.acton_marketing_data.funnel_report_all_time_filters_segment": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        created_date AS date\r\n    FROM {{ref('funnel_report_all_time_leads')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        mql_date\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sal_date\r\n    FROM {{ref('funnel_report_all_time_sals')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sql_date\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sqo_date\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        demo_date\r\n    FROM {{ref('funnel_report_all_time_demo')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        voc_date\r\n    FROM {{ref('funnel_report_all_time_voc')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        closing_date\r\n    FROM {{ref('funnel_report_all_time_closing')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        won_date\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        lost_date\r\n    FROM {{ref('funnel_report_all_time_lost')}}\r\n\r\n), final AS (\r\n\r\n    SELECT DISTINCT\r\n        base.segment   \r\n    FROM base\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_all_time_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_filters_segment"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_filters_segment", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_filters_segment.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_filters_segment.sql", "name": "funnel_report_all_time_filters_segment", "alias": "funnel_report_all_time_filters_segment", "checksum": {"name": "sha256", "checksum": "489d54ed8a58c1e660f065985d24f82fbc2cd387425b2a52098ec16317fa5850"}, "tags": [], "refs": [["funnel_report_all_time_leads"], ["funnel_report_all_time_mqls"], ["funnel_report_all_time_sals"], ["funnel_report_all_time_sqls"], ["funnel_report_all_time_sqos"], ["funnel_report_all_time_demo"], ["funnel_report_all_time_voc"], ["funnel_report_all_time_closing"], ["funnel_report_all_time_won"], ["funnel_report_all_time_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5114238}, "model.acton_marketing_data.funnel_report_all_time_clos2cw_velocity": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH won_opp AS (\r\n\r\n    SELECT\r\n        won_id,\r\n        won_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n\r\n),  closing_opp AS (\r\n\r\n    SELECT\r\n        closing_id,\r\n        closing_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket\r\n    FROM {{ref('funnel_report_all_time_closing')}}\r\n    \r\n), final AS (\r\n\r\n    SELECT\r\n        won_id,\r\n        closing_date,\r\n        won_date,\r\n        won_opp.account_global_region,\r\n        won_opp.company_size_rev,\r\n        won_opp.opp_lead_source,\r\n        won_opp.segment,\r\n        won_opp.industry,\r\n        won_opp.industry_bucket,\r\n        won_opp.channel_bucket,\r\n        {{ dbt_utils.datediff(\"closing_date\",\"won_date\",'day')}} AS closing2cw_velocity\r\n    FROM won_opp\r\n    LEFT JOIN closing_opp ON \r\n    won_opp.won_id=closing_opp.closing_id\r\n)\r\n\r\nSELECT\r\n    account_global_region,\r\n    company_size_rev,\r\n    opp_lead_source,\r\n    segment,\r\n    industry,\r\n    channel_bucket,\r\n    industry_bucket,\r\n    won_date,\r\n    closing2cw_velocity\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_all_time_closing"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_clos2cw_velocity"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_clos2cw_velocity", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_clos2cw_velocity.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_clos2cw_velocity.sql", "name": "funnel_report_all_time_clos2cw_velocity", "alias": "funnel_report_all_time_clos2cw_velocity", "checksum": {"name": "sha256", "checksum": "a5892c1d0e05e973c553b284be66c558d02e89156f3b909d16b2c258c37c0727"}, "tags": [], "refs": [["funnel_report_all_time_won"], ["funnel_report_all_time_closing"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5142393}, "model.acton_marketing_data.funnel_report_all_time_sqls_to_target": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH sql_target AS (\r\n\r\n    SELECT \r\n        kpi_month,\r\n        kpi_region,\r\n        kpi_target AS sqls_target\r\n    FROM {{ref('kpi_targets')}}\r\n    WHERE kpi = 'target_sqls'\r\n\r\n), actual_sqls AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',sql_date)::Date AS sqls_month,\r\n        CASE \r\n            WHEN account_global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN account_global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        COUNT(DISTINCT sql_id) AS sqls\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    WHERE sql_date >= '2022-04-01'\r\n    GROUP BY 1,2\r\n)\r\n\r\nSELECT\r\n    sqls_month,\r\n    actual_sqls.region,\r\n    sqls,\r\n    sqls_target,\r\n    sqls/sqls_target AS actual_vs_target\r\nFROM actual_sqls\r\nLEFT JOIN sql_target ON\r\nactual_sqls.sqls_month=sql_target.kpi_month\r\nAND actual_sqls.region=sql_target.kpi_region\r\nWHERE region IS NOT null", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.kpi_targets", "model.acton_marketing_data.funnel_report_all_time_sqls"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_sqls_to_target"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_sqls_to_target", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_sqls_to_target.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_sqls_to_target.sql", "name": "funnel_report_all_time_sqls_to_target", "alias": "funnel_report_all_time_sqls_to_target", "checksum": {"name": "sha256", "checksum": "d640d8dac89fafd2cda15a540b0cc1a75a51aa48f14b8a861d9f769d0aef1253"}, "tags": [], "refs": [["kpi_targets"], ["funnel_report_all_time_sqls"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5195343}, "model.acton_marketing_data.funnel_report_current_quarter_won": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_sales_source_xf.opportunity_id AS won_id,\r\n        week,\r\n        acv,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_sales_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_sales_source_xf.close_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_sales_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_won"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_won", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_won.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_won.sql", "name": "funnel_report_current_quarter_won", "alias": "funnel_report_current_quarter_won", "checksum": {"name": "sha256", "checksum": "2a98db04af4ab89308f2f03196070612c0038da6d301e040c2c54fea18afdef3"}, "tags": [], "refs": [["date_base_xf"], ["opp_sales_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5215821}, "model.acton_marketing_data.funnel_report_rolling3mo_conversion_na": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n    SELECT \r\n        week,\r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS sqo_to_won\r\n    FROM {{ref('funnel_report_rolling3mo_combined_na')}}\r\n    GROUP BY 1\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_rolling3mo_combined_na"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_conversion_na"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_conversion_na", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_conversion_na.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_conversion_na.sql", "name": "funnel_report_rolling3mo_conversion_na", "alias": "funnel_report_rolling3mo_conversion_na", "checksum": {"name": "sha256", "checksum": "3dd8c89ccadf7c021e18349c90151910412f665cb2cbcaa9fa287f0abb3d3d12"}, "tags": [], "refs": [["funnel_report_rolling3mo_combined_na"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.523785}, "model.acton_marketing_data.funnel_report_all_time_sals": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        sal_source_xf.person_id AS sal_id,\r\n        CONCAT('https://acton.my.salesforce.com/',sal_source_xf.person_id) AS sal_url,\r\n        sal_source_xf.working_date AS sal_date,\r\n        sal_source_xf.mql_most_recent_date AS mql_date,\r\n        company,\r\n        is_hand_raiser,\r\n        CASE\r\n        WHEN global_region IS null THEN 'blank'\r\n        ELSE global_region\r\n    END AS global_region,\r\n    CASE\r\n        WHEN company_size_rev IS null THEN 'blank'\r\n        ELSE company_size_rev\r\n    END AS company_size_rev,\r\n    CASE\r\n        WHEN lead_source IS null THEN 'blank'\r\n        ELSE lead_source\r\n    END AS lead_source,\r\n    CASE\r\n        WHEN segment IS null THEN 'blank'\r\n        ELSE segment\r\n    END AS segment,\r\n    CASE\r\n        WHEN industry IS null THEN 'blank'\r\n        ELSE industry\r\n    END AS industry,\r\n    CASE\r\n        WHEN industry_bucket IS null THEN 'blank'\r\n        ELSE industry_bucket\r\n    END AS industry_bucket,\r\n    CASE\r\n        WHEN channel_bucket IS null THEN 'blank'\r\n        ELSE channel_bucket\r\n    END AS channel_bucket,\r\n    CASE\r\n        WHEN offer_asset_name_lead_creation IS null THEN 'blank'\r\n        ELSE offer_asset_name_lead_creation\r\n    END AS offer_asset_name_lead_creation\r\n    FROM {{ref('sal_source_xf')}}\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.sal_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_sals"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_sals", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_sals.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_sals.sql", "name": "funnel_report_all_time_sals", "alias": "funnel_report_all_time_sals", "checksum": {"name": "sha256", "checksum": "832683c2e2c103894e32378570bf9511cc05c111f9bc183320eae305cd22a2c9"}, "tags": [], "refs": [["sal_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5259717}, "model.acton_marketing_data.funnel_report_all_time_sql2sqo_velocity": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH sqo_opp AS (\r\n\r\n    SELECT\r\n        sqo_id,\r\n        sqo_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n\r\n),  sql_opp AS (\r\n\r\n    SELECT\r\n        sql_id,\r\n        sql_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    \r\n), final AS (\r\n\r\n    SELECT\r\n        sqo_id,\r\n        sql_date,\r\n        sqo_date,\r\n        sqo_opp.account_global_region,\r\n        sqo_opp.company_size_rev,\r\n        sqo_opp.opp_lead_source,\r\n        sqo_opp.segment,\r\n        sqo_opp.industry,\r\n        sqo_opp.channel_bucket,\r\n        sqo_opp.industry_bucket,\r\n        {{ dbt_utils.datediff(\"sql_date\",\"sqo_date\",'day')}} AS sql2sqo_velocity\r\n    FROM sqo_opp\r\n    LEFT JOIN sql_opp ON \r\n    sqo_opp.sqo_id=sql_opp.sql_id\r\n)\r\n\r\nSELECT\r\n    account_global_region,\r\n    company_size_rev,\r\n    opp_lead_source,\r\n    segment,\r\n    industry,\r\n    channel_bucket,\r\n    industry_bucket,\r\n    sqo_date,\r\n    sql2sqo_velocity\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_sqls"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_sql2sqo_velocity"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_sql2sqo_velocity", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_sql2sqo_velocity.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_sql2sqo_velocity.sql", "name": "funnel_report_all_time_sql2sqo_velocity", "alias": "funnel_report_all_time_sql2sqo_velocity", "checksum": {"name": "sha256", "checksum": "0cbde095c5bd5f94bdd8e7a3ed2989ef87697e6dc7f834eac1e9d726a1db1ccf"}, "tags": [], "refs": [["funnel_report_all_time_sqos"], ["funnel_report_all_time_sqls"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5288641}, "model.acton_marketing_data.funnel_report_previous_week_lost": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_source_xf.opportunity_id AS lost_id,\r\n        acv_deal_size_usd,\r\n        opp_source_xf.close_date AS close_date,\r\n        billing_country AS country,\r\n        account_global_region\r\n    FROM {{ref('opp_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_source_xf.close_date=date_base_xf.day\r\n    LEFT JOIN {{ref('account_source_xf')}} ON\r\n    opp_source_xf.account_id=account_source_xf.account_id\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND close_date IS NOT null\r\n    AND discovery_date IS NOT null\r\n    AND type = 'New Business'\r\n    AND stage_name IN ('Closed \u2013 Lost No Resources / Budget','Closed \u2013 Lost Not Ready / No Decision','Closed \u2013 Lost Product Deficiency','Closed - Lost to Competitor')\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_lost"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_lost", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_lost.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_lost.sql", "name": "funnel_report_previous_week_lost", "alias": "funnel_report_previous_week_lost", "checksum": {"name": "sha256", "checksum": "bac77f25fe96449b729b4dc7304572ae19c0f7c750df08906cb2656bd2957d69"}, "tags": [], "refs": [["date_base_xf"], ["opp_source_xf"], ["date_base_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5340202}, "model.acton_marketing_data.funnel_report_all_time_l2m_to_target": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH l2m_target AS (\r\n\r\n    SELECT \r\n        kpi_month,\r\n        kpi_region,\r\n        kpi_target AS l2m_target\r\n    FROM {{ref('kpi_targets')}}\r\n    WHERE kpi = 'target_l2m_conv'\r\n\r\n), actual_leads AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',created_date)::Date AS leads_month,\r\n        CASE \r\n            WHEN global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        COUNT(DISTINCT lead_id) AS leads\r\n    FROM {{ref('funnel_report_all_time_leads')}}\r\n    WHERE created_date >= '2022-04-01'\r\n    GROUP BY 1,2\r\n\r\n), actual_mqls AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',mql_date)::Date AS mqls_month,\r\n        CASE \r\n            WHEN global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        COUNT(DISTINCT mql_id) AS mqls\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    WHERE mql_date >= '2022-04-01'\r\n    GROUP BY 1,2\r\n\r\n), actual_l2m AS (\r\n\r\n    SELECT\r\n        mqls_month,\r\n        actual_mqls.region,\r\n        SUM(mqls)/SUM(leads) AS l2m_actual\r\n    FROM actual_mqls\r\n    LEFT JOIN actual_leads ON \r\n    actual_mqls.region=actual_leads.region\r\n    AND actual_mqls.mqls_month=actual_leads.leads_month\r\n    WHERE actual_mqls.region IS NOT null\r\n    GROUP BY 1,2\r\n\r\n)\r\n\r\nSELECT\r\n    mqls_month,\r\n    actual_l2m.region,\r\n    l2m_actual,\r\n    l2m_target,\r\n    l2m_actual/l2m_target AS actual_vs_target\r\nFROM actual_l2m\r\nLEFT JOIN l2m_target ON\r\nactual_l2m.mqls_month=l2m_target.kpi_month\r\nAND actual_l2m.region=l2m_target.kpi_region\r\nWHERE region IS NOT null", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.kpi_targets", "model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_l2m_to_target"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_l2m_to_target", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_l2m_to_target.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_l2m_to_target.sql", "name": "funnel_report_all_time_l2m_to_target", "alias": "funnel_report_all_time_l2m_to_target", "checksum": {"name": "sha256", "checksum": "562ee0943739a8efd0266ee4c1b62d1655b6a81cd9bab6ba5ca8aa7f8d86f200"}, "tags": [], "refs": [["kpi_targets"], ["funnel_report_all_time_leads"], ["funnel_report_all_time_mqls"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5363774}, "model.acton_marketing_data.funnel_report_previous_week_mqls_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        lead_mql_source_ss_xf.lead_id AS mql_id,\r\n        lead_mql_source_ss_xf.mql_created_date AS mql_date,\r\n        country,\r\n        global_region\r\n    FROM {{ref('lead_mql_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    lead_mql_source_ss_xf.mql_created_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_mqls_ss"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_mqls_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_mqls_ss.sql", "name": "funnel_report_previous_week_mqls_ss", "alias": "funnel_report_previous_week_mqls_ss", "checksum": {"name": "sha256", "checksum": "3f9899bd5c1f1a8bb156f9f4dd9249a08eaaebf45640d0c550b7bfad3ff6f99a"}, "tags": [], "refs": [["date_base_xf"], ["lead_mql_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5388026}, "model.acton_marketing_data.funnel_report_all_time_sqls": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        sql_source_xf.sql_id,\r\n        CONCAT('https://acton.my.salesforce.com/',sql_source_xf.sql_id) AS sql_url,\r\n        sql_source_xf.created_date AS sql_date,\r\n        account_name,\r\n        opportunity_name,\r\n        type AS opp_type,\r\n        owner_name,\r\n        sdr_name,\r\n        CASE\r\n        WHEN account_global_region IS null THEN 'blank'\r\n        ELSE account_global_region\r\n    END AS account_global_region,\r\n    CASE\r\n        WHEN company_size_rev IS null THEN 'blank'\r\n        ELSE company_size_rev\r\n    END AS company_size_rev,\r\n    CASE\r\n        WHEN opp_lead_source IS null THEN 'blank'\r\n        ELSE opp_lead_source\r\n    END AS opp_lead_source,\r\n    CASE\r\n        WHEN segment IS null THEN 'blank'\r\n        ELSE segment\r\n    END AS segment,\r\n    CASE\r\n        WHEN industry IS null THEN 'blank'\r\n        ELSE industry\r\n    END AS industry,\r\n    CASE\r\n        WHEN industry_bucket IS null THEN 'blank'\r\n        ELSE industry_bucket\r\n    END AS industry_bucket,\r\n    CASE\r\n        WHEN channel_bucket IS null THEN 'blank'\r\n        ELSE channel_bucket\r\n    END AS channel_bucket,\r\n    CASE\r\n        WHEN opp_offer_asset_name_lead_creation IS null THEN 'blank'\r\n        ELSE opp_offer_asset_name_lead_creation\r\n    END AS offer_asset_name_lead_creation\r\n    FROM {{ref('sql_source_xf')}}\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.sql_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_sqls"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_sqls", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_sqls.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_sqls.sql", "name": "funnel_report_all_time_sqls", "alias": "funnel_report_all_time_sqls", "checksum": {"name": "sha256", "checksum": "0b0594cc8c572526c613201d9bd6c6a6fb9916f8578d9af5ea5f0c4e3da9c994"}, "tags": [], "refs": [["sql_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5410101}, "model.acton_marketing_data.funnel_report_current_quarter_closing_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_closing_source_ss_xf.opportunity_id AS closing_id,\r\n        acv,\r\n        opp_closing_source_ss_xf.discovery_date AS closing_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_closing_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_closing_source_ss_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_closing_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_closing_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_closing_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_closing_ss.sql", "name": "funnel_report_current_quarter_closing_ss", "alias": "funnel_report_current_quarter_closing_ss", "checksum": {"name": "sha256", "checksum": "3b095f270aedef125cc1d83770b311dbe60bf5b8be41e6c8dc003126eb17c638"}, "tags": [], "refs": [["date_base_xf"], ["opp_closing_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5429313}, "model.acton_marketing_data.funnel_report_rolling3mo_won": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH rolling_3mo AS (\r\n\r\n    SELECT DISTINCT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day >= CURRENT_DATE-90\r\n    AND day <= CURRENT_DATE\r\n    ORDER BY 1\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_sales_source_xf.opportunity_id AS won_id,\r\n        opp_sales_source_xf.close_date AS won_date,\r\n        rolling_3mo.week,\r\n        account_global_region\r\n    FROM {{ref('opp_sales_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_sales_source_xf.close_date=date_base_xf.day\r\n    LEFT JOIN rolling_3mo ON \r\n    date_base_xf.week=rolling_3mo.week\r\n    WHERE rolling_3mo.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_sales_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_won"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_won", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_won.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_won.sql", "name": "funnel_report_rolling3mo_won", "alias": "funnel_report_rolling3mo_won", "checksum": {"name": "sha256", "checksum": "ba4654d693c40a5ace1657943fb499f629c35f95d7c78131181a26dd88eabe4e"}, "tags": [], "refs": [["date_base_xf"], ["opp_sales_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5452025}, "model.acton_marketing_data.funnel_report_current_week_sqls_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sql_id,\r\n        sql_source_ss_xf.created_date AS sql_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('sql_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sql_source_ss_xf.created_date::Date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_sqls_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_sqls_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_sqls_ss.sql", "name": "funnel_report_current_week_sqls_ss", "alias": "funnel_report_current_week_sqls_ss", "checksum": {"name": "sha256", "checksum": "52879981d376c367586b2c79bdef6d5edf49843b27c47a3ea4bafd4a0aabf8c8"}, "tags": [], "refs": [["date_base_xf"], ["sql_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5481484}, "model.acton_marketing_data.funnel_report_all_time_closing": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_closing_source_xf.opportunity_id AS closing_id,\r\n        CONCAT('https://acton.my.salesforce.com/',opp_closing_source_xf.opportunity_id) AS closing_url,\r\n        acv,\r\n        account_name,\r\n        type AS opp_type,\r\n        opp_closing_source_xf.closing_date AS closing_date,\r\n        CASE\r\n        WHEN account_global_region IS null THEN 'blank'\r\n        ELSE account_global_region\r\n    END AS account_global_region,\r\n    CASE\r\n        WHEN company_size_rev IS null THEN 'blank'\r\n        ELSE company_size_rev\r\n    END AS company_size_rev,\r\n    CASE\r\n        WHEN opp_lead_source IS null THEN 'blank'\r\n        ELSE opp_lead_source\r\n    END AS opp_lead_source,\r\n    CASE\r\n        WHEN segment IS null THEN 'blank'\r\n        ELSE segment\r\n    END AS segment,\r\n    CASE\r\n        WHEN industry IS null THEN 'blank'\r\n        ELSE industry\r\n    END AS industry,\r\n    CASE\r\n        WHEN industry_bucket IS null THEN 'blank'\r\n        ELSE industry_bucket\r\n    END AS industry_bucket,\r\n    CASE\r\n        WHEN channel_bucket IS null THEN 'blank'\r\n        ELSE channel_bucket\r\n    END AS channel_bucket,\r\n    CASE\r\n        WHEN opp_offer_asset_name_lead_creation IS null THEN 'blank'\r\n        ELSE opp_offer_asset_name_lead_creation\r\n    END AS offer_asset_name_lead_creation\r\n    FROM {{ref('opp_closing_source_xf')}}\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_closing_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_closing"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_closing", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_closing.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_closing.sql", "name": "funnel_report_all_time_closing", "alias": "funnel_report_all_time_closing", "checksum": {"name": "sha256", "checksum": "83324f52b4a2f6b22128ac84dc04594350ea48362ecb673ff94af965274de061"}, "tags": [], "refs": [["opp_closing_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.550488}, "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        created_date AS date\r\n    FROM {{ref('funnel_report_all_time_leads')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        mql_date\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sal_date\r\n    FROM {{ref('funnel_report_all_time_sals')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sql_date\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sqo_date\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        demo_date\r\n    FROM {{ref('funnel_report_all_time_demo')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        voc_date\r\n    FROM {{ref('funnel_report_all_time_voc')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        closing_date\r\n    FROM {{ref('funnel_report_all_time_closing')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        won_date\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        lost_date\r\n    FROM {{ref('funnel_report_all_time_lost')}}\r\n\r\n), final AS (\r\n\r\n    SELECT DISTINCT\r\n        base.channel_bucket\r\n    FROM base\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_all_time_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_filters_channelbucket"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_filters_channelbucket.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_filters_channelbucket.sql", "name": "funnel_report_all_time_filters_channelbucket", "alias": "funnel_report_all_time_filters_channelbucket", "checksum": {"name": "sha256", "checksum": "ca70d41182a7716a9d7460c6e3d5e1f86c0d107b4b47afc2681e174eb00142fb"}, "tags": [], "refs": [["funnel_report_all_time_leads"], ["funnel_report_all_time_mqls"], ["funnel_report_all_time_sals"], ["funnel_report_all_time_sqls"], ["funnel_report_all_time_sqos"], ["funnel_report_all_time_demo"], ["funnel_report_all_time_voc"], ["funnel_report_all_time_closing"], ["funnel_report_all_time_won"], ["funnel_report_all_time_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5524309}, "model.acton_marketing_data.funnel_report_all_time_filters_leadsource": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        created_date AS date\r\n    FROM {{ref('funnel_report_all_time_leads')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        mql_date\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sal_date\r\n    FROM {{ref('funnel_report_all_time_sals')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sql_date\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sqo_date\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        demo_date\r\n    FROM {{ref('funnel_report_all_time_demo')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        voc_date\r\n    FROM {{ref('funnel_report_all_time_voc')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        closing_date\r\n    FROM {{ref('funnel_report_all_time_closing')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        won_date\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        lost_date\r\n    FROM {{ref('funnel_report_all_time_lost')}}\r\n\r\n), final AS (\r\n\r\n    SELECT DISTINCT\r\n        base.lead_source\r\n    FROM base\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_all_time_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_filters_leadsource"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_filters_leadsource", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_filters_leadsource.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_filters_leadsource.sql", "name": "funnel_report_all_time_filters_leadsource", "alias": "funnel_report_all_time_filters_leadsource", "checksum": {"name": "sha256", "checksum": "f4159bb8f5e13583482a47000cc6e983d86587356fbfca0e3e6f059c20963f5e"}, "tags": [], "refs": [["funnel_report_all_time_leads"], ["funnel_report_all_time_mqls"], ["funnel_report_all_time_sals"], ["funnel_report_all_time_sqls"], ["funnel_report_all_time_sqos"], ["funnel_report_all_time_demo"], ["funnel_report_all_time_voc"], ["funnel_report_all_time_closing"], ["funnel_report_all_time_won"], ["funnel_report_all_time_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5550454}, "model.acton_marketing_data.funnel_report_current_week_voc": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_voc_source_xf.opportunity_id AS voc_id,\r\n        acv,\r\n        opp_voc_source_xf.negotiation_date AS sqo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_voc_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_voc_source_xf.negotiation_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_voc"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_voc", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_voc.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_voc.sql", "name": "funnel_report_current_week_voc", "alias": "funnel_report_current_week_voc", "checksum": {"name": "sha256", "checksum": "5828d6f71ca0df2ea8fdf7276db2741bb5ae866b6f2474733c831f53cf14c6ae"}, "tags": [], "refs": [["date_base_xf"], ["opp_voc_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5579922}, "model.acton_marketing_data.funnel_report_previous_week_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_previous_week_leads')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_previous_week_mqls')}}\r\n    GROUP BY 1,3,4,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_previous_week_sals')}}\r\n    GROUP BY 1,2,4,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_previous_week_sqls')}}\r\n    GROUP BY 1,2,3,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_previous_week_sqos')}}\r\n    GROUP BY 1,2,3,4,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        COUNT(DISTINCT demo_id) AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_previous_week_demo')}}\r\n    GROUP BY 1,2,3,4,5,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_previous_week_voc')}}\r\n    GROUP BY 1,2,3,4,5,6,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_previous_week_closing')}}\r\n    GROUP BY 1,2,3,4,5,6,7,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        COUNT(DISTINCT won_id) AS won\r\n    FROM {{ref('funnel_report_previous_week_won')}}\r\n    GROUP BY 1,2,3,4,5,6,7,8\r\n\r\n)\r\n\r\nSELECT\r\n    SUM(leads) AS leads,\r\n    SUM(mqls) AS mqls,\r\n    SUM(sals) AS sals,\r\n    SUM(sqls) AS sqls,\r\n    SUM(sqos) AS sqos,\r\n    SUM(demos) AS demos,\r\n    SUM(voc) AS voc,\r\n    SUM(closing) AS closing,\r\n    SUM(won) AS won\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_won"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_xf"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_xf.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_xf.sql", "name": "funnel_report_previous_week_xf", "alias": "funnel_report_previous_week_xf", "checksum": {"name": "sha256", "checksum": "19c1cf3b7551b013afb3b5ca1115e82bf7d702c4f3a14eeb84b4d8ede609627d"}, "tags": [], "refs": [["funnel_report_previous_week_leads"], ["funnel_report_previous_week_mqls"], ["funnel_report_previous_week_sals"], ["funnel_report_previous_week_sqls"], ["funnel_report_previous_week_sqos"], ["funnel_report_previous_week_demo"], ["funnel_report_previous_week_voc"], ["funnel_report_previous_week_closing"], ["funnel_report_previous_week_won"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.560308}, "model.acton_marketing_data.funnel_report_current_week_sals_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sal_source_ss_xf.lead_id AS sal_id,\r\n        sal_source_ss_xf.working_date AS sal_date,\r\n        country,\r\n        global_region\r\n    FROM {{ref('sal_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sal_source_ss_xf.working_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_sals_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_sals_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_sals_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_sals_ss.sql", "name": "funnel_report_current_week_sals_ss", "alias": "funnel_report_current_week_sals_ss", "checksum": {"name": "sha256", "checksum": "38d0ba03194416b76e330a46bbd1448823bc8b066c1443de2c4365483ac0a786"}, "tags": [], "refs": [["date_base_xf"], ["sal_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5629685}, "model.acton_marketing_data.funnel_report_previous_week_leads_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        lead_source_ss_xf.lead_id AS lead_id,\r\n        lead_source_ss_xf.marketing_created_date AS created_date,\r\n        global_region\r\n    FROM {{ref('lead_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    lead_source_ss_xf.marketing_created_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_leads_ss"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_leads_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_leads_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_leads_ss.sql", "name": "funnel_report_previous_week_leads_ss", "alias": "funnel_report_previous_week_leads_ss", "checksum": {"name": "sha256", "checksum": "2706977c0ae72b32c397a0210eccc6260234907022072d8ab52296e3b5ea869b"}, "tags": [], "refs": [["date_base_xf"], ["lead_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5651474}, "model.acton_marketing_data.funnel_report_all_time_sqo2won_velocity": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH sqo_opp AS (\r\n\r\n    SELECT\r\n        sqo_id,\r\n        sqo_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n\r\n), won_opp AS (\r\n\r\n    SELECT\r\n        won_id,\r\n        won_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n    \r\n), final AS (\r\n\r\n    SELECT\r\n        won_id,\r\n        won_date,\r\n        sqo_date,\r\n        won_opp.account_global_region,\r\n        won_opp.company_size_rev,\r\n        won_opp.opp_lead_source,\r\n        won_opp.segment,\r\n        won_opp.industry,\r\n        won_opp.channel_bucket,\r\n        won_opp.industry_bucket,\r\n        {{ dbt_utils.datediff(\"sqo_date\",\"won_date\",'day')}} AS sqo2won_velocity\r\n    FROM won_opp\r\n    LEFT JOIN sqo_opp ON \r\n    won_opp.won_id=sqo_opp.sqo_id\r\n)\r\n\r\nSELECT\r\n    account_global_region,\r\n    company_size_rev,\r\n    opp_lead_source,\r\n    segment,\r\n    industry,\r\n    channel_bucket,\r\n    industry_bucket,\r\n    won_date,\r\n    sqo2won_velocity\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_won"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_sqo2won_velocity"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_sqo2won_velocity", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_sqo2won_velocity.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_sqo2won_velocity.sql", "name": "funnel_report_all_time_sqo2won_velocity", "alias": "funnel_report_all_time_sqo2won_velocity", "checksum": {"name": "sha256", "checksum": "23b63f71ee3851840b8ca0b51986987a0680a6b7df52bbe3f679075c676513f7"}, "tags": [], "refs": [["funnel_report_all_time_sqos"], ["funnel_report_all_time_won"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.567406}, "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        created_date AS date\r\n    FROM {{ref('funnel_report_all_time_leads')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        mql_date\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sal_date\r\n    FROM {{ref('funnel_report_all_time_sals')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sql_date\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sqo_date\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        demo_date\r\n    FROM {{ref('funnel_report_all_time_demo')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        voc_date\r\n    FROM {{ref('funnel_report_all_time_voc')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        closing_date\r\n    FROM {{ref('funnel_report_all_time_closing')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        won_date\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        lost_date\r\n    FROM {{ref('funnel_report_all_time_lost')}}\r\n\r\n), final AS (\r\n\r\n    SELECT DISTINCT\r\n        base.company_size_rev   \r\n    FROM base\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_all_time_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_filters_companysizerev"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_filters_companysizerev.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_filters_companysizerev.sql", "name": "funnel_report_all_time_filters_companysizerev", "alias": "funnel_report_all_time_filters_companysizerev", "checksum": {"name": "sha256", "checksum": "6f654b40ff5eda766b8cbd1b1807b99116ebd6fdadcfae654dd4ccefc25797e2"}, "tags": [], "refs": [["funnel_report_all_time_leads"], ["funnel_report_all_time_mqls"], ["funnel_report_all_time_sals"], ["funnel_report_all_time_sqls"], ["funnel_report_all_time_sqos"], ["funnel_report_all_time_demo"], ["funnel_report_all_time_voc"], ["funnel_report_all_time_closing"], ["funnel_report_all_time_won"], ["funnel_report_all_time_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5728068}, "model.acton_marketing_data.funnel_report_all_time_close_won_velocity": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH won_opp AS (\r\n\r\n    SELECT\r\n        won_id,\r\n        won_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n\r\n),  sql_opp AS (\r\n\r\n    SELECT\r\n        sql_id,\r\n        sql_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    \r\n), final AS (\r\n\r\n    SELECT\r\n        won_id,\r\n        sql_date,\r\n        won_date,\r\n        won_opp.account_global_region,\r\n        won_opp.company_size_rev,\r\n        won_opp.opp_lead_source,\r\n        won_opp.segment,\r\n        won_opp.industry,\r\n        won_opp.industry_bucket,\r\n        won_opp.channel_bucket,\r\n        {{ dbt_utils.datediff(\"sql_date\",\"won_date\",'day')}} AS cw_velocity\r\n    FROM won_opp\r\n    LEFT JOIN sql_opp ON \r\n    won_opp.won_id=sql_opp.sql_id\r\n)\r\n\r\nSELECT\r\n    account_global_region,\r\n    company_size_rev,\r\n    opp_lead_source,\r\n    segment,\r\n    industry,\r\n    channel_bucket,\r\n    industry_bucket,\r\n    won_date,\r\n    cw_velocity\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_all_time_sqls"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_close_won_velocity"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_close_won_velocity", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_close_won_velocity.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_close_won_velocity.sql", "name": "funnel_report_all_time_close_won_velocity", "alias": "funnel_report_all_time_close_won_velocity", "checksum": {"name": "sha256", "checksum": "962a7f7f23a3cda555e49de6d706d9d5e516ed9af2be7029982c59f0e862ff19"}, "tags": [], "refs": [["funnel_report_all_time_won"], ["funnel_report_all_time_sqls"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5752993}, "model.acton_marketing_data.funnel_report_rolling3mo_voc": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH rolling_3mo AS (\r\n\r\n    SELECT DISTINCT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day >= CURRENT_DATE-90\r\n    AND day <= CURRENT_DATE\r\n    ORDER BY 1\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_voc_source_xf.opportunity_id AS voc_id,\r\n        opp_voc_source_xf.negotiation_date AS voc_date,\r\n        rolling_3mo.week,\r\n        account_global_region\r\n    FROM {{ref('opp_voc_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_voc_source_xf.negotiation_date=date_base_xf.day\r\n    LEFT JOIN rolling_3mo ON \r\n    date_base_xf.week=rolling_3mo.week\r\n    WHERE rolling_3mo.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_voc"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_voc", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_voc.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_voc.sql", "name": "funnel_report_rolling3mo_voc", "alias": "funnel_report_rolling3mo_voc", "checksum": {"name": "sha256", "checksum": "c82541808b8e0c5387dd7c07a34f3ce89f26cd98c83be61031855af547ca6cf5"}, "tags": [], "refs": [["date_base_xf"], ["opp_voc_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.580528}, "model.acton_marketing_data.funnel_report_current_quarter_sals_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sal_source_ss_xf.lead_id AS sal_id,\r\n        sal_source_ss_xf.working_date AS sal_date,\r\n        week,\r\n        global_region\r\n    FROM {{ref('sal_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sal_source_ss_xf.working_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_sals_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_sals_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_sals_ss.sql", "name": "funnel_report_current_quarter_sals_ss", "alias": "funnel_report_current_quarter_sals_ss", "checksum": {"name": "sha256", "checksum": "8c1496e88ef88981a2babb674e40f64d6d962f1da2f7694a7a10d6f5e2ff51c2"}, "tags": [], "refs": [["date_base_xf"], ["sal_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5827246}, "model.acton_marketing_data.funnel_report_current_week_churn": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        contract_source_xf.contract_id AS contract_id,\r\n        arr_loss_amount,\r\n        contract_source_xf.churn_date AS churn_date,\r\n        de_country AS country,\r\n        global_region AS account_global_region\r\n    FROM {{ref('contract_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    contract_source_xf.churn_date=date_base_xf.day\r\n    LEFT JOIN {{ref('account_source_xf')}} ON\r\n    contract_source_xf.account_id=account_source_xf.account_id\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND churn_date IS NOT null\r\n    AND status = 'Activated'\r\n    AND contract_status = 'Cancelled'\r\n    AND cs_churn = 'true'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.contract_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_churn"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_churn", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_churn.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_churn.sql", "name": "funnel_report_current_week_churn", "alias": "funnel_report_current_week_churn", "checksum": {"name": "sha256", "checksum": "feabe8b6bdb9b9fcba7f7299fc1f2f96eb4d5924d2536dfedbf8c7813590b656"}, "tags": [], "refs": [["date_base_xf"], ["contract_source_xf"], ["date_base_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5847952}, "model.acton_marketing_data.funnel_report_current_quarter_voc": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_voc_source_xf.opportunity_id AS voc_id,\r\n        acv,\r\n        opp_voc_source_xf.negotiation_date AS sqo_date,\r\n        country,\r\n        account_global_region,\r\n        opp_lead_source,\r\n        week\r\n    FROM {{ref('opp_voc_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_voc_source_xf.negotiation_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_voc"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_voc", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_voc.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_voc.sql", "name": "funnel_report_current_quarter_voc", "alias": "funnel_report_current_quarter_voc", "checksum": {"name": "sha256", "checksum": "40b516cf5a7236339a47d843c0dadfff5b8ddb1471319d03d49c2b79ec2b042f"}, "tags": [], "refs": [["date_base_xf"], ["opp_voc_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5871158}, "model.acton_marketing_data.funnel_report_current_quarter_by_week_ss_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls_ss')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    week,\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads_ss')}}\r\n    GROUP BY 2,3\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls_ss')}}\r\n    GROUP BY 2,3\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals_ss')}}\r\n    GROUP BY 2,3\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls_ss')}}\r\n    GROUP BY 2,3\r\n   \r\n)\r\n\r\nSELECT\r\n    base.week,\r\n    base.global_region,\r\n    CASE \r\n        WHEN SUM(leads) IS null THEN 0\r\n        ELSE SUM(leads) \r\n    END AS leads,\r\n    CASE \r\n        WHEN SUM(mqls) IS null THEN 0\r\n        ELSE SUM(mqls) \r\n    END AS mqls,\r\n    CASE \r\n        WHEN SUM(sals) IS null THEN 0\r\n        ELSE SUM(sals) \r\n    END AS sals,\r\n    CASE \r\n        WHEN SUM(sqls) IS null THEN 0\r\n        ELSE SUM(sqls) \r\n    END AS sqls\r\nFROM base\r\nLEFT JOIN lead_base ON\r\nbase.week=lead_base.week\r\nAND base.global_region=lead_base.global_region\r\nLEFT JOIN mql_base ON\r\nbase.week=mql_base.week\r\nAND base.global_region=mql_base.global_region\r\nLEFT JOIN sal_base ON\r\nbase.week=sal_base.week\r\nAND base.global_region=sal_base.global_region\r\nLEFT JOIN sql_base ON\r\nbase.week=sql_base.week\r\nAND base.global_region=sql_base.account_global_region\r\nGROUP BY 1,2\r\nORDER BY 1,2", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_by_week_ss_xf"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_by_week_ss_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_by_week_ss_xf.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_by_week_ss_xf.sql", "name": "funnel_report_current_quarter_by_week_ss_xf", "alias": "funnel_report_current_quarter_by_week_ss_xf", "checksum": {"name": "sha256", "checksum": "2465833aac198f5a43e410709907965c93a20d8515e1d0ca99137f873a626946"}, "tags": [], "refs": [["funnel_report_current_quarter_leads_ss"], ["funnel_report_current_quarter_mqls_ss"], ["funnel_report_current_quarter_sals_ss"], ["funnel_report_current_quarter_sqls_ss"], ["funnel_report_current_quarter_leads_ss"], ["funnel_report_current_quarter_mqls_ss"], ["funnel_report_current_quarter_sals_ss"], ["funnel_report_current_quarter_sqls_ss"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5892942}, "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_leads')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_mqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sals')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sqos')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_demo')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_voc')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_closing')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_won')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_leads')}}\r\n    GROUP BY 2,3\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_mqls')}}\r\n    GROUP BY 2,3\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sals')}}\r\n    GROUP BY 2,3\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sqls')}}\r\n    GROUP BY 2,3\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_sqos')}}\r\n    GROUP BY 2,3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_demo')}}\r\n    GROUP BY 2,3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_voc')}}\r\n    GROUP BY 2,3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_closing')}}\r\n    GROUP BY 2,3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_rolling3mo_won')}}\r\n    GROUP BY 2,3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.week,\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    AND base.week=lead_base.week\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    AND base.week=mql_base.week\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    AND base.week=sal_base.week\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    AND base.week=sql_base.week\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    AND base.week=sqo_base.week\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    AND base.week=demo_base.week\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    AND base.week=voc_base.week\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    AND base.week=closing_base.week\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    AND base.week=won_base.week\r\n    GROUP BY 1,2\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\n    week,\r\n    SUM(leads) AS leads,\r\n    SUM(mqls) AS mqls,\r\n    SUM(sals) AS sals,\r\n    SUM(sqls) AS sqls,\r\n    SUM(sqos) AS sqos,\r\n    SUM(demo) AS demo,\r\n    SUM(voc) AS voc, \r\n    SUM(closing) AS closing,\r\n    SUM(won) AS won\r\nFROM final\r\nWHERE global_region IN ('EUROPE','APJ','AUNZ','ROW')\r\nGROUP BY 1\r\nORDER BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_won", "model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_won"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_combined_emea"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_combined_emea.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_combined_emea.sql", "name": "funnel_report_rolling3mo_combined_emea", "alias": "funnel_report_rolling3mo_combined_emea", "checksum": {"name": "sha256", "checksum": "c81d4a22f155b6052090c81c7b5025c344c7972bf7ca585a97d34478d7eb06fa"}, "tags": [], "refs": [["funnel_report_rolling3mo_leads"], ["funnel_report_rolling3mo_mqls"], ["funnel_report_rolling3mo_sals"], ["funnel_report_rolling3mo_sqls"], ["funnel_report_rolling3mo_sqos"], ["funnel_report_rolling3mo_demo"], ["funnel_report_rolling3mo_voc"], ["funnel_report_rolling3mo_closing"], ["funnel_report_rolling3mo_won"], ["funnel_report_rolling3mo_leads"], ["funnel_report_rolling3mo_mqls"], ["funnel_report_rolling3mo_sals"], ["funnel_report_rolling3mo_sqls"], ["funnel_report_rolling3mo_sqos"], ["funnel_report_rolling3mo_demo"], ["funnel_report_rolling3mo_voc"], ["funnel_report_rolling3mo_closing"], ["funnel_report_rolling3mo_won"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.591943}, "model.acton_marketing_data.funnel_report_all_time_l20_velocity_mlc": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        marketing_created_date,\r\n        opportunity_id,\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket,\r\n        opp_created_date,\r\n        account_global_region,\r\n        opp_company_size_rev,\r\n        opp_lead_source,\r\n        opp_segment,\r\n        opp_industry,\r\n        opp_channel_bucket,\r\n        opp_industry_bucket\r\n    FROM {{ref('opportunities_with_contacts')}}\r\n    WHERE type='New Business'\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        marketing_created_date,\r\n        opp_created_date,\r\n        account_global_region,\r\n        opp_company_size_rev,\r\n        opp_lead_source,\r\n        opp_segment,\r\n        opp_industry,\r\n        opp_channel_bucket,\r\n        opp_industry_bucket,\r\n        {{ dbt_utils.datediff(\"marketing_created_date\",\"opp_created_date\",'day')}} AS lead_to_opp_velocity\r\n    FROM base\r\n    WHERE opp_created_date >= marketing_created_date\r\n)\r\n\r\nSELECT\r\n    account_global_region,\r\n    opp_company_size_rev,\r\n    opp_lead_source,\r\n    opp_segment,\r\n    opp_industry,\r\n    opp_channel_bucket,\r\n    opp_industry_bucket,\r\n    marketing_created_date,\r\n    lead_to_opp_velocity\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.opportunities_with_contacts"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_l20_velocity_mlc"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_l20_velocity_mlc", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_l20_velocity_mlc.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_l20_velocity_mlc.sql", "name": "funnel_report_all_time_l20_velocity_mlc", "alias": "funnel_report_all_time_l20_velocity_mlc", "checksum": {"name": "sha256", "checksum": "39f21f8aec619c16ad7a66ef1bfe929279552372f979748660dd044e7b10dc5e"}, "tags": [], "refs": [["opportunities_with_contacts"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5950358}, "model.acton_marketing_data.funnel_report_all_time_m2sql_to_target": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH m2sql_target AS (\r\n\r\n    SELECT \r\n        kpi_month,\r\n        kpi_region,\r\n        kpi_target AS m2sql_target\r\n    FROM {{ref('kpi_targets')}}\r\n    WHERE kpi = 'target_m2sql_conv'\r\n\r\n), actual_sqls AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',sql_date)::Date AS sqls_month,\r\n        CASE \r\n            WHEN account_global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN account_global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        COUNT(DISTINCT sql_id) AS sqls\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    WHERE sql_date >= '2022-04-01'\r\n    GROUP BY 1,2\r\n\r\n), actual_mqls AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',mql_date)::Date AS mqls_month,\r\n        CASE \r\n            WHEN global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        COUNT(DISTINCT mql_id) AS mqls\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    WHERE mql_date >= '2022-04-01'\r\n    GROUP BY 1,2\r\n\r\n), actual_m2sql AS (\r\n\r\n    SELECT\r\n        sqls_month,\r\n        actual_sqls.region,\r\n        SUM(sqls)/SUM(mqls) AS m2sql_actual\r\n    FROM actual_sqls\r\n    LEFT JOIN actual_mqls ON \r\n    actual_sqls.region=actual_mqls.region\r\n    AND actual_sqls.sqls_month=actual_mqls.mqls_month\r\n    WHERE actual_sqls.region IS NOT null\r\n    GROUP BY 1,2\r\n\r\n)\r\n\r\nSELECT\r\n    sqls_month,\r\n    actual_m2sql.region,\r\n    m2sql_actual,\r\n    m2sql_target,\r\n    m2sql_actual/m2sql_target AS actual_vs_target\r\nFROM actual_m2sql\r\nLEFT JOIN m2sql_target ON\r\nactual_m2sql.sqls_month=m2sql_target.kpi_month\r\nAND actual_m2sql.region=m2sql_target.kpi_region\r\nWHERE region IS NOT null", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.kpi_targets", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_mqls"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_m2sql_to_target"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_m2sql_to_target", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_m2sql_to_target.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_m2sql_to_target.sql", "name": "funnel_report_all_time_m2sql_to_target", "alias": "funnel_report_all_time_m2sql_to_target", "checksum": {"name": "sha256", "checksum": "415f99ad2ceed193d25f2eadb325bdfbb31a76c4fa08f665f119b5fb6e274377"}, "tags": [], "refs": [["kpi_targets"], ["funnel_report_all_time_sqls"], ["funnel_report_all_time_mqls"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.5998373}, "model.acton_marketing_data.funnel_report_previous_week_sqos": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sqo_source_xf.opportunity_id AS sqo_id,\r\n        acv,\r\n        sqo_source_xf.discovery_date AS sqo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('sqo_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sqo_source_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_sqos"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_sqos", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_sqos.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_sqos.sql", "name": "funnel_report_previous_week_sqos", "alias": "funnel_report_previous_week_sqos", "checksum": {"name": "sha256", "checksum": "c93d8e9626add21aad1f68b3befffb5763ed413f81edf5b1fb2152d2f21cc5c4"}, "tags": [], "refs": [["date_base_xf"], ["sqo_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.602185}, "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sql_source_ss_xf.sql_id,\r\n        sql_source_ss_xf.created_date AS sql_date,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('sql_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sql_source_ss_xf.created_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_sqls_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_sqls_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_sqls_ss.sql", "name": "funnel_report_current_quarter_sqls_ss", "alias": "funnel_report_current_quarter_sqls_ss", "checksum": {"name": "sha256", "checksum": "417557332e228bc3880672f322d8b07e41a80702b824456d91833e1a7a22325e"}, "tags": [], "refs": [["date_base_xf"], ["sql_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.604464}, "model.acton_marketing_data.funnel_report_all_time_voc2closing_velocity": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH voc_opp AS (\r\n\r\n    SELECT\r\n        voc_id,\r\n        voc_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_voc')}}\r\n\r\n),  closing_opp AS (\r\n\r\n    SELECT\r\n        closing_id,\r\n        closing_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_closing')}}\r\n    \r\n), final AS (\r\n\r\n    SELECT\r\n        closing_id,\r\n        voc_date,\r\n        closing_date,\r\n        closing_opp.account_global_region,\r\n        closing_opp.company_size_rev,\r\n        closing_opp.opp_lead_source,\r\n        closing_opp.segment,\r\n        closing_opp.industry,\r\n        closing_opp.industry_bucket,\r\n        closing_opp.channel_bucket,\r\n        {{ dbt_utils.datediff(\"voc_date\",\"closing_date\",'day')}} AS voc2closing_velocity\r\n    FROM closing_opp\r\n    LEFT JOIN voc_opp ON \r\n    closing_opp.closing_id=voc_opp.voc_id\r\n)\r\n\r\nSELECT\r\n    account_global_region,\r\n    company_size_rev,\r\n    opp_lead_source,\r\n    segment,\r\n    industry,\r\n    channel_bucket,\r\n    industry_bucket,\r\n    closing_date,\r\n    voc2closing_velocity\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_closing"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_voc2closing_velocity"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_voc2closing_velocity", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_voc2closing_velocity.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_voc2closing_velocity.sql", "name": "funnel_report_all_time_voc2closing_velocity", "alias": "funnel_report_all_time_voc2closing_velocity", "checksum": {"name": "sha256", "checksum": "63fd0da0f8689cd59d51fac8a4cd859a89e2169aa4765ac545f1e475fa1b3dfe"}, "tags": [], "refs": [["funnel_report_all_time_voc"], ["funnel_report_all_time_closing"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6065567}, "model.acton_marketing_data.funnel_report_current_week_sqos": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sqo_source_xf.opportunity_id AS sqo_id,\r\n        acv,    \r\n        sqo_source_xf.discovery_date AS sqo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('sqo_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sqo_source_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_sqos"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_sqos", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_sqos.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_sqos.sql", "name": "funnel_report_current_week_sqos", "alias": "funnel_report_current_week_sqos", "checksum": {"name": "sha256", "checksum": "6f49a07379047feb68f4a470bd8eeec0cd31ce4ced5d277e8e6ba1280d94518e"}, "tags": [], "refs": [["date_base_xf"], ["sqo_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.612493}, "model.acton_marketing_data.funnel_report_all_time_m2sal_velocity": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH sals AS (\r\n\r\n    SELECT\r\n        sal_id,\r\n        sal_date,\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_sals')}}\r\n\r\n),  mqls AS (\r\n\r\n    SELECT\r\n        mql_id,\r\n        mql_date,\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    \r\n), final AS (\r\n\r\n    SELECT\r\n        sal_id,\r\n        sal_date,\r\n        mql_date,\r\n        sals.global_region,\r\n        sals.company_size_rev,\r\n        sals.lead_source,\r\n        sals.segment,\r\n        sals.industry,\r\n        sals.channel_bucket,\r\n        sals.industry_bucket,\r\n        {{ dbt_utils.datediff(\"mql_date\",\"sal_date\",'day')}} AS m2sal_velocity\r\n    FROM sals\r\n    LEFT JOIN mqls ON \r\n    sals.sal_id=mqls.mql_id\r\n)\r\n\r\nSELECT\r\n    global_region,\r\n    company_size_rev,\r\n    lead_source,\r\n    segment,\r\n    industry,\r\n    channel_bucket,\r\n    industry_bucket,\r\n    sal_date,\r\n    m2sal_velocity\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_mqls"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_m2sal_velocity"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_m2sal_velocity", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_m2sal_velocity.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_m2sal_velocity.sql", "name": "funnel_report_all_time_m2sal_velocity", "alias": "funnel_report_all_time_m2sal_velocity", "checksum": {"name": "sha256", "checksum": "7ef189dd937371b5e9e2a5d1170ca27a4d9b1b638b1208552153edc99e5fffee"}, "tags": [], "refs": [["funnel_report_all_time_sals"], ["funnel_report_all_time_mqls"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.614718}, "model.acton_marketing_data.funnel_report_all_time_filters_globalregion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        created_date AS date\r\n    FROM {{ref('funnel_report_all_time_leads')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        mql_date\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sal_date\r\n    FROM {{ref('funnel_report_all_time_sals')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sql_date\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        sqo_date\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        demo_date\r\n    FROM {{ref('funnel_report_all_time_demo')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        voc_date\r\n    FROM {{ref('funnel_report_all_time_voc')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        closing_date\r\n    FROM {{ref('funnel_report_all_time_closing')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        won_date\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        lost_date\r\n    FROM {{ref('funnel_report_all_time_lost')}}\r\n\r\n), final AS (\r\n\r\n    SELECT DISTINCT\r\n        base.global_region \r\n    FROM base\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_all_time_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_filters_globalregion"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_filters_globalregion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_filters_globalregion.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_filters_globalregion.sql", "name": "funnel_report_all_time_filters_globalregion", "alias": "funnel_report_all_time_filters_globalregion", "checksum": {"name": "sha256", "checksum": "96dd9d891fab0f388149a7c74133c7a962278fcd50c6b64eb041c1f8acbc09cc"}, "tags": [], "refs": [["funnel_report_all_time_leads"], ["funnel_report_all_time_mqls"], ["funnel_report_all_time_sals"], ["funnel_report_all_time_sqls"], ["funnel_report_all_time_sqos"], ["funnel_report_all_time_demo"], ["funnel_report_all_time_voc"], ["funnel_report_all_time_closing"], ["funnel_report_all_time_won"], ["funnel_report_all_time_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6195805}, "model.acton_marketing_data.funnel_report_all_time_mqls": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        lead_mql_source_xf.person_id AS mql_id,\r\n        CONCAT('https://acton.my.salesforce.com/',lead_mql_source_xf.person_id) AS mql_url,\r\n        lead_mql_source_xf.mql_most_recent_date AS mql_date,\r\n        lead_mql_source_xf.working_date,\r\n        company,\r\n        first_name,\r\n        last_name,\r\n        title,\r\n        person_status,\r\n        country,\r\n        is_hand_raiser,\r\n        CASE\r\n        WHEN global_region IS null THEN 'blank'\r\n        ELSE global_region\r\n    END AS global_region,\r\n    CASE\r\n        WHEN company_size_rev IS null THEN 'blank'\r\n        ELSE company_size_rev\r\n    END AS company_size_rev,\r\n    CASE\r\n        WHEN lead_source IS null THEN 'blank'\r\n        ELSE lead_source\r\n    END AS lead_source,\r\n    CASE\r\n        WHEN segment IS null THEN 'blank'\r\n        ELSE segment\r\n    END AS segment,\r\n    CASE\r\n        WHEN industry IS null THEN 'blank'\r\n        ELSE industry\r\n    END AS industry,\r\n    CASE\r\n        WHEN industry_bucket IS null THEN 'blank'\r\n        ELSE industry_bucket\r\n    END AS industry_bucket,\r\n    CASE\r\n        WHEN channel_bucket IS null THEN 'blank'\r\n        ELSE channel_bucket\r\n    END AS channel_bucket,\r\n    CASE\r\n        WHEN offer_asset_name_lead_creation IS null THEN 'blank'\r\n        ELSE offer_asset_name_lead_creation\r\n    END AS offer_asset_name_lead_creation\r\n    FROM {{ref('lead_mql_source_xf')}}\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.lead_mql_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_mqls"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_mqls", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_mqls.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_mqls.sql", "name": "funnel_report_all_time_mqls", "alias": "funnel_report_all_time_mqls", "checksum": {"name": "sha256", "checksum": "c44f848b5c77edc8dae4dcd115752d07a612e415ae521a09c83e6c4bb834fe9b"}, "tags": [], "refs": [["lead_mql_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6224499}, "model.acton_marketing_data.funnel_report_current_quarter_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_quarter_leads')}}\r\n    GROUP BY 2,3,4,5,6\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_quarter_mqls')}}\r\n    GROUP BY 1,3,4,5,6\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_quarter_sals')}}\r\n    GROUP BY 1,2,4,5,6\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        0 AS sqos,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_quarter_sqls')}}\r\n    GROUP BY 1,2,3,5,6\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_quarter_sqos')}}\r\n    GROUP BY 1,2,4,3,6\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        COUNT(DISTINCT won_id) AS won\r\n    FROM {{ref('funnel_report_current_quarter_won')}}\r\n    GROUP BY 1,2,4,5,3\r\n\r\n)\r\n\r\nSELECT\r\n    SUM(leads) AS leads,\r\n    SUM(mqls) AS mqls,\r\n    SUM(sals) AS sals,\r\n    SUM(sqls) AS sqls,\r\n    SUM(sqos) AS sqos,\r\n    SUM(won) AS won\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_won"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_xf"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_xf.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_xf.sql", "name": "funnel_report_current_quarter_xf", "alias": "funnel_report_current_quarter_xf", "checksum": {"name": "sha256", "checksum": "28240ff4948d431afcccef9d7c4dc63bf3fe1b0a03cf8ff59f84d48083a3a148"}, "tags": [], "refs": [["funnel_report_current_quarter_leads"], ["funnel_report_current_quarter_mqls"], ["funnel_report_current_quarter_sals"], ["funnel_report_current_quarter_sqls"], ["funnel_report_current_quarter_sqos"], ["funnel_report_current_quarter_won"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6244912}, "model.acton_marketing_data.funnel_report_all_time_sql2sqo_to_target": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH sql2sqo_target AS (\r\n\r\n    SELECT \r\n        kpi_month,\r\n        kpi_region,\r\n        kpi_target AS sql2sqo_target\r\n    FROM {{ref('kpi_targets')}}\r\n    WHERE kpi = 'target_sql2sqo_conv'\r\n\r\n), actual_sqls AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',sql_date)::Date AS sqls_month,\r\n        CASE \r\n            WHEN account_global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN account_global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        COUNT(DISTINCT sql_id) AS sqls\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    WHERE sql_date >= '2022-04-01'\r\n    GROUP BY 1,2\r\n\r\n), actual_sqos AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',sqo_date)::Date AS sqos_month,\r\n        CASE \r\n            WHEN account_global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN account_global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        COUNT(DISTINCT sqo_id) AS sqos\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    WHERE sqo_date >= '2022-04-01'\r\n    GROUP BY 1,2\r\n\r\n), actual_sql2sqo AS (\r\n\r\n    SELECT\r\n        sqos_month,\r\n        actual_sqos.region,\r\n        SUM(sqos)/SUM(sqls) AS sql2sqo_actual\r\n    FROM actual_sqos\r\n    LEFT JOIN actual_sqls ON \r\n    actual_sqos.region=actual_sqls.region\r\n    AND actual_sqos.sqos_month=actual_sqls.sqls_month\r\n    WHERE actual_sqos.region IS NOT null\r\n    GROUP BY 1,2\r\n\r\n)\r\n\r\nSELECT\r\n    sqos_month,\r\n    actual_sql2sqo.region,\r\n    sql2sqo_actual,\r\n    sql2sqo_target,\r\n    sql2sqo_actual/sql2sqo_target AS actual_vs_target\r\nFROM actual_sql2sqo\r\nLEFT JOIN sql2sqo_target ON\r\nactual_sql2sqo.sqos_month=sql2sqo_target.kpi_month\r\nAND actual_sql2sqo.region=sql2sqo_target.kpi_region\r\nWHERE region IS NOT null", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.kpi_targets", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_sql2sqo_to_target"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_sql2sqo_to_target", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_sql2sqo_to_target.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_sql2sqo_to_target.sql", "name": "funnel_report_all_time_sql2sqo_to_target", "alias": "funnel_report_all_time_sql2sqo_to_target", "checksum": {"name": "sha256", "checksum": "7b083121392bd66424fd4d8c606f8e47d9c338d64ae8e34e3daf63262cd8bef5"}, "tags": [], "refs": [["kpi_targets"], ["funnel_report_all_time_sqls"], ["funnel_report_all_time_sqos"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6268551}, "model.acton_marketing_data.funnel_report_all_time_demo2voc_velocity": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH demo_opp AS (\r\n\r\n    SELECT\r\n        demo_id,\r\n        demo_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_demo')}}\r\n\r\n),  voc_opp AS (\r\n\r\n    SELECT\r\n        voc_id,\r\n        voc_date,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_voc')}}\r\n    \r\n), final AS (\r\n\r\n    SELECT\r\n        voc_id,\r\n        demo_date,\r\n        voc_date,\r\n        voc_opp.account_global_region,\r\n        voc_opp.company_size_rev,\r\n        voc_opp.opp_lead_source,\r\n        voc_opp.segment,\r\n        voc_opp.industry,\r\n        voc_opp.channel_bucket,\r\n        voc_opp.industry_bucket,\r\n        {{ dbt_utils.datediff(\"demo_date\",\"voc_date\",'day')}} AS demo2voc_velocity\r\n    FROM voc_opp\r\n    LEFT JOIN demo_opp ON \r\n    voc_opp.voc_id=demo_opp.demo_id\r\n)\r\n\r\nSELECT\r\n    account_global_region,\r\n    company_size_rev,\r\n    opp_lead_source,\r\n    segment,\r\n    industry,\r\n    channel_bucket,\r\n    industry_bucket,\r\n    voc_date,\r\n    demo2voc_velocity\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_voc"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_demo2voc_velocity"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_demo2voc_velocity", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_demo2voc_velocity.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_demo2voc_velocity.sql", "name": "funnel_report_all_time_demo2voc_velocity", "alias": "funnel_report_all_time_demo2voc_velocity", "checksum": {"name": "sha256", "checksum": "21039b2f0baf764f82394655d7b0c0d66158325e9eac4cc9eac816d306332d11"}, "tags": [], "refs": [["funnel_report_all_time_demo"], ["funnel_report_all_time_voc"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.628948}, "model.acton_marketing_data.funnel_report_current_quarter_leads_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        lead_source_ss_xf.lead_id AS lead_id,\r\n        lead_source_ss_xf.marketing_created_date AS created_date,\r\n        week,\r\n        global_region\r\n    FROM {{ref('lead_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    lead_source_ss_xf.marketing_created_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_leads_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_leads_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_leads_ss.sql", "name": "funnel_report_current_quarter_leads_ss", "alias": "funnel_report_current_quarter_leads_ss", "checksum": {"name": "sha256", "checksum": "24f90e763ef145b5403df282f2434406f28eadce9bf7001806aa300fa05035a8"}, "tags": [], "refs": [["date_base_xf"], ["lead_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6341896}, "model.acton_marketing_data.funnel_report_previous_fy_leads": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_fy AS (\r\nSELECT\r\nfy\r\nFROM {{ref('date_base_xf')}}\r\nWHERE fy='2021'\r\n), base AS (\r\nSELECT DISTINCT\r\nlead_source_xf.lead_id AS lead_id,\r\nlead_source_xf.marketing_created_date AS created_date\r\nFROM {{ref('lead_source_xf')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nlead_source_xf.marketing_created_date=date_base_xf.day\r\nLEFT JOIN previous_fy ON \r\ndate_base_xf.fy=previous_fy.fy\r\nWHERE previous_fy.fy IS NOT null\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_fy_leads"], "unique_id": "model.acton_marketing_data.funnel_report_previous_fy_leads", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_fy_leads.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_fy_leads.sql", "name": "funnel_report_previous_fy_leads", "alias": "funnel_report_previous_fy_leads", "checksum": {"name": "sha256", "checksum": "53e4e335d264dd0dc68a810013bec9d2266d5b578860d9302ace70000aa8466e"}, "tags": [], "refs": [["date_base_xf"], ["lead_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6364129}, "model.acton_marketing_data.funnel_report_all_time_mqls_to_target": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH mql_target AS (\r\n\r\n    SELECT \r\n        kpi_month,\r\n        kpi_region,\r\n        kpi_target AS mqls_target\r\n    FROM {{ref('kpi_targets')}}\r\n    WHERE kpi = 'target_mqls'\r\n\r\n), actual_mqls AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',mql_date)::Date AS mqls_month,\r\n        CASE \r\n            WHEN global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        COUNT(DISTINCT mql_id) AS mqls\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    WHERE mql_date >= '2022-04-01'\r\n    GROUP BY 1,2\r\n)\r\n\r\nSELECT\r\n    mqls_month,\r\n    actual_mqls.region,\r\n    mqls,\r\n    mqls_target,\r\n    mqls/mqls_target AS actual_vs_target\r\nFROM actual_mqls\r\nLEFT JOIN mql_target ON\r\nactual_mqls.mqls_month=mql_target.kpi_month\r\nAND actual_mqls.region=mql_target.kpi_region\r\nWHERE region IS NOT null", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.kpi_targets", "model.acton_marketing_data.funnel_report_all_time_mqls"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_mqls_to_target"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_mqls_to_target", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_mqls_to_target.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_mqls_to_target.sql", "name": "funnel_report_all_time_mqls_to_target", "alias": "funnel_report_all_time_mqls_to_target", "checksum": {"name": "sha256", "checksum": "43d2e84799394da2e18cf5dc0df337045ef301e190417692f31972776a202488"}, "tags": [], "refs": [["kpi_targets"], ["funnel_report_all_time_mqls"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6386569}, "model.acton_marketing_data.funnel_report_all_time_l20_velocity_mlc_annual": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        marketing_created_date,\r\n        opportunity_id,\r\n        opp_created_date,\r\n        type AS opp_type,\r\n        opp_segment\r\n    FROM {{ref('opportunities_with_contacts')}}\r\n    WHERE type='New Business'\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        marketing_created_date,\r\n        opp_created_date,\r\n        opp_segment,\r\n        {{ dbt_utils.datediff(\"marketing_created_date\",\"opp_created_date\",'day')}} AS lead_to_opp_velocity\r\n    FROM base\r\n    WHERE opp_created_date >= marketing_created_date\r\n    \r\n)\r\n\r\nSELECT\r\nopp_segment,\r\nDATE_TRUNC('year',marketing_created_date) AS marketing_created_year,\r\nAVG(lead_to_opp_velocity) AS avg_lead_to_opp_velocity\r\nFROM final\r\nGROUP BY 1,2", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.opportunities_with_contacts"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_l20_velocity_mlc_annual"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_l20_velocity_mlc_annual", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_l20_velocity_mlc_annual.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_l20_velocity_mlc_annual.sql", "name": "funnel_report_all_time_l20_velocity_mlc_annual", "alias": "funnel_report_all_time_l20_velocity_mlc_annual", "checksum": {"name": "sha256", "checksum": "dd3d1da7f9be8249212fdb179bca5c0a2d638a1d64dbe353057a027b2b6aea20"}, "tags": [], "refs": [["opportunities_with_contacts"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6407812}, "model.acton_marketing_data.funnel_report_rolling3mo_sqos": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH rolling_3mo AS (\r\n\r\n    SELECT DISTINCT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day >= CURRENT_DATE-90\r\n    AND day <= CURRENT_DATE\r\n    ORDER BY 1\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sqo_source_xf.opportunity_id AS sqo_id,\r\n        sqo_source_xf.discovery_date AS discovery_date,\r\n        rolling_3mo.week,\r\n        account_global_region\r\n    FROM {{ref('sqo_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sqo_source_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN rolling_3mo ON \r\n    date_base_xf.week=rolling_3mo.week\r\n    WHERE rolling_3mo.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_sqos"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_sqos.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_sqos.sql", "name": "funnel_report_rolling3mo_sqos", "alias": "funnel_report_rolling3mo_sqos", "checksum": {"name": "sha256", "checksum": "e3d129d51ee1ab7b4730e524ce6947c0c636f1310b5b7ea94cc3044ca61534e3"}, "tags": [], "refs": [["date_base_xf"], ["sqo_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6457524}, "model.acton_marketing_data.funnel_report_previous_week_won": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_sales_source_xf.opportunity_id AS won_id,\r\n        acv,\r\n        opp_sales_source_xf.close_date AS won_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_sales_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_sales_source_xf.close_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_sales_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_won"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_won", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_won.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_won.sql", "name": "funnel_report_previous_week_won", "alias": "funnel_report_previous_week_won", "checksum": {"name": "sha256", "checksum": "ff4c899ddb7597c189e8faf1f0c6d567ad406f67ec0c4416d0df7816511eae88"}, "tags": [], "refs": [["date_base_xf"], ["opp_sales_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6478655}, "model.acton_marketing_data.funnel_report_rolling3mo_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n    SELECT \r\n        week,\r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS sqo_to_won\r\n    FROM {{ref('funnel_report_rolling3mo_combined')}}\r\n    GROUP BY 1\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_rolling3mo_combined"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_rolling3mo_conversion"], "unique_id": "model.acton_marketing_data.funnel_report_rolling3mo_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_rolling3mo_conversion.sql", "original_file_path": "models/wow/funnel/funnel_report_rolling3mo_conversion.sql", "name": "funnel_report_rolling3mo_conversion", "alias": "funnel_report_rolling3mo_conversion", "checksum": {"name": "sha256", "checksum": "e64f81f314c693e079ad2889377fc545b0c5ffb04d835dc23e3f447d2ade7710"}, "tags": [], "refs": [["funnel_report_rolling3mo_combined"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6503136}, "model.acton_marketing_data.funnel_report_current_week_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_leads')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_mqls')}}\r\n    GROUP BY 1,3,4,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_sals')}}\r\n    GROUP BY 1,2,4,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_sqls')}}\r\n    GROUP BY 1,2,3,5,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_sqos')}}\r\n    GROUP BY 1,2,3,4,6,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        COUNT(DISTINCT demo_id) AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_demo')}}\r\n    GROUP BY 1,2,3,4,5,7,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        0 AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_voc')}}\r\n    GROUP BY 1,2,3,4,5,6,8,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        0 AS won\r\n    FROM {{ref('funnel_report_current_week_closing')}}\r\n    GROUP BY 1,2,3,4,5,6,7,9\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS mqls,\r\n        0 AS sals,\r\n        0 AS sqls,\r\n        0 AS sqos,\r\n        0 AS demos,\r\n        0 AS voc,\r\n        0 AS closing,\r\n        COUNT(DISTINCT won_id) AS won\r\n    FROM {{ref('funnel_report_current_week_won')}}\r\n    GROUP BY 1,2,3,4,5,6,7,8\r\n\r\n)\r\n\r\nSELECT\r\n    SUM(leads) AS leads,\r\n    SUM(mqls) AS mqls,\r\n    SUM(sals) AS sals,\r\n    SUM(sqls) AS sqls,\r\n    SUM(sqos) AS sqos,\r\n    SUM(demos) AS demos,\r\n    SUM(voc) AS voc,\r\n    SUM(closing) AS closing,\r\n    SUM(won) AS won\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_won"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_xf"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_xf.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_xf.sql", "name": "funnel_report_current_week_xf", "alias": "funnel_report_current_week_xf", "checksum": {"name": "sha256", "checksum": "3b18d03d9a505bb17993b1b78baaa7bb10d3338307f70b132146a08f12bb281a"}, "tags": [], "refs": [["funnel_report_current_week_leads"], ["funnel_report_current_week_mqls"], ["funnel_report_current_week_sals"], ["funnel_report_current_week_sqls"], ["funnel_report_current_week_sqos"], ["funnel_report_current_week_demo"], ["funnel_report_current_week_voc"], ["funnel_report_current_week_closing"], ["funnel_report_current_week_won"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.652538}, "model.acton_marketing_data.funnel_report_all_time_demo": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_demo_source_xf.opportunity_id AS demo_id,\r\n        CONCAT('https://acton.my.salesforce.com/',opp_demo_source_xf.opportunity_id) AS demo_url,\r\n        acv,\r\n        account_name,\r\n        type AS opp_type,\r\n        opp_demo_source_xf.demo_date AS demo_date,\r\n        CASE\r\n        WHEN account_global_region IS null THEN 'blank'\r\n        ELSE account_global_region\r\n    END AS account_global_region,\r\n    CASE\r\n        WHEN company_size_rev IS null THEN 'blank'\r\n        ELSE company_size_rev\r\n    END AS company_size_rev,\r\n    CASE\r\n        WHEN opp_lead_source IS null THEN 'blank'\r\n        ELSE opp_lead_source\r\n    END AS opp_lead_source,\r\n    CASE\r\n        WHEN segment IS null THEN 'blank'\r\n        ELSE segment\r\n    END AS segment,\r\n    CASE\r\n        WHEN industry IS null THEN 'blank'\r\n        ELSE industry\r\n    END AS industry,\r\n    CASE\r\n        WHEN industry_bucket IS null THEN 'blank'\r\n        ELSE industry_bucket\r\n    END AS industry_bucket,\r\n    CASE\r\n        WHEN channel_bucket IS null THEN 'blank'\r\n        ELSE channel_bucket\r\n    END AS channel_bucket,\r\n    CASE\r\n        WHEN opp_offer_asset_name_lead_creation IS null THEN 'blank'\r\n        ELSE opp_offer_asset_name_lead_creation\r\n    END AS offer_asset_name_lead_creation\r\n    FROM {{ref('opp_demo_source_xf')}}\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_demo_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_demo"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_demo", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_demo.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_demo.sql", "name": "funnel_report_all_time_demo", "alias": "funnel_report_all_time_demo", "checksum": {"name": "sha256", "checksum": "d9007f732c5a0b27e227d76a1f57897fbf70dc87a8029812a3984f20b755c7c4"}, "tags": [], "refs": [["opp_demo_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6548727}, "model.acton_marketing_data.funnel_report_current_quarter_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqos')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    week,\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads')}}\r\n    GROUP BY 2,3\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls')}}\r\n    GROUP BY 2,3\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        week,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals')}}\r\n    GROUP BY 2,3\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls')}}\r\n    GROUP BY 2,3\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        week,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqos')}}\r\n    GROUP BY 2,3\r\n\r\n)\r\n\r\nSELECT\r\n    base.week,\r\n    base.global_region,\r\n    CASE \r\n        WHEN SUM(leads) IS null THEN 0\r\n        ELSE SUM(leads) \r\n    END AS leads,\r\n    CASE \r\n        WHEN SUM(mqls) IS null THEN 0\r\n        ELSE SUM(mqls) \r\n    END AS mqls,\r\n    CASE \r\n        WHEN SUM(sals) IS null THEN 0\r\n        ELSE SUM(sals) \r\n    END AS sals,\r\n    CASE \r\n        WHEN SUM(sqls) IS null THEN 0\r\n        ELSE SUM(sqls) \r\n    END AS sqls,\r\n    CASE \r\n        WHEN SUM(sqos) IS null THEN 0\r\n        ELSE SUM(sqos) \r\n    END AS sqos\r\nFROM base\r\nLEFT JOIN lead_base ON\r\nbase.week=lead_base.week\r\nAND base.global_region=lead_base.global_region\r\nLEFT JOIN mql_base ON\r\nbase.week=mql_base.week\r\nAND base.global_region=mql_base.global_region\r\nLEFT JOIN sal_base ON\r\nbase.week=sal_base.week\r\nAND base.global_region=sal_base.global_region\r\nLEFT JOIN sql_base ON\r\nbase.week=sql_base.week\r\nAND base.global_region=sql_base.account_global_region\r\nLEFT JOIN sqo_base ON\r\nbase.week=sqo_base.week\r\nAND base.global_region=sqo_base.account_global_region\r\nGROUP BY 1,2\r\nORDER BY 1,2", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_conversion"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_conversion.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_conversion.sql", "name": "funnel_report_current_quarter_conversion", "alias": "funnel_report_current_quarter_conversion", "checksum": {"name": "sha256", "checksum": "173ea3612888a6d71ba7bfc617d7f8ebc0e16b2675c28edb4641a4b72f03b3db"}, "tags": [], "refs": [["funnel_report_current_quarter_leads"], ["funnel_report_current_quarter_mqls"], ["funnel_report_current_quarter_sals"], ["funnel_report_current_quarter_sqls"], ["funnel_report_current_quarter_sqos"], ["funnel_report_current_quarter_leads"], ["funnel_report_current_quarter_mqls"], ["funnel_report_current_quarter_sals"], ["funnel_report_current_quarter_sqls"], ["funnel_report_current_quarter_sqos"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6570013}, "model.acton_marketing_data.funnel_report_current_week_leads_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        lead_source_ss_xf.lead_id AS lead_id,\r\n        lead_source_ss_xf.marketing_created_date AS created_date,\r\n        country,\r\n        global_region\r\n    FROM {{ref('lead_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    lead_source_ss_xf.marketing_created_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND marketing_created_date IS NOT null\r\n    AND lead_owner != '00Ga0000003Nugr' -- AO-Fake Leads\r\n    AND email NOT LIKE '%act-on.com'\r\n    AND lead_source = 'Marketing'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_leads_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_leads_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_leads_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_leads_ss.sql", "name": "funnel_report_current_week_leads_ss", "alias": "funnel_report_current_week_leads_ss", "checksum": {"name": "sha256", "checksum": "6e79e8c792a5bdc52617b17c5857de6a578e690190a8fc5054368dde6b5216c2"}, "tags": [], "refs": [["date_base_xf"], ["lead_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6596956}, "model.acton_marketing_data.funnel_report_all_time_close_won_velocity_annual": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH closed_won AS (\r\n\r\n    SELECT\r\n        opp_sales_source_xf.opportunity_id AS won_id,\r\n        opp_sales_source_xf.close_date AS won_date,\r\n        segment AS won_segment,\r\n        type AS won_type\r\n    FROM {{ref('opp_sales_source_xf')}}\r\n\r\n),  created_opp AS (\r\n\r\n    SELECT\r\n        sql_source_xf.sql_id,\r\n        sql_source_xf.created_date AS sql_date,\r\n        segment AS opp_segment,\r\n        type AS opp_type\r\n    FROM {{ref('sql_source_xf')}}\r\n    \r\n), final AS (\r\n\r\n    SELECT\r\n        won_id,\r\n        sql_date,\r\n        won_date,\r\n        won_segment,\r\n        won_type,\r\n        {{ dbt_utils.datediff(\"sql_date\",\"won_date\",'day')}} AS cw_velocity\r\n    FROM closed_won\r\n    LEFT JOIN created_opp ON \r\n    closed_won.won_id=created_opp.sql_id\r\n)\r\n\r\nSELECT\r\nwon_segment,\r\nwon_type,\r\nDATE_TRUNC('year',won_date) AS cw_year,\r\nAVG(cw_velocity) AS avg_cw_velocity\r\nFROM final\r\nGROUP BY 1,2,3", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.opp_sales_source_xf", "model.acton_marketing_data.sql_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_close_won_velocity_annual"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_close_won_velocity_annual", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_close_won_velocity_annual.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_close_won_velocity_annual.sql", "name": "funnel_report_all_time_close_won_velocity_annual", "alias": "funnel_report_all_time_close_won_velocity_annual", "checksum": {"name": "sha256", "checksum": "96061284d2c993d0e128ba59fb5969ba20a3d2f35f3a2e9d966ca2376d849414"}, "tags": [], "refs": [["opp_sales_source_xf"], ["sql_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6622121}, "model.acton_marketing_data.funnel_report_current_quarter_sqos": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sqo_source_xf.opportunity_id AS sqo_id,\r\n        sqo_source_xf.discovery_date AS sqo_date,\r\n        acv,\r\n        country,\r\n        account_global_region,\r\n        opp_lead_source,\r\n        week\r\n    FROM {{ref('sqo_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sqo_source_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_sqos"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_sqos", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_sqos.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_sqos.sql", "name": "funnel_report_current_quarter_sqos", "alias": "funnel_report_current_quarter_sqos", "checksum": {"name": "sha256", "checksum": "5d27ed17f8b93e42995b0b0270bf46129ff7f6127ae4d1c59d5c975e8a42aafa"}, "tags": [], "refs": [["date_base_xf"], ["sqo_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6670892}, "model.acton_marketing_data.funnel_report_previous_week_closing_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_closing_source_ss_xf.opportunity_id AS closing_id,\r\n        acv,\r\n        opp_closing_source_ss_xf.discovery_date AS closing_date,\r\n        account_global_region\r\n    FROM {{ref('opp_closing_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_closing_source_ss_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_closing_ss"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_closing_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_closing_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_closing_ss.sql", "name": "funnel_report_previous_week_closing_ss", "alias": "funnel_report_previous_week_closing_ss", "checksum": {"name": "sha256", "checksum": "2f791c0f1f6745ef3e946e5d02c160e5cae3c1d57a019c2b789f9d65bfdb7c66"}, "tags": [], "refs": [["date_base_xf"], ["opp_closing_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6698492}, "model.acton_marketing_data.funnel_report_previous_week_churn": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        contract_source_xf.contract_id AS contract_id,\r\n        arr_loss_amount,\r\n        contract_source_xf.churn_date AS churn_date,\r\n        de_country AS country,\r\n        global_region AS account_global_region\r\n    FROM {{ref('contract_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    contract_source_xf.churn_date=date_base_xf.day\r\n    LEFT JOIN {{ref('account_source_xf')}} ON\r\n    contract_source_xf.account_id=account_source_xf.account_id\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND churn_date IS NOT null\r\n    AND status = 'Activated'\r\n    AND contract_status = 'Cancelled'\r\n    AND cs_churn = 'true'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.contract_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_churn"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_churn", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_churn.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_churn.sql", "name": "funnel_report_previous_week_churn", "alias": "funnel_report_previous_week_churn", "checksum": {"name": "sha256", "checksum": "428f80514d47c3f0f0d5275ba5c482c8b27afbfcd98dd8e58c15680572f8a161"}, "tags": [], "refs": [["date_base_xf"], ["contract_source_xf"], ["date_base_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6730697}, "model.acton_marketing_data.funnel_report_current_week_demo_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_demo_source_ss_xf.opportunity_id AS demo_id,\r\n        acv,\r\n        opp_demo_source_ss_xf.discovery_date AS sqo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_demo_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_demo_source_ss_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_demo_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_demo_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_demo_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_demo_ss.sql", "name": "funnel_report_current_week_demo_ss", "alias": "funnel_report_current_week_demo_ss", "checksum": {"name": "sha256", "checksum": "0a961080c2aeac977925210d0df74553e93fd5751593ef1cc1bdd19696e048cf"}, "tags": [], "refs": [["date_base_xf"], ["opp_demo_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6757123}, "model.acton_marketing_data.funnel_report_current_quarter_lost": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n        SELECT DISTINCT\r\n        opp_source_xf.opportunity_id AS lost_id,\r\n        acv_deal_size_usd,\r\n        week,\r\n        billing_country AS country,\r\n        account_global_region\r\n    FROM {{ref('opp_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_source_xf.close_date=date_base_xf.day\r\n    LEFT JOIN {{ref('account_source_xf')}} ON\r\n    opp_source_xf.account_id=account_source_xf.account_id\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n    AND close_date IS NOT null\r\n    AND discovery_date IS NOT null\r\n    AND type = 'New Business'\r\n    AND stage_name IN ('Closed \u2013 Lost No Resources / Budget','Closed \u2013 Lost Not Ready / No Decision','Closed \u2013 Lost Product Deficiency','Closed - Lost to Competitor')\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_lost"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_lost", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_lost.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_lost.sql", "name": "funnel_report_current_quarter_lost", "alias": "funnel_report_current_quarter_lost", "checksum": {"name": "sha256", "checksum": "4cdc682f069d2615d486023be93f4111e1c221b6e536cfa6abe6ff416a8477a7"}, "tags": [], "refs": [["date_base_xf"], ["opp_source_xf"], ["date_base_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.678101}, "model.acton_marketing_data.funnel_report_previous_fy_mqls": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_fy AS (\r\nSELECT\r\nfy\r\nFROM {{ref('date_base_xf')}}\r\nWHERE fy='2021'\r\n), base AS (\r\nSELECT DISTINCT\r\nlead_mql_source_xf.person_id AS mql_id,\r\nlead_mql_source_xf.mql_created_date AS mql_date\r\nFROM {{ref('lead_mql_source_xf')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nlead_mql_source_xf.mql_created_date=date_base_xf.day\r\nLEFT JOIN previous_fy ON \r\ndate_base_xf.fy=previous_fy.fy\r\nWHERE previous_fy.fy IS NOT null\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_fy_mqls"], "unique_id": "model.acton_marketing_data.funnel_report_previous_fy_mqls", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_fy_mqls.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_fy_mqls.sql", "name": "funnel_report_previous_fy_mqls", "alias": "funnel_report_previous_fy_mqls", "checksum": {"name": "sha256", "checksum": "e2cb5ee6da3e591a811371df568174079efab26ba83684b16ddae1b1a215095e"}, "tags": [], "refs": [["date_base_xf"], ["lead_mql_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6803563}, "model.acton_marketing_data.funnel_report_all_time_leads_to_target": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH lead_target AS (\r\n\r\n    SELECT \r\n        kpi_month,\r\n        kpi_region,\r\n        kpi_target AS leads_target\r\n    FROM {{ref('kpi_targets')}}\r\n    WHERE kpi = 'target_leads'\r\n\r\n), actual_leads AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',created_date)::Date AS leads_month,\r\n        CASE \r\n            WHEN global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        COUNT(DISTINCT lead_id) AS leads\r\n    FROM {{ref('funnel_report_all_time_leads')}}\r\n    WHERE created_date >= '2022-04-01'\r\n    GROUP BY 1,2\r\n)\r\n\r\nSELECT\r\n    leads_month,\r\n    actual_leads.region,\r\n    leads,\r\n    leads_target,\r\n    leads/leads_target AS actual_vs_target\r\nFROM actual_leads\r\nLEFT JOIN lead_target ON\r\nactual_leads.leads_month=lead_target.kpi_month\r\nAND actual_leads.region=lead_target.kpi_region\r\nWHERE region IS NOT null", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.kpi_targets", "model.acton_marketing_data.funnel_report_all_time_leads"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_leads_to_target"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_leads_to_target", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_leads_to_target.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_leads_to_target.sql", "name": "funnel_report_all_time_leads_to_target", "alias": "funnel_report_all_time_leads_to_target", "checksum": {"name": "sha256", "checksum": "b4560b23bff353eed00dcad451d5eab15b405d646cc43ced5de3562598ead0b9"}, "tags": [], "refs": [["kpi_targets"], ["funnel_report_all_time_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6826546}, "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        lead_mql_source_ss_xf.lead_id AS mql_id,\r\n        lead_mql_source_ss_xf.mql_created_date AS mql_date,\r\n        week,\r\n        global_region\r\n    FROM {{ref('lead_mql_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    lead_mql_source_ss_xf.mql_created_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_mqls_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_mqls_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_mqls_ss.sql", "name": "funnel_report_current_quarter_mqls_ss", "alias": "funnel_report_current_quarter_mqls_ss", "checksum": {"name": "sha256", "checksum": "534b759a31b349c2d9581dc7303df50b22be4cde673ef1cdeed9e176f8ef4ee6"}, "tags": [], "refs": [["date_base_xf"], ["lead_mql_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6858976}, "model.acton_marketing_data.funnel_report_all_time_filters": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        is_hand_raiser,\r\n        offer_asset_name_lead_creation,\r\n        created_date AS date,\r\n        null AS opp_type\r\n    FROM {{ref('funnel_report_all_time_leads')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        is_hand_raiser,\r\n        offer_asset_name_lead_creation,\r\n        mql_date,\r\n        null AS opp_type\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        is_hand_raiser,\r\n        offer_asset_name_lead_creation,\r\n        sal_date,\r\n        null AS opp_type\r\n    FROM {{ref('funnel_report_all_time_sals')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        FALSE AS is_hand_raiser,\r\n        offer_asset_name_lead_creation,\r\n        sql_date,\r\n        opp_type\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        FALSE AS is_hand_raiser,\r\n        offer_asset_name_lead_creation,\r\n        sqo_date,\r\n        opp_type\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        FALSE AS is_hand_raiser,\r\n        offer_asset_name_lead_creation,\r\n        demo_date,\r\n        opp_type\r\n    FROM {{ref('funnel_report_all_time_demo')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        FALSE AS is_hand_raiser,\r\n        offer_asset_name_lead_creation,\r\n        voc_date,\r\n        opp_type\r\n    FROM {{ref('funnel_report_all_time_voc')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        FALSE AS is_hand_raiser,\r\n        offer_asset_name_lead_creation,\r\n        closing_date,\r\n        opp_type\r\n    FROM {{ref('funnel_report_all_time_closing')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        FALSE AS is_hand_raiser,\r\n        offer_asset_name_lead_creation,\r\n        won_date,\r\n        opp_type\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        FALSE AS is_hand_raiser,\r\n        offer_asset_name_lead_creation,\r\n        lost_date,\r\n        opp_type\r\n    FROM {{ref('funnel_report_all_time_lost')}}\r\n\r\n)\r\n\r\nSELECT DISTINCT\r\n    CASE\r\n        WHEN global_region IS null THEN 'blank'\r\n        ELSE global_region\r\n    END AS global_region,\r\n    CASE\r\n        WHEN company_size_rev IS null THEN 'blank'\r\n        ELSE company_size_rev\r\n    END AS company_size_rev,\r\n    CASE\r\n        WHEN lead_source IS null THEN 'blank'\r\n        ELSE lead_source\r\n    END AS lead_source,\r\n    CASE\r\n        WHEN segment IS null THEN 'blank'\r\n        ELSE segment\r\n    END AS segment,\r\n    CASE\r\n        WHEN industry IS null THEN 'blank'\r\n        ELSE industry\r\n    END AS industry,\r\n    CASE\r\n        WHEN industry_bucket IS null THEN 'blank'\r\n        ELSE industry_bucket\r\n    END AS industry_bucket,\r\n    CASE\r\n        WHEN channel_bucket IS null THEN 'blank'\r\n        ELSE channel_bucket\r\n    END AS channel_bucket,\r\n    CASE\r\n        WHEN offer_asset_name_lead_creation IS null THEN 'blank'\r\n        ELSE offer_asset_name_lead_creation\r\n    END AS offer_asset_name_lead_creation,\r\n    CASE\r\n        WHEN opp_type IS null THEN 'blank'\r\n        ELSE opp_type\r\n    END AS opp_type,\r\n    is_hand_raiser,\r\n    date\r\nFROM base", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_all_time_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_filters"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_filters", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_filters.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_filters.sql", "name": "funnel_report_all_time_filters", "alias": "funnel_report_all_time_filters", "checksum": {"name": "sha256", "checksum": "3eb87cf8ab2ffe84ce379468c7c61f07a38f63562fdee18e80bd2316f72954ca"}, "tags": [], "refs": [["funnel_report_all_time_leads"], ["funnel_report_all_time_mqls"], ["funnel_report_all_time_sals"], ["funnel_report_all_time_sqls"], ["funnel_report_all_time_sqos"], ["funnel_report_all_time_demo"], ["funnel_report_all_time_voc"], ["funnel_report_all_time_closing"], ["funnel_report_all_time_won"], ["funnel_report_all_time_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/acton_marketing_data/models/wow/funnel/funnel_report_all_time_filters.sql", "build_path": "target/run/acton_marketing_data/models/wow/funnel/funnel_report_all_time_filters.sql", "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6880734, "compiled_sql": "\n\nWITH base AS (\n\n    SELECT DISTINCT\n        global_region,\n        company_size_rev,\n        lead_source,\n        segment,\n        industry,\n        industry_bucket,\n        channel_bucket,\n        is_hand_raiser,\n        offer_asset_name_lead_creation,\n        created_date AS date,\n        null AS opp_type\n    FROM \"acton\".\"dbt_actonmarketing\".\"funnel_report_all_time_leads\"\n    UNION ALL\n    SELECT DISTINCT\n        global_region,\n        company_size_rev,\n        lead_source,\n        segment,\n        industry,\n        industry_bucket,\n        channel_bucket,\n        is_hand_raiser,\n        offer_asset_name_lead_creation,\n        mql_date,\n        null AS opp_type\n    FROM \"acton\".\"dbt_actonmarketing\".\"funnel_report_all_time_mqls\"\n    UNION ALL\n    SELECT DISTINCT\n        global_region,\n        company_size_rev,\n        lead_source,\n        segment,\n        industry,\n        industry_bucket,\n        channel_bucket,\n        is_hand_raiser,\n        offer_asset_name_lead_creation,\n        sal_date,\n        null AS opp_type\n    FROM \"acton\".\"dbt_actonmarketing\".\"funnel_report_all_time_sals\"\n    UNION ALL\n    SELECT DISTINCT\n        account_global_region,\n        company_size_rev,\n        opp_lead_source,\n        segment,\n        industry,\n        industry_bucket,\n        channel_bucket,\n        FALSE AS is_hand_raiser,\n        offer_asset_name_lead_creation,\n        sql_date,\n        opp_type\n    FROM \"acton\".\"dbt_actonmarketing\".\"funnel_report_all_time_sqls\"\n    UNION ALL\n    SELECT DISTINCT\n        account_global_region,\n        company_size_rev,\n        opp_lead_source,\n        segment,\n        industry,\n        industry_bucket,\n        channel_bucket,\n        FALSE AS is_hand_raiser,\n        offer_asset_name_lead_creation,\n        sqo_date,\n        opp_type\n    FROM \"acton\".\"dbt_actonmarketing\".\"funnel_report_all_time_sqos\"\n    UNION ALL\n    SELECT DISTINCT\n        account_global_region,\n        company_size_rev,\n        opp_lead_source,\n        segment,\n        industry,\n        industry_bucket,\n        channel_bucket,\n        FALSE AS is_hand_raiser,\n        offer_asset_name_lead_creation,\n        demo_date,\n        opp_type\n    FROM \"acton\".\"dbt_actonmarketing\".\"funnel_report_all_time_demo\"\n    UNION ALL\n    SELECT DISTINCT\n        account_global_region,\n        company_size_rev,\n        opp_lead_source,\n        segment,\n        industry,\n        industry_bucket,\n        channel_bucket,\n        FALSE AS is_hand_raiser,\n        offer_asset_name_lead_creation,\n        voc_date,\n        opp_type\n    FROM \"acton\".\"dbt_actonmarketing\".\"funnel_report_all_time_voc\"\n    UNION ALL\n    SELECT DISTINCT\n        account_global_region,\n        company_size_rev,\n        opp_lead_source,\n        segment,\n        industry,\n        industry_bucket,\n        channel_bucket,\n        FALSE AS is_hand_raiser,\n        offer_asset_name_lead_creation,\n        closing_date,\n        opp_type\n    FROM \"acton\".\"dbt_actonmarketing\".\"funnel_report_all_time_closing\"\n    UNION ALL\n    SELECT DISTINCT\n        account_global_region,\n        company_size_rev,\n        opp_lead_source,\n        segment,\n        industry,\n        industry_bucket,\n        channel_bucket,\n        FALSE AS is_hand_raiser,\n        offer_asset_name_lead_creation,\n        won_date,\n        opp_type\n    FROM \"acton\".\"dbt_actonmarketing\".\"funnel_report_all_time_won\"\n    UNION ALL\n    SELECT DISTINCT\n        account_global_region,\n        company_size_rev,\n        opp_lead_source,\n        segment,\n        industry,\n        industry_bucket,\n        channel_bucket,\n        FALSE AS is_hand_raiser,\n        offer_asset_name_lead_creation,\n        lost_date,\n        opp_type\n    FROM \"acton\".\"dbt_actonmarketing\".\"funnel_report_all_time_lost\"\n\n)\n\nSELECT DISTINCT\n    CASE\n        WHEN global_region IS null THEN 'blank'\n        ELSE global_region\n    END AS global_region,\n    CASE\n        WHEN company_size_rev IS null THEN 'blank'\n        ELSE company_size_rev\n    END AS company_size_rev,\n    CASE\n        WHEN lead_source IS null THEN 'blank'\n        ELSE lead_source\n    END AS lead_source,\n    CASE\n        WHEN segment IS null THEN 'blank'\n        ELSE segment\n    END AS segment,\n    CASE\n        WHEN industry IS null THEN 'blank'\n        ELSE industry\n    END AS industry,\n    CASE\n        WHEN industry_bucket IS null THEN 'blank'\n        ELSE industry_bucket\n    END AS industry_bucket,\n    CASE\n        WHEN channel_bucket IS null THEN 'blank'\n        ELSE channel_bucket\n    END AS channel_bucket,\n    CASE\n        WHEN offer_asset_name_lead_creation IS null THEN 'blank'\n        ELSE offer_asset_name_lead_creation\n    END AS offer_asset_name_lead_creation,\n    CASE\n        WHEN opp_type IS null THEN 'blank'\n        ELSE opp_type\n    END AS opp_type,\n    is_hand_raiser,\n    date\nFROM base", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"acton\".\"dbt_actonmarketing\".\"funnel_report_all_time_filters\""}, "model.acton_marketing_data.funnel_report_previous_week_sals_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sal_source_ss_xf.lead_id AS sal_id,\r\n        sal_source_ss_xf.working_date AS sal_date,\r\n        country,\r\n        global_region\r\n    FROM {{ref('sal_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sal_source_ss_xf.working_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_sals_ss"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_sals_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_sals_ss.sql", "name": "funnel_report_previous_week_sals_ss", "alias": "funnel_report_previous_week_sals_ss", "checksum": {"name": "sha256", "checksum": "dbed127372fdbb68c21e8c26348cb2e3a24074342803a01f60546c223709c1b3"}, "tags": [], "refs": [["date_base_xf"], ["sal_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6912405}, "model.acton_marketing_data.funnel_report_all_time_sqopipe_to_target": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH sqopipe_target AS (\r\n\r\n    SELECT \r\n        kpi_month,\r\n        kpi_region,\r\n        kpi_target AS sqopipe_target\r\n    FROM {{ref('kpi_targets')}}\r\n    WHERE kpi = 'target_new_cw_pipe'\r\n    --WHERE kpi = 'target_sqo_pipe'\r\n    \r\n), actual_sqopipe AS (\r\n\r\n    SELECT\r\n        DATE_TRUNC('month',sqo_date)::Date AS sqopipe_month,\r\n        CASE \r\n            WHEN account_global_region LIKE 'NA-%' THEN 'NA'\r\n            WHEN account_global_region IN ('EUROPE') THEN 'EMEA'\r\n            ELSE null\r\n        END AS region,\r\n        SUM(acv) AS sqopipe\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    WHERE sqo_date >= '2022-04-01'\r\n    GROUP BY 1,2\r\n)\r\n\r\nSELECT\r\n    sqopipe_month,\r\n    actual_sqopipe.region,\r\n    sqopipe,\r\n    sqopipe_target,\r\n    sqopipe/sqopipe_target AS actual_vs_target\r\nFROM actual_sqopipe\r\nLEFT JOIN sqopipe_target ON\r\nactual_sqopipe.sqopipe_month=sqopipe_target.kpi_month\r\nAND actual_sqopipe.region=sqopipe_target.kpi_region\r\nWHERE region IS NOT null", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.kpi_targets", "model.acton_marketing_data.funnel_report_all_time_sqos"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_sqopipe_to_target"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_sqopipe_to_target", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_sqopipe_to_target.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_sqopipe_to_target.sql", "name": "funnel_report_all_time_sqopipe_to_target", "alias": "funnel_report_all_time_sqopipe_to_target", "checksum": {"name": "sha256", "checksum": "13bfbf46662b5b6c2f95d666986995cfe4d08345deefce877a86858a43b5cf6a"}, "tags": [], "refs": [["kpi_targets"], ["funnel_report_all_time_sqos"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6941135}, "model.acton_marketing_data.funnel_report_current_week_lost": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_source_xf.opportunity_id AS lost_id,\r\n        opp_source_xf.opportunity_name,\r\n        acv_deal_size_usd,\r\n        opp_source_xf.close_date AS close_date,\r\n        billing_country AS country,\r\n        account_global_region\r\n    FROM {{ref('opp_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_source_xf.close_date=date_base_xf.day\r\n    LEFT JOIN {{ref('account_source_xf')}} ON\r\n    opp_source_xf.account_id=account_source_xf.account_id\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n    AND close_date IS NOT null\r\n    AND discovery_date IS NOT null\r\n    AND type = 'New Business'\r\n    AND stage_name IN ('Closed \u2013 Lost No Resources / Budget','Closed \u2013 Lost Not Ready / No Decision','Closed \u2013 Lost Product Deficiency','Closed - Lost to Competitor')\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_lost"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_lost", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_lost.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_lost.sql", "name": "funnel_report_current_week_lost", "alias": "funnel_report_current_week_lost", "checksum": {"name": "sha256", "checksum": "25b64d27937c6c6442ae45f623e89ec3aaad885ea5c5d307482edd85ca61f2e6"}, "tags": [], "refs": [["date_base_xf"], ["opp_source_xf"], ["date_base_xf"], ["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6975348}, "model.acton_marketing_data.funnel_report_all_time_l2m_velocity": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH leads AS (\r\n\r\n    SELECT\r\n        lead_id,\r\n        created_date,\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_leads')}}\r\n\r\n),  mqls AS (\r\n\r\n    SELECT\r\n        mql_id,\r\n        mql_date,\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        channel_bucket,\r\n        industry_bucket\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    \r\n), final AS (\r\n\r\n    SELECT\r\n        mql_id,\r\n        mql_date,\r\n        created_date,\r\n        mqls.global_region,\r\n        mqls.company_size_rev,\r\n        mqls.lead_source,\r\n        mqls.segment,\r\n        mqls.industry,\r\n        mqls.industry_bucket,\r\n        mqls.channel_bucket,\r\n        {{ dbt_utils.datediff(\"created_date\",\"mql_date\",'day')}} AS l2m_velocity\r\n    FROM mqls\r\n    LEFT JOIN leads ON \r\n    mqls.mql_id=leads.lead_id\r\n)\r\n\r\nSELECT\r\n    global_region,\r\n    company_size_rev,\r\n    lead_source,\r\n    segment,\r\n    industry,\r\n    channel_bucket,\r\n    industry_bucket,\r\n    mql_date,\r\n    l2m_velocity\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_l2m_velocity"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_l2m_velocity", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_l2m_velocity.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_l2m_velocity.sql", "name": "funnel_report_all_time_l2m_velocity", "alias": "funnel_report_all_time_l2m_velocity", "checksum": {"name": "sha256", "checksum": "9627fcacd69fe8fff442291793f8f42e0b0fc94e69b18e4b76f8bbf64ca56c60"}, "tags": [], "refs": [["funnel_report_all_time_leads"], ["funnel_report_all_time_mqls"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.6998122}, "model.acton_marketing_data.funnel_report_previous_week_sqls_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        sql_source_ss_xf.sql_id,\r\n        sql_source_ss_xf.created_date AS sql_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('sql_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sql_source_ss_xf.created_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_sqls_ss"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_sqls_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_sqls_ss.sql", "name": "funnel_report_previous_week_sqls_ss", "alias": "funnel_report_previous_week_sqls_ss", "checksum": {"name": "sha256", "checksum": "66aa0c95430136f45e3acf86ea4a28ae1a6a2f18dbe1ab523b13ab6a8293bd97"}, "tags": [], "refs": [["date_base_xf"], ["sql_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.705081}, "model.acton_marketing_data.funnel_report_all_time_all": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        created_date AS date\r\n    FROM {{ref('funnel_report_all_time_leads')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        mql_date\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        sal_date\r\n    FROM {{ref('funnel_report_all_time_sals')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        sql_date\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        sqo_date\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        demo_date\r\n    FROM {{ref('funnel_report_all_time_demo')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        voc_date\r\n    FROM {{ref('funnel_report_all_time_voc')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        closing_date\r\n    FROM {{ref('funnel_report_all_time_closing')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        won_date\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n    UNION ALL\r\n    SELECT DISTINCT\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        lost_date\r\n    FROM {{ref('funnel_report_all_time_lost')}}\r\n    \r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        created_date\r\n    FROM {{ref('funnel_report_all_time_leads')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n\r\n), mql_base AS (\r\n\r\n    SELECT \r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        mql_date\r\n    FROM {{ref('funnel_report_all_time_mqls')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n\r\n), sal_base AS (\r\n\r\n    SELECT \r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region,\r\n        company_size_rev,\r\n        lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        sal_date\r\n    FROM {{ref('funnel_report_all_time_sals')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n\r\n), sql_base AS (\r\n\r\n    SELECT \r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        sql_date\r\n    FROM {{ref('funnel_report_all_time_sqls')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n\r\n), sqo_base AS (\r\n\r\n    SELECT \r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        sqo_date\r\n    FROM {{ref('funnel_report_all_time_sqos')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n\r\n), demo_base AS (\r\n\r\n    SELECT \r\n        COUNT(DISTINCT demo_id) AS demos,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        demo_date\r\n    FROM {{ref('funnel_report_all_time_demo')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n\r\n), voc_base AS (\r\n\r\n    SELECT \r\n        COUNT(DISTINCT voc_id) AS vocs,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        voc_date\r\n    FROM {{ref('funnel_report_all_time_voc')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n\r\n), closing_base AS (\r\n\r\n    SELECT \r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        closing_date\r\n    FROM {{ref('funnel_report_all_time_closing')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n\r\n), won_base AS (\r\n\r\n    SELECT \r\n        COUNT(DISTINCT won_id) AS won,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        won_date\r\n    FROM {{ref('funnel_report_all_time_won')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n\r\n), lost_base AS (\r\n\r\n    SELECT \r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        account_global_region,\r\n        company_size_rev,\r\n        opp_lead_source,\r\n        segment,\r\n        industry,\r\n        industry_bucket,\r\n        channel_bucket,\r\n        lost_date\r\n    FROM {{ref('funnel_report_all_time_lost')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9\r\n\r\n), final AS (\r\n\r\n    SELECT \r\n        base.company_size_rev,\r\n        base.global_region,\r\n        base.lead_source,\r\n        base.segment,\r\n        base.industry,\r\n        base.industry_bucket,\r\n        base.channel_bucket,\r\n        base.date,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(demos) IS null THEN 0\r\n            ELSE SUM(demos) \r\n        END AS demos,\r\n        CASE \r\n            WHEN SUM(vocs) IS null THEN 0\r\n            ELSE SUM(vocs) \r\n        END AS vocs,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost\r\n    FROM base\r\n    LEFT JOIN lead_base ON \r\n    base.company_size_rev=lead_base.company_size_rev\r\n    AND base.global_region=lead_base.global_region\r\n    AND base.lead_source=lead_base.lead_source\r\n    AND base.segment=lead_base.segment\r\n    AND base.industry=lead_base.industry\r\n    AND base.channel_bucket=lead_base.channel_bucket\r\n    AND base.date=lead_base.created_date\r\n    LEFT JOIN mql_base ON\r\n    base.company_size_rev=mql_base.company_size_rev\r\n    AND base.global_region=mql_base.global_region\r\n    AND base.lead_source=mql_base.lead_source\r\n    AND base.segment=mql_base.segment\r\n    AND base.industry=mql_base.industry\r\n    AND base.channel_bucket=mql_base.channel_bucket\r\n    AND base.date=mql_base.mql_date\r\n    LEFT JOIN sal_base ON\r\n    base.company_size_rev=sal_base.company_size_rev\r\n    AND base.global_region=sal_base.global_region\r\n    AND base.lead_source=sal_base.lead_source\r\n    AND base.segment=sal_base.segment\r\n    AND base.industry=sal_base.industry\r\n    AND base.channel_bucket=sal_base.channel_bucket\r\n    AND base.date=sal_base.sal_date\r\n    LEFT JOIN sql_base ON\r\n    base.company_size_rev=sql_base.company_size_rev\r\n    AND base.global_region=sql_base.account_global_region\r\n    AND base.lead_source=sql_base.opp_lead_source\r\n    AND base.segment=sql_base.segment\r\n    AND base.industry=sql_base.industry\r\n    AND base.channel_bucket=sql_base.channel_bucket\r\n    AND base.date=sql_base.sql_date\r\n    LEFT JOIN sqo_base ON\r\n    base.company_size_rev=sqo_base.company_size_rev\r\n    AND base.global_region=sqo_base.account_global_region\r\n    AND base.lead_source=sqo_base.opp_lead_source\r\n    AND base.segment=sqo_base.segment\r\n    AND base.industry=sqo_base.industry\r\n    AND base.channel_bucket=sqo_base.channel_bucket\r\n    AND base.date=sqo_base.sqo_date\r\n    LEFT JOIN demo_base ON\r\n    base.company_size_rev=demo_base.company_size_rev\r\n    AND base.global_region=demo_base.account_global_region\r\n    AND base.lead_source=demo_base.opp_lead_source\r\n    AND base.segment=demo_base.segment\r\n    AND base.industry=demo_base.industry\r\n    AND base.channel_bucket=demo_base.channel_bucket\r\n    AND base.date=demo_base.demo_date\r\n    LEFT JOIN voc_base ON\r\n    base.company_size_rev=voc_base.company_size_rev\r\n    AND base.global_region=voc_base.account_global_region\r\n    AND base.lead_source=voc_base.opp_lead_source\r\n    AND base.segment=voc_base.segment\r\n    AND base.industry=voc_base.industry\r\n    AND base.channel_bucket=voc_base.channel_bucket\r\n    AND base.date=voc_base.voc_date\r\n    LEFT JOIN closing_base ON\r\n    base.company_size_rev=closing_base.company_size_rev\r\n    AND base.global_region=closing_base.account_global_region\r\n    AND base.lead_source=closing_base.opp_lead_source\r\n    AND base.segment=closing_base.segment\r\n    AND base.industry=closing_base.industry\r\n    AND base.channel_bucket=closing_base.channel_bucket\r\n    AND base.date=closing_base.closing_date\r\n    LEFT JOIN won_base ON\r\n    base.company_size_rev=won_base.company_size_rev\r\n    AND base.global_region=won_base.account_global_region\r\n    AND base.lead_source=won_base.opp_lead_source\r\n    AND base.segment=won_base.segment\r\n    AND base.industry=won_base.industry\r\n    AND base.channel_bucket=won_base.channel_bucket\r\n    AND base.date=won_base.won_date\r\n    LEFT JOIN lost_base ON\r\n    base.company_size_rev=lost_base.company_size_rev\r\n    AND base.global_region=lost_base.account_global_region\r\n    AND base.lead_source=lost_base.opp_lead_source\r\n    AND base.segment=lost_base.segment\r\n    AND base.industry=lost_base.industry\r\n    AND base.channel_bucket=lost_base.channel_bucket\r\n    AND base.date=lost_base.lost_date\r\n    GROUP BY 1,2,3,4,5,6,7,8\r\n\r\n)\r\n\r\nSELECT\r\n    company_size_rev,\r\n    global_region,\r\n    lead_source,\r\n    segment,\r\n    industry,\r\n    channel_bucket,\r\n    date,\r\n    leads,\r\n    mqls,\r\n    sals,\r\n    sqls,\r\n    sqos,\r\n    demos,\r\n    vocs,\r\n    closing,\r\n    won,\r\n    lost,\r\n    CASE\r\n        WHEN mqls=0 THEN 0\r\n        ELSE SUM(leads/NULLIF(mqls,0))\r\n    END AS lead_to_mql_conv,\r\n    CASE\r\n        WHEN sals=0 THEN 0\r\n        ELSE SUM(mqls/NULLIF(sals,0))\r\n    END AS mql_to_sal_conv,\r\n    CASE\r\n        WHEN sqls=0 THEN 0\r\n        ELSE SUM(sals/NULLIF(sqls,0))\r\n    END AS sal_to_sql_conv,\r\n    CASE\r\n        WHEN sqos=0 THEN 0\r\n        ELSE SUM(sqls/NULLIF(sqos,0))\r\n    END AS sql_to_sqo_conv,\r\n    CASE\r\n        WHEN demos=0 THEN 0\r\n        ELSE SUM(sqos/NULLIF(demos,0))\r\n    END AS sqo_to_demo_conv,\r\n    CASE\r\n        WHEN vocs=0 THEN 0\r\n        ELSE SUM(demos/NULLIF(vocs,0))\r\n    END AS demo_to_voc_conv,\r\n    CASE\r\n        WHEN closing=0 THEN 0\r\n        ELSE SUM(vocs/NULLIF(closing,0))\r\n    END AS voc_to_closing_conv,\r\n    CASE\r\n        WHEN won=0 THEN 0\r\n        ELSE SUM(closing/NULLIF(won,0))\r\n    END AS closing_to_won_conv,\r\n    CASE\r\n        WHEN lost=0 THEN 0\r\n        ELSE SUM(closing/NULLIF(lost,0))\r\n    END AS closing_to_lost_conv\r\nFROM final\r\nGROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_all_time_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_all"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_all", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_all.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_all.sql", "name": "funnel_report_all_time_all", "alias": "funnel_report_all_time_all", "checksum": {"name": "sha256", "checksum": "246ffac55b2c91c02790e18f2ab61846157cddb3b84862c485cff20e78001194"}, "tags": [], "refs": [["funnel_report_all_time_leads"], ["funnel_report_all_time_mqls"], ["funnel_report_all_time_sals"], ["funnel_report_all_time_sqls"], ["funnel_report_all_time_sqos"], ["funnel_report_all_time_demo"], ["funnel_report_all_time_voc"], ["funnel_report_all_time_closing"], ["funnel_report_all_time_won"], ["funnel_report_all_time_lost"], ["funnel_report_all_time_leads"], ["funnel_report_all_time_mqls"], ["funnel_report_all_time_sals"], ["funnel_report_all_time_sqls"], ["funnel_report_all_time_sqos"], ["funnel_report_all_time_demo"], ["funnel_report_all_time_voc"], ["funnel_report_all_time_closing"], ["funnel_report_all_time_won"], ["funnel_report_all_time_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7076833}, "model.acton_marketing_data.funnel_report_all_time_conversions": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region,\r\n        company_size_rev,\r\n        date,\r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS all_time_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS all_time_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS all_time_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS all_time_sql_to_sqo,\r\n        ROUND(SUM(demos/NULLIF(sqos,0)),2) AS all_time_sqo_to_demo,\r\n        ROUND(SUM(vocs/NULLIF(demos,0)),2) AS all_time_demo_to_voc,\r\n        ROUND(SUM(closing/NULLIF(vocs,0)),2) AS all_time_voc_to_closing,\r\n        ROUND(SUM(won/NULLIF(closing,0)),2) AS all_time_closing_to_won,\r\n        ROUND(SUM(lost/NULLIF(closing,0)),2) AS all_time_closing_to_lost\r\n    FROM {{ref('funnel_report_all_time_all')}}\r\n    GROUP BY 1,2,3\r\n    \r\n)\r\n\r\nSELECT DISTINCT\r\n    global_region,\r\n    company_size_rev,\r\n    date,\r\n    CASE \r\n        WHEN all_time_lead_to_mql IS null THEN 0\r\n        ELSE all_time_lead_to_mql\r\n    END AS all_time_lead_to_mql,\r\n    CASE \r\n        WHEN all_time_mql_to_sal IS null THEN 0\r\n        ELSE all_time_mql_to_sal\r\n    END AS all_time_mql_to_sal,\r\n    CASE \r\n        WHEN all_time_sal_to_sql IS null THEN 0\r\n        ELSE all_time_sal_to_sql\r\n    END AS all_time_sal_to_sql,\r\n    CASE \r\n        WHEN all_time_sql_to_sqo IS null THEN 0\r\n        ELSE all_time_sql_to_sqo\r\n    END AS all_time_sql_to_sqo,\r\n    CASE \r\n        WHEN all_time_sqo_to_demo IS null THEN 0\r\n        ELSE all_time_sqo_to_demo\r\n    END AS all_time_sqo_to_demo,\r\n    CASE \r\n        WHEN all_time_demo_to_voc IS null THEN 0\r\n        ELSE all_time_demo_to_voc\r\n    END AS all_time_demo_to_voc,\r\n    CASE \r\n        WHEN all_time_voc_to_closing IS null THEN 0\r\n        ELSE all_time_voc_to_closing\r\n    END AS all_time_voc_to_closing,\r\n    CASE \r\n        WHEN all_time_closing_to_won IS null THEN 0\r\n        ELSE all_time_closing_to_won\r\n    END AS all_time_closing_to_won,\r\n    CASE \r\n        WHEN all_time_closing_to_lost IS null THEN 0\r\n        ELSE all_time_closing_to_lost\r\n    END AS all_time_closing_to_lost\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_all_time_all"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_conversions"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_conversions", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_conversions.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_conversions.sql", "name": "funnel_report_all_time_conversions", "alias": "funnel_report_all_time_conversions", "checksum": {"name": "sha256", "checksum": "683b907d784fd1ee0c96a80f8f6ecdebbd92afe80f7e1812f0000a5a67876442"}, "tags": [], "refs": [["funnel_report_all_time_all"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7105563}, "model.acton_marketing_data.funnel_report_current_quarter_by_week_emea_xf": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT *\r\n    FROM {{ref('funnel_report_current_quarter_by_week_xf')}}\r\n    WHERE global_region IN ('EUROPE','APJ','AUNZ','ROW')\r\n\r\n)\r\n\r\nSELECT\r\n    week,\r\n    SUM(leads) AS leads,\r\n    SUM(mqls) AS mqls,\r\n    SUM(sals) AS sals,\r\n    SUM(sqls) AS sqls,\r\n    SUM(sqos) AS sqos\r\nFROM base\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_by_week_emea_xf"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_by_week_emea_xf", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_by_week_emea_xf.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_by_week_emea_xf.sql", "name": "funnel_report_current_quarter_by_week_emea_xf", "alias": "funnel_report_current_quarter_by_week_emea_xf", "checksum": {"name": "sha256", "checksum": "77bd038777795bbdc4ee50482ecf08254a5a434de68ca87ccdbdb1b7a51b1763"}, "tags": [], "refs": [["funnel_report_current_quarter_by_week_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7125819}, "model.acton_marketing_data.funnel_report_all_time_leads": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        person_source_xf.person_id AS lead_id,\r\n        CONCAT('https://acton.my.salesforce.com/',person_source_xf.person_id) AS lead_url,\r\n        person_source_xf.marketing_created_date AS created_date,\r\n        company,\r\n        first_name,\r\n        last_name,\r\n        title,\r\n        person_status,\r\n        country,\r\n        is_hand_raiser,\r\n    CASE\r\n        WHEN global_region IS null THEN 'blank'\r\n        ELSE global_region\r\n    END AS global_region,\r\n    CASE\r\n        WHEN company_size_rev IS null THEN 'blank'\r\n        ELSE company_size_rev\r\n    END AS company_size_rev,\r\n    CASE\r\n        WHEN lead_source IS null THEN 'blank'\r\n        ELSE lead_source\r\n    END AS lead_source,\r\n    CASE\r\n        WHEN segment IS null THEN 'blank'\r\n        ELSE segment\r\n    END AS segment,\r\n    CASE\r\n        WHEN industry IS null THEN 'blank'\r\n        ELSE industry\r\n    END AS industry,\r\n    CASE\r\n        WHEN industry_bucket IS null THEN 'blank'\r\n        ELSE industry_bucket\r\n    END AS industry_bucket,\r\n    CASE\r\n        WHEN channel_bucket IS null THEN 'blank'\r\n        ELSE channel_bucket\r\n    END AS channel_bucket,\r\n    CASE\r\n        WHEN offer_asset_name_lead_creation IS null THEN 'blank'\r\n        ELSE offer_asset_name_lead_creation\r\n    END AS offer_asset_name_lead_creation\r\n    FROM {{ref('person_source_xf')}}\r\n    WHERE marketing_created_date IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.person_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_all_time_leads"], "unique_id": "model.acton_marketing_data.funnel_report_all_time_leads", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_all_time_leads.sql", "original_file_path": "models/wow/funnel/funnel_report_all_time_leads.sql", "name": "funnel_report_all_time_leads", "alias": "funnel_report_all_time_leads", "checksum": {"name": "sha256", "checksum": "d78caffd341a4852a62fbde1ae695b5b22f07d335d079964b22cb690b8e0536f"}, "tags": [], "refs": [["person_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7145052}, "model.acton_marketing_data.funnel_report_previous_week_voc": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH previous_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-14\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_voc_source_xf.opportunity_id AS voc_id,\r\n        acv,\r\n        opp_voc_source_xf.negotiation_date AS sqo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_voc_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_voc_source_xf.negotiation_date=date_base_xf.day\r\n    LEFT JOIN previous_week ON \r\n    date_base_xf.week=previous_week.week\r\n    WHERE previous_week.week IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_previous_week_voc"], "unique_id": "model.acton_marketing_data.funnel_report_previous_week_voc", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_previous_week_voc.sql", "original_file_path": "models/wow/funnel/funnel_report_previous_week_voc.sql", "name": "funnel_report_previous_week_voc", "alias": "funnel_report_previous_week_voc", "checksum": {"name": "sha256", "checksum": "886b887b057e6561d11650837f782941a4bdaa78731c4a232cf6c223e48018fd"}, "tags": [], "refs": [["date_base_xf"], ["opp_voc_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7164166}, "model.acton_marketing_data.funnel_report_current_quarter_demo_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_quarter AS (\r\n\r\n    SELECT\r\n        fy,\r\n        quarter \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        opp_demo_source_ss_xf.opportunity_id AS demo_id,\r\n        acv,\r\n        opp_demo_source_ss_xf.discovery_date AS sqo_date,\r\n        country,\r\n        account_global_region\r\n    FROM {{ref('opp_demo_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_demo_source_ss_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN current_quarter ON \r\n    date_base_xf.quarter=current_quarter.quarter\r\n    WHERE current_quarter.quarter IS NOT null\r\n    AND type = 'New Business'\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_quarter_demo_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_quarter_demo_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_quarter_demo_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_quarter_demo_ss.sql", "name": "funnel_report_current_quarter_demo_ss", "alias": "funnel_report_current_quarter_demo_ss", "checksum": {"name": "sha256", "checksum": "86ed8eb16b48b8be6d09a6b8eac967244c63de96cf717963554f1b0e4985b6e5"}, "tags": [], "refs": [["date_base_xf"], ["opp_demo_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7190888}, "model.acton_marketing_data.funnel_report_current_week_mqls_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n\r\n    SELECT\r\n        week\r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n        lead_mql_source_ss_xf.lead_id AS mql_id,\r\n        lead_mql_source_ss_xf.mql_created_date AS mql_date,\r\n        country,\r\n        global_region\r\n    FROM {{ref('lead_mql_source_ss_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    lead_mql_source_ss_xf.mql_created_date=date_base_xf.day\r\n    LEFT JOIN current_week ON \r\n    date_base_xf.week=current_week.week\r\n    WHERE current_week.week IS NOT null\r\n\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_ss_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "funnel", "funnel_report_current_week_mqls_ss"], "unique_id": "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/funnel/funnel_report_current_week_mqls_ss.sql", "original_file_path": "models/wow/funnel/funnel_report_current_week_mqls_ss.sql", "name": "funnel_report_current_week_mqls_ss", "alias": "funnel_report_current_week_mqls_ss", "checksum": {"name": "sha256", "checksum": "d3322fad9b7c30d13c3af7d379997f86df9f31876620a6e413a9239fc0f5cda7"}, "tags": [], "refs": [["date_base_xf"], ["lead_mql_source_ss_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7212582}, "model.acton_marketing_data.hr_l12w_type": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_12_weeks AS (\r\n\r\n    SELECT DISTINCT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day BETWEEN CURRENT_DATE-84 AND CURRENT_DATE-7\r\n\r\n)\r\n\r\nSELECT\r\n    person_id,\r\n    date_base_xf.week AS created_date,\r\n    offer_asset_type_lead_creation,\r\n    person_status\r\nFROM {{ref('person_source_xf')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nperson_source_xf.marketing_created_date=date_base_xf.day\r\nLEFT JOIN last_12_weeks ON \r\ndate_base_xf.week=last_12_weeks.week\r\nWHERE last_12_weeks.week IS NOT null\r\nAND marketing_created_date IS NOT null\r\nAND person_owner_id != '00Ga0000003Nugr' -- AO-Fake Leads\r\nAND email NOT LIKE '%act-on.com'\r\nAND is_hand_raiser = TRUE\r\nAND LOWER(person_status) NOT IN ('current customer','partner','bad data','no fit')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "handraisers", "hr_l12w_type"], "unique_id": "model.acton_marketing_data.hr_l12w_type", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/handraisers/hr_l12w_type.sql", "original_file_path": "models/wow/handraisers/hr_l12w_type.sql", "name": "hr_l12w_type", "alias": "hr_l12w_type", "checksum": {"name": "sha256", "checksum": "011fc650d2c378638bc6d9725fcb69ba3fdccf6350522d867f8dffc0127e1d6a"}, "tags": [], "refs": [["date_base_xf"], ["person_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7235963}, "model.acton_marketing_data.hr_sal_l12w_type": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_12_weeks AS (\r\n\r\n    SELECT DISTINCT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day BETWEEN CURRENT_DATE-84 AND CURRENT_DATE-7\r\n\r\n)\r\n\r\nSELECT\r\n    person_id,\r\n    date_base_xf.week AS created_date,\r\n    offer_asset_type_lead_creation,\r\n    person_status\r\nFROM {{ref('person_source_xf')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nperson_source_xf.marketing_created_date=date_base_xf.day\r\nLEFT JOIN last_12_weeks ON \r\ndate_base_xf.week=last_12_weeks.week\r\nWHERE last_12_weeks.week IS NOT null\r\nAND created_date IS NOT null\r\nAND person_owner_id != '00Ga0000003Nugr' -- AO-Fake Leads\r\nAND email NOT LIKE '%act-on.com'\r\nAND is_hand_raiser = TRUE", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "handraisers", "hr_sal_l12w_type"], "unique_id": "model.acton_marketing_data.hr_sal_l12w_type", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/handraisers/hr_sal_l12w_type.sql", "original_file_path": "models/wow/handraisers/hr_sal_l12w_type.sql", "name": "hr_sal_l12w_type", "alias": "hr_sal_l12w_type", "checksum": {"name": "sha256", "checksum": "7f805bcfa721120bb40d9e9e82147e61657de181c0e601b29baa569d42c8cdb5"}, "tags": [], "refs": [["date_base_xf"], ["person_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.725805}, "model.acton_marketing_data.hr_lw_type": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n)\r\n\r\nSELECT\r\n    person_id,\r\n    marketing_created_date,\r\n    offer_asset_type_lead_creation,\r\n    person_status\r\nFROM {{ref('person_source_xf')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nperson_source_xf.marketing_created_date=date_base_xf.day\r\nLEFT JOIN last_week ON \r\ndate_base_xf.week=last_week.week\r\nWHERE last_week.week IS NOT null\r\nAND marketing_created_date IS NOT null\r\nAND person_owner_id != '00Ga0000003Nugr' -- AO-Fake Leads\r\nAND email NOT LIKE '%act-on.com'\r\nAND is_hand_raiser = TRUE", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "handraisers", "hr_lw_type"], "unique_id": "model.acton_marketing_data.hr_lw_type", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/handraisers/hr_lw_type.sql", "original_file_path": "models/wow/handraisers/hr_lw_type.sql", "name": "hr_lw_type", "alias": "hr_lw_type", "checksum": {"name": "sha256", "checksum": "b8712e25024783ff90780e54592148d666967f2b9ccbf5a7f506b41f69a65c04"}, "tags": [], "refs": [["date_base_xf"], ["person_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7279701}, "model.acton_marketing_data.wow_won_l12w_all": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_12_weeks AS (\r\nSELECT DISTINCT\r\nweek \r\nFROM {{ref('date_base_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.date_base_xf\r\nWHERE day BETWEEN CURRENT_DATE-84 AND CURRENT_DATE-7\r\n\r\n), final AS (\r\n    \r\nSELECT\r\ndate_base_xf.week,\r\nopp_channel_lead_creation,\r\nopp_lead_source,\r\nCOUNT(opportunity_id) AS won,\r\nSUM(acv_deal_size_usd)::integer AS acv\r\nFROM {{ref('opp_source_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.opp_source_xf\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.account_source_xf ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.date_base_xf ON\r\nopp_source_xf.close_date=date_base_xf.day\r\nLEFT JOIN last_12_weeks ON \r\ndate_base_xf.week=last_12_weeks.week\r\nWHERE last_12_weeks.week IS NOT null\r\nAND close_date IS NOT null\r\nAND type = 'New Business'\r\nAND is_won = 'true'\r\nGROUP BY 1,2,3\r\n\r\n)\r\nSELECT\r\nweek,\r\nopp_channel_lead_creation,\r\nopp_lead_source,\r\nSUM(won) AS won,\r\nSUM(acv)::money AS acv\r\nFROM final\r\nGROUP BY 1,2,3", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "won", "wow_won_l12w_all"], "unique_id": "model.acton_marketing_data.wow_won_l12w_all", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/won/wow_won_l12w_all.sql", "original_file_path": "models/wow/won/wow_won_l12w_all.sql", "name": "wow_won_l12w_all", "alias": "wow_won_l12w_all", "checksum": {"name": "sha256", "checksum": "72b6961f07e9de2a6abd4eaa1cd5b2fcacd9bb63ec3c19b2843e6387e2166caf"}, "tags": [], "refs": [["date_base_xf"], ["opp_source_xf"], ["account_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7303324}, "model.acton_marketing_data.wow_lost_l12w_all": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_12_weeks AS (\r\nSELECT DISTINCT\r\nweek \r\nFROM {{ref('date_base_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.date_base_xf\r\nWHERE day BETWEEN CURRENT_DATE-84 AND CURRENT_DATE-7\r\n\r\n),lost_final AS (\r\n\r\nSELECT\r\nclose_date,\r\nopp_channel_lead_creation,\r\nopp_lead_source,\r\nopportunity_id,\r\nacv_deal_size_usd\r\nFROM {{ref('opp_source_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.opp_source_xf\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.account_source_xf ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nWHERE close_date IS NOT null\r\nAND discovery_date IS NOT null\r\nAND type = 'New Business'\r\nAND stage_name IN ('Closed \u2013 Lost No Resources / Budget','Closed \u2013 Lost Not Ready / No Decision','Closed \u2013 Lost Product Deficiency','Closed - Lost to Competitor')\r\n\r\n),final AS (\r\n    \r\nSELECT\r\ndate_base_xf.week,\r\nopp_channel_lead_creation,\r\nopp_lead_source,\r\nCOUNT(opportunity_id) AS won,\r\nSUM(acv_deal_size_usd) AS acv\r\nFROM last_12_weeks\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.date_base_xf ON\r\ndate_base_xf.week=last_12_weeks.week\r\nLEFT JOIN lost_final ON \r\nlost_final.close_date=date_base_xf.day\r\nWHERE last_12_weeks.week IS NOT null\r\nGROUP BY 1,2,3\r\n\r\n)\r\nSELECT\r\nweek,\r\nopp_channel_lead_creation,\r\nopp_lead_source,\r\nSUM(won) AS won,\r\nSUM(acv) AS acv\r\nFROM final\r\nGROUP BY 1,2,3", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "lost", "wow_lost_l12w_all"], "unique_id": "model.acton_marketing_data.wow_lost_l12w_all", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/lost/wow_lost_l12w_all.sql", "original_file_path": "models/wow/lost/wow_lost_l12w_all.sql", "name": "wow_lost_l12w_all", "alias": "wow_lost_l12w_all", "checksum": {"name": "sha256", "checksum": "fb927167fddf9f81345bb2ff3ebf0f80a033256cb96cafbbb778bc05592d8891"}, "tags": [], "refs": [["date_base_xf"], ["opp_source_xf"], ["account_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.732484}, "model.acton_marketing_data.wow_churn_l12w": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_12_weeks AS (\r\nSELECT DISTINCT\r\nweek \r\nFROM {{ref('date_base_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.date_base_xf\r\nWHERE day BETWEEN CURRENT_DATE-84 AND CURRENT_DATE-7\r\n\r\n), churn_final AS (\r\n\r\nSELECT\r\nchurn_date,\r\ncontract_id,\r\narr_loss_amount\r\nFROM {{ref('contract_source_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.contract_source_xf\r\nWHERE 1=1\r\nAND churn_date IS NOT null\r\nAND status = 'Activated'\r\nAND contract_status = 'Cancelled'\r\nAND cs_churn = 'true'\r\n\r\n), final AS (\r\n    \r\nSELECT\r\nlast_12_weeks.week,\r\nCOUNT(DISTINCT contract_id) AS churned,\r\nSUM(arr_loss_amount) AS lost_customer_arr\r\nFROM last_12_weeks\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.date_base_xf ON\r\ndate_base_xf.week=last_12_weeks.week\r\nLEFT JOIN churn_final ON \r\nchurn_final.churn_date=date_base_xf.day\r\nWHERE 1=1\r\nAND last_12_weeks.week IS NOT null\r\nGROUP BY 1\r\n\r\n)\r\n\r\nSELECT\r\nweek,\r\nchurned,\r\nlost_customer_arr\r\nFROM final\r\nORDER BY 1 ASC", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.contract_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "lost", "wow_churn_l12w"], "unique_id": "model.acton_marketing_data.wow_churn_l12w", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/lost/wow_churn_l12w.sql", "original_file_path": "models/wow/lost/wow_churn_l12w.sql", "name": "wow_churn_l12w", "alias": "wow_churn_l12w", "checksum": {"name": "sha256", "checksum": "1fcee49ede69d4cb59bd84996581d528ee7ad291cc67d86c0831719b244d17b2"}, "tags": [], "refs": [["date_base_xf"], ["contract_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.735931}, "model.acton_marketing_data.wow_sqo_lw_companysize": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_week AS (\r\n\r\n    SELECT DISTINCT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day = CURRENT_DATE-7\r\n\r\n), final AS (\r\n    \r\n    SELECT\r\n        opp_source_xf.company_size_rev,\r\n        COUNT(DISTINCT opportunity_id) AS sqos\r\n    FROM {{ref('opp_source_xf')}}\r\n    LEFT JOIN {{ref('account_source_xf')}} ON\r\n    opp_source_xf.account_id=account_source_xf.account_id\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_source_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN last_week ON \r\n    date_base_xf.week=last_week.week\r\n    WHERE last_week.week IS NOT null\r\n    AND discovery_date IS NOT null\r\n    AND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed')\r\n    AND type = 'New Business'\r\n    GROUP BY 1\r\n\r\n)\r\n\r\nSELECT\r\ncompany_size_rev,\r\nSUM(sqos) AS sqos\r\nFROM final\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "sqos", "wow_sqo_lw_companysize"], "unique_id": "model.acton_marketing_data.wow_sqo_lw_companysize", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/sqos/wow_sqo_lw_companysize.sql", "original_file_path": "models/wow/sqos/wow_sqo_lw_companysize.sql", "name": "wow_sqo_lw_companysize", "alias": "wow_sqo_lw_companysize", "checksum": {"name": "sha256", "checksum": "3e588129e891aebf622e9fe1ca161162bf20b19f708dac5f22b7500499436ef2"}, "tags": [], "refs": [["date_base_xf"], ["opp_source_xf"], ["account_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.738219}, "model.acton_marketing_data.wow_sqo_l12w_all": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_12_weeks AS (\r\nSELECT DISTINCT\r\nweek \r\nFROM {{ref('date_base_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.date_base_xf\r\nWHERE day BETWEEN CURRENT_DATE-84 AND CURRENT_DATE-7\r\n\r\n), final AS (\r\n    \r\nSELECT\r\nlast_12_weeks.week,\r\nCOUNT(DISTINCT opportunity_id) AS sqos,\r\nSUM(acv_deal_size_usd) AS acv\r\nFROM {{ref('opp_source_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.opp_source_xf\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.account_source_xf ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.date_base_xf ON\r\nopp_source_xf.discovery_date=date_base_xf.day\r\nLEFT JOIN last_12_weeks ON \r\ndate_base_xf.week=last_12_weeks.week\r\nWHERE last_12_weeks.week IS NOT null\r\nAND discovery_date IS NOT null\r\nAND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed')\r\nAND type = 'New Business'\r\nGROUP BY 1\r\n\r\n)\r\nSELECT\r\nweek,\r\nSUM(sqos) AS sqos,\r\nSUM(acv) AS acv\r\nFROM final\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "sqos", "wow_sqo_l12w_all"], "unique_id": "model.acton_marketing_data.wow_sqo_l12w_all", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/sqos/wow_sqo_l12w_all.sql", "original_file_path": "models/wow/sqos/wow_sqo_l12w_all.sql", "name": "wow_sqo_l12w_all", "alias": "wow_sqo_l12w_all", "checksum": {"name": "sha256", "checksum": "3fa1c4ecd56324c655453c7eec040c1c30157d0cd3ed1b9366a9181ba55f8bd5"}, "tags": [], "refs": [["date_base_xf"], ["opp_source_xf"], ["account_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7407546}, "model.acton_marketing_data.wow_sqo_lw_attribution": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_week AS (\r\nSELECT DISTINCT\r\nweek \r\nFROM {{ref('date_base_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.date_base_xf\r\nWHERE day = CURRENT_DATE-7\r\n\r\n), final AS (\r\n    \r\nSELECT\r\nopp_channel_lead_creation,\r\nopp_medium_lead_creation,\r\nopp_source_lead_creation,\r\nCOUNT(DISTINCT opportunity_id) AS sqls,\r\nSUM(acv_deal_size_usd) AS acv\r\nFROM \"acton\".dbt_actonmarketing.opp_source_xf\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.account_source_xf ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.date_base_xf ON\r\nopp_source_xf.discovery_date=date_base_xf.day\r\nLEFT JOIN last_week ON \r\ndate_base_xf.week=last_week.week\r\nWHERE last_week.week IS NOT null\r\nAND discovery_date IS NOT null\r\nAND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed')\r\nAND type = 'New Business'\r\nGROUP BY 1,2,3\r\n\r\n)\r\nSELECT\r\nopp_channel_lead_creation,\r\nopp_medium_lead_creation,\r\nopp_source_lead_creation,\r\nSUM(sqls) AS sqls,\r\nSUM(acv) AS acv\r\nFROM final\r\nGROUP BY 1,2,3", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "sqos", "wow_sqo_lw_attribution"], "unique_id": "model.acton_marketing_data.wow_sqo_lw_attribution", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/sqos/wow_sqo_lw_attribution.sql", "original_file_path": "models/wow/sqos/wow_sqo_lw_attribution.sql", "name": "wow_sqo_lw_attribution", "alias": "wow_sqo_lw_attribution", "checksum": {"name": "sha256", "checksum": "da3cd8003f3ce6faccd7255b88f0b4c7ffc718db47b4303e940e4bdabf37c4a2"}, "tags": [], "refs": [["date_base_xf"], ["account_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7430258}, "model.acton_marketing_data.wow_sqo_l12w_mm": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_12_weeks AS (\r\nSELECT DISTINCT\r\nweek \r\nFROM {{ref('date_base_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.date_base_xf\r\nWHERE day BETWEEN CURRENT_DATE-84 AND CURRENT_DATE-7\r\n\r\n), final AS (\r\n    \r\nSELECT\r\nlast_12_weeks.week,\r\nCOUNT(DISTINCT opportunity_id) AS sqos\r\nFROM {{ref('opp_source_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.opp_source_xf\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.account_source_xf ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.date_base_xf ON\r\nopp_source_xf.discovery_date=date_base_xf.day\r\nLEFT JOIN last_12_weeks ON \r\ndate_base_xf.week=last_12_weeks.week\r\nWHERE last_12_weeks.week IS NOT null\r\nAND discovery_date IS NOT null\r\nAND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed')\r\nAND opp_source_xf.company_size_rev IN ('Enterprise','Mid-Market')\r\nAND type = 'New Business'\r\nGROUP BY 1\r\n\r\n)\r\nSELECT\r\nweek,\r\nSUM(sqos) AS sqos\r\nFROM final\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "sqos", "wow_sqo_l12w_mm"], "unique_id": "model.acton_marketing_data.wow_sqo_l12w_mm", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/sqos/wow_sqo_l12w_mm.sql", "original_file_path": "models/wow/sqos/wow_sqo_l12w_mm.sql", "name": "wow_sqo_l12w_mm", "alias": "wow_sqo_l12w_mm", "checksum": {"name": "sha256", "checksum": "0f7d73e7f5555cf7da9eaf08f8194cb2bb7a9eaccf3800f598ca1b7e5d5d8b5a"}, "tags": [], "refs": [["date_base_xf"], ["opp_source_xf"], ["account_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.745196}, "model.acton_marketing_data.wow_sqo_lw": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_week AS (\r\nSELECT DISTINCT\r\nweek \r\nFROM {{ref('date_base_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.date_base_xf\r\nWHERE day = CURRENT_DATE-7\r\n\r\n), final AS (\r\n    \r\nSELECT\r\nopp_channel_lead_creation,\r\nopp_lead_source,\r\nCOUNT(DISTINCT opportunity_id) AS sqos,\r\nSUM(acv_deal_size_usd) AS acv\r\nFROM {{ref('opp_source_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.opp_source_xf\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.account_source_xf ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.date_base_xf ON\r\nopp_source_xf.discovery_date=date_base_xf.day\r\nLEFT JOIN last_week ON \r\ndate_base_xf.week=last_week.week\r\nWHERE last_week.week IS NOT null\r\nAND discovery_date IS NOT null\r\nAND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed')\r\nAND type = 'New Business'\r\nGROUP BY 1,2\r\n\r\n)\r\nSELECT\r\nopp_channel_lead_creation,\r\nopp_lead_source,\r\nSUM(sqos) AS sqos,\r\nSUM(acv) AS acv\r\nFROM final\r\nGROUP BY 1,2", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "sqos", "wow_sqo_lw"], "unique_id": "model.acton_marketing_data.wow_sqo_lw", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/sqos/wow_sqo_lw.sql", "original_file_path": "models/wow/sqos/wow_sqo_lw.sql", "name": "wow_sqo_lw", "alias": "wow_sqo_lw", "checksum": {"name": "sha256", "checksum": "1c61736a08b8be85285910e15300a06983a99968aea18f412da913acb2ea0da9"}, "tags": [], "refs": [["date_base_xf"], ["opp_source_xf"], ["account_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.747445}, "model.acton_marketing_data.wow_sqo_lw_dealsize": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_week AS (\r\n\r\n    SELECT DISTINCT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day = CURRENT_DATE-7\r\n\r\n), final AS (\r\n    \r\n    SELECT DISTINCT\r\n        deal_size_range,\r\n        opp_source_xf.company_size_rev,\r\n        COUNT(DISTINCT opportunity_id) AS sqos\r\n    FROM {{ref('opp_source_xf')}}\r\n    LEFT JOIN {{ref('account_source_xf')}} ON\r\n    opp_source_xf.account_id=account_source_xf.account_id\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    opp_source_xf.discovery_date=date_base_xf.day\r\n    LEFT JOIN last_week ON \r\n    date_base_xf.week=last_week.week\r\n    WHERE last_week.week IS NOT null\r\n    AND discovery_date IS NOT null\r\n    AND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed')\r\n    AND type = 'New Business'\r\n    GROUP BY 1,2\r\n\r\n)\r\n\r\nSELECT\r\n    deal_size_range,\r\n    company_size_rev,\r\n    SUM(sqos) AS sqos\r\nFROM final\r\nGROUP BY 1,2\r\nORDER BY 1,2", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "sqos", "wow_sqo_lw_dealsize"], "unique_id": "model.acton_marketing_data.wow_sqo_lw_dealsize", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/sqos/wow_sqo_lw_dealsize.sql", "original_file_path": "models/wow/sqos/wow_sqo_lw_dealsize.sql", "name": "wow_sqo_lw_dealsize", "alias": "wow_sqo_lw_dealsize", "checksum": {"name": "sha256", "checksum": "73d82168fbdeb99c9c9d99fa33fb4a0159a6e3e541d1e1c18e2255456fcf3bf7"}, "tags": [], "refs": [["date_base_xf"], ["opp_source_xf"], ["account_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7498825}, "model.acton_marketing_data.wow_summary_pw2": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT *\r\n    FROM {{ref('wow_summary_pw')}}\r\n\r\n)\r\n\r\nSELECT\r\n    '1.Lead' AS kpi,\r\n    leads AS qty,\r\n    0 AS acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '2.MQL' AS kpi,\r\n    mqls,\r\n    0 AS acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '3.SAL' AS kpi,\r\n    sals,\r\n    0 AS acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '4.SQL' AS kpi,\r\n    sqls,\r\n    0 AS acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '5.SQO' AS kpi,\r\n    sqos,\r\n    sqo_acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '6.Demo' AS kpi,\r\n    demo,\r\n    demo_acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '7.VOC' AS kpi,\r\n    voc,\r\n    voc_acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '8.Closing' AS kpi,\r\n    closing,\r\n    closing_acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '9.Pipeline' AS kpi,\r\n    SUM(sqos+demo+voc+closing),\r\n    SUM(sqo_acv+demo_acv+voc_acv+closing_acv),\r\n    global_region\r\nFROM base\r\nGROUP BY 1,4\r\nUNION ALL\r\nSELECT\r\n    '10.Implement' AS kpi,\r\n    won,\r\n    won_acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '11.Lost' AS kpi,\r\n    lost,\r\n    lost_acv,\r\n    global_region\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_pw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw2"], "unique_id": "model.acton_marketing_data.wow_summary_pw2", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw2.sql", "original_file_path": "models/wow/summary/wow_summary_pw2.sql", "name": "wow_summary_pw2", "alias": "wow_summary_pw2", "checksum": {"name": "sha256", "checksum": "5d7c22dcc1b959bd29748a2ba2d58c1265fe5eb5da3857a15556a9fb92c76b65"}, "tags": [], "refs": [["wow_summary_pw"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.752857}, "model.acton_marketing_data.wow_summary_qtd": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqos')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_demo')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_voc')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_closing')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqos')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_demo')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_voc')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_closing')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nglobal_region,\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_quarter_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_qtd"], "unique_id": "model.acton_marketing_data.wow_summary_qtd", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_qtd.sql", "original_file_path": "models/wow/summary/wow_summary_qtd.sql", "name": "wow_summary_qtd", "alias": "wow_summary_qtd", "checksum": {"name": "sha256", "checksum": "d07874c04208112d3e37d48be705edcbd47d918ea8b1eb2d46a19d409dac7d66"}, "tags": [], "refs": [["funnel_report_current_quarter_leads"], ["funnel_report_current_quarter_mqls"], ["funnel_report_current_quarter_sals"], ["funnel_report_current_quarter_sqls"], ["funnel_report_current_quarter_sqos"], ["funnel_report_current_quarter_demo"], ["funnel_report_current_quarter_voc"], ["funnel_report_current_quarter_closing"], ["funnel_report_current_quarter_won"], ["funnel_report_current_quarter_lost"], ["funnel_report_current_quarter_leads"], ["funnel_report_current_quarter_mqls"], ["funnel_report_current_quarter_sals"], ["funnel_report_current_quarter_sqls"], ["funnel_report_current_quarter_sqos"], ["funnel_report_current_quarter_demo"], ["funnel_report_current_quarter_voc"], ["funnel_report_current_quarter_closing"], ["funnel_report_current_quarter_won"], ["funnel_report_current_quarter_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.754958}, "model.acton_marketing_data.wow_summary_lw_na": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_leads')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_mqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_sals')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqos')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_demo')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_voc')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_closing')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_leads')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_mqls')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_sals')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqls')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqos')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_demo')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_voc')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_closing')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final\r\nWHERE global_region NOT IN ('EUROPE','APJ','AUNZ','ROW')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw_na"], "unique_id": "model.acton_marketing_data.wow_summary_lw_na", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw_na.sql", "original_file_path": "models/wow/summary/wow_summary_lw_na.sql", "name": "wow_summary_lw_na", "alias": "wow_summary_lw_na", "checksum": {"name": "sha256", "checksum": "2e6de81fe3a6d2d3d3137fd6686b8836b87ee63b14728134d071c91aa92216db"}, "tags": [], "refs": [["funnel_report_current_week_leads"], ["funnel_report_current_week_mqls"], ["funnel_report_current_week_sals"], ["funnel_report_current_week_sqls"], ["funnel_report_current_week_sqos"], ["funnel_report_current_week_demo"], ["funnel_report_current_week_voc"], ["funnel_report_current_week_closing"], ["funnel_report_current_week_won"], ["funnel_report_current_week_lost"], ["funnel_report_current_week_leads"], ["funnel_report_current_week_mqls"], ["funnel_report_current_week_sals"], ["funnel_report_current_week_sqls"], ["funnel_report_current_week_sqos"], ["funnel_report_current_week_demo"], ["funnel_report_current_week_voc"], ["funnel_report_current_week_closing"], ["funnel_report_current_week_won"], ["funnel_report_current_week_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7579997}, "model.acton_marketing_data.wow_summary_pw_ss_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS previous_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS previous_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS previous_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS previous_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS previous_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS previous_sqo_to_lost\r\n    FROM {{ref('wow_summary_pw_ss')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_pw_ss"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw_ss_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_pw_ss_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw_ss_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_pw_ss_conversion.sql", "name": "wow_summary_pw_ss_conversion", "alias": "wow_summary_pw_ss_conversion", "checksum": {"name": "sha256", "checksum": "6c3891b1f9bd7144f7973c2791eaaf2573f33e1f01ff1fb8a8e99574eddb4539"}, "tags": [], "refs": [["wow_summary_pw_ss"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7610147}, "model.acton_marketing_data.wow_summary_lw_ss_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS last_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS last_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS last_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS last_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS last_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS last_sqo_to_lost\r\n    FROM {{ref('wow_summary_lw_ss')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_lw_ss"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw_ss_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_lw_ss_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw_ss_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_lw_ss_conversion.sql", "name": "wow_summary_lw_ss_conversion", "alias": "wow_summary_lw_ss_conversion", "checksum": {"name": "sha256", "checksum": "7d33df10ef4a1d3f746d89bd30835ccb290bf2365b7670d55c3ec12125952d16"}, "tags": [], "refs": [["wow_summary_lw_ss"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.762971}, "model.acton_marketing_data.wow_summary_lw2": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT *\r\n    FROM {{ref('wow_summary_lw')}}\r\n\r\n)\r\n\r\nSELECT\r\n    '1.Lead' AS kpi,\r\n    leads AS qty,\r\n    lead_acv AS acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '2.MQL' AS kpi,\r\n    mqls,\r\n    mql_acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '3.SAL' AS kpi,\r\n    sals,\r\n    sal_acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '4.SQL' AS kpi,\r\n    sqls,\r\n    sql_acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '5.SQO' AS kpi,\r\n    sqos,\r\n    sqo_acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '6.Demo' AS kpi,\r\n    demo,\r\n    demo_acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '7.VOC' AS kpi,\r\n    voc,\r\n    voc_acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '8.Closing' AS kpi,\r\n    closing,\r\n    closing_acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '9.Pipeline' AS kpi,\r\n    SUM(sqos+demo+voc+closing),\r\n    SUM(sqo_acv+demo_acv+voc_acv+closing_acv),\r\n    global_region\r\nFROM base\r\nGROUP BY 1,4\r\nUNION ALL\r\nSELECT\r\n    '10.Implement' AS kpi,\r\n    won,\r\n    won_acv,\r\n    global_region\r\nFROM base\r\nUNION ALL\r\nSELECT\r\n    '11.Lost' AS kpi,\r\n    lost,\r\n    lost_acv,\r\n    global_region\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_lw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw2"], "unique_id": "model.acton_marketing_data.wow_summary_lw2", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw2.sql", "original_file_path": "models/wow/summary/wow_summary_lw2.sql", "name": "wow_summary_lw2", "alias": "wow_summary_lw2", "checksum": {"name": "sha256", "checksum": "de7ff1f24c7830917330cf0b51b5f8a0fc4f1be8784ba59f18fbfce6c8d1c83d"}, "tags": [], "refs": [["wow_summary_lw"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7652075}, "model.acton_marketing_data.wow_summary_pw_na": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_leads')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_mqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_sals')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqos')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_demo')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_voc')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_closing')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_leads')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_mqls')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_sals')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqls')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqos')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_demo')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_voc')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_closing')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final\r\nWHERE global_region NOT IN ('EUROPE','APJ','AUNZ','ROW')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw_na"], "unique_id": "model.acton_marketing_data.wow_summary_pw_na", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw_na.sql", "original_file_path": "models/wow/summary/wow_summary_pw_na.sql", "name": "wow_summary_pw_na", "alias": "wow_summary_pw_na", "checksum": {"name": "sha256", "checksum": "acc429fe7044821e46f726dd529b7e4749de502ae195bc02b4dd155110f5526f"}, "tags": [], "refs": [["funnel_report_previous_week_leads"], ["funnel_report_previous_week_mqls"], ["funnel_report_previous_week_sals"], ["funnel_report_previous_week_sqls"], ["funnel_report_previous_week_sqos"], ["funnel_report_previous_week_demo"], ["funnel_report_previous_week_voc"], ["funnel_report_previous_week_closing"], ["funnel_report_previous_week_won"], ["funnel_report_previous_week_lost"], ["funnel_report_previous_week_leads"], ["funnel_report_previous_week_mqls"], ["funnel_report_previous_week_sals"], ["funnel_report_previous_week_sqls"], ["funnel_report_previous_week_sqos"], ["funnel_report_previous_week_demo"], ["funnel_report_previous_week_voc"], ["funnel_report_previous_week_closing"], ["funnel_report_previous_week_won"], ["funnel_report_previous_week_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7674098}, "model.acton_marketing_data.wow_summary_qtd_emea_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS qtd_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS qtd_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS qtd_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS qtd_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS qtd_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS qtd_sqo_to_lost\r\n    FROM {{ref('wow_summary_qtd_emea')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_qtd_emea"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_qtd_emea_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_qtd_emea_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_qtd_emea_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_qtd_emea_conversion.sql", "name": "wow_summary_qtd_emea_conversion", "alias": "wow_summary_qtd_emea_conversion", "checksum": {"name": "sha256", "checksum": "d2d343c795658ed647c7a3fa54a9f6f5ff0c10273d9fe1ed5026a4cc5bd79c5b"}, "tags": [], "refs": [["wow_summary_qtd_emea"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7704833}, "model.acton_marketing_data.wow_summary_lw_na_ss_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS previous_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS previous_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS previous_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS previous_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS previous_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS previous_sqo_to_lost\r\n    FROM {{ref('wow_summary_lw_na_ss')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_lw_na_ss"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw_na_ss_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_lw_na_ss_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw_na_ss_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_lw_na_ss_conversion.sql", "name": "wow_summary_lw_na_ss_conversion", "alias": "wow_summary_lw_na_ss_conversion", "checksum": {"name": "sha256", "checksum": "f2b7119ee0e7eddc1aff86ca49ef7745cd1dc929b48520affb2e4f475b95557d"}, "tags": [], "refs": [["wow_summary_lw_na_ss"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7724156}, "model.acton_marketing_data.wow_summary_pw_emea_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS previous_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS previous_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS previous_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS previous_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS previous_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS previous_sqo_to_lost\r\n    FROM {{ref('wow_summary_pw_emea')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_pw_emea"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw_emea_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_pw_emea_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw_emea_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_pw_emea_conversion.sql", "name": "wow_summary_pw_emea_conversion", "alias": "wow_summary_pw_emea_conversion", "checksum": {"name": "sha256", "checksum": "1b788624f033591726988b9f7061b5c7c3d9ded78852c67ec6c2a8d5d9faa8b9"}, "tags": [], "refs": [["wow_summary_pw_emea"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7747228}, "model.acton_marketing_data.wow_summary_pw_emea_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_leads_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_mqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_sals_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqos_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_demo_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_voc_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_closing_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_leads_ss')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_mqls_ss')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_sals_ss')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqls_ss')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqos_ss')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_demo_ss')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_voc_ss')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_closing_ss')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final\r\nWHERE global_region IN ('EUROPE','APJ','AUNZ','ROW')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw_emea_ss"], "unique_id": "model.acton_marketing_data.wow_summary_pw_emea_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw_emea_ss.sql", "original_file_path": "models/wow/summary/wow_summary_pw_emea_ss.sql", "name": "wow_summary_pw_emea_ss", "alias": "wow_summary_pw_emea_ss", "checksum": {"name": "sha256", "checksum": "5466d3c36e23d01faf332e0dc1d733a1b30392d8770a4114a29ea918079ebb72"}, "tags": [], "refs": [["funnel_report_previous_week_leads_ss"], ["funnel_report_previous_week_mqls_ss"], ["funnel_report_previous_week_sals_ss"], ["funnel_report_previous_week_sqls_ss"], ["funnel_report_previous_week_sqos_ss"], ["funnel_report_previous_week_demo_ss"], ["funnel_report_previous_week_voc_ss"], ["funnel_report_previous_week_closing_ss"], ["funnel_report_previous_week_won"], ["funnel_report_previous_week_lost"], ["funnel_report_previous_week_leads_ss"], ["funnel_report_previous_week_mqls_ss"], ["funnel_report_previous_week_sals_ss"], ["funnel_report_previous_week_sqls_ss"], ["funnel_report_previous_week_sqos_ss"], ["funnel_report_previous_week_demo_ss"], ["funnel_report_previous_week_voc_ss"], ["funnel_report_previous_week_closing_ss"], ["funnel_report_previous_week_won"], ["funnel_report_previous_week_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7767322}, "model.acton_marketing_data.wow_summary_lw": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        0 AS leads_acv,\r\n        0 AS mqls,\r\n        0 AS mql_acv,\r\n        0 AS sals,\r\n        0 AS sal_acv,\r\n        0 AS sqls,\r\n        0 AS sql_acv,\r\n        0 AS sqos,\r\n        0 AS sqo_acv,\r\n        0 AS demo,\r\n        0 AS demo_acv,\r\n        0 AS voc,\r\n        0 AS voc_acv,\r\n        0 AS closing,\r\n        0 AS closing_acv,\r\n        0 AS won,\r\n        0 AS won_acv,\r\n        0 AS lost,\r\n        0 AS lost_acv,\r\n        0 AS churn,\r\n        0 AS churn_acv,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_leads')}}\r\n    GROUP BY 2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS leads_acv,\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        0 AS mql_acv,\r\n        0 AS sals,\r\n        0 AS sal_acv,\r\n        0 AS sqls,\r\n        0 AS sql_acv,\r\n        0 AS sqos,\r\n        0 AS sqo_acv,\r\n        0 AS demo,\r\n        0 AS demo_acv,\r\n        0 AS voc,\r\n        0 AS voc_acv,\r\n        0 AS closing,\r\n        0 AS closing_acv,\r\n        0 AS won,\r\n        0 AS won_acv,\r\n        0 AS lost,\r\n        0 AS lost_acv,\r\n        0 AS churn,\r\n        0 AS churn_acv,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_mqls')}}\r\n    GROUP BY 1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS leads_acv,\r\n        0 AS mqls,\r\n        0 AS mql_acv,\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        0 AS sal_acv,\r\n        0 AS sqls,\r\n        0 AS sql_acv,\r\n        0 AS sqos,\r\n        0 AS sqo_acv,\r\n        0 AS demo,\r\n        0 AS demo_acv,\r\n        0 AS voc,\r\n        0 AS voc_acv,\r\n        0 AS closing,\r\n        0 AS closing_acv,\r\n        0 AS won,\r\n        0 AS won_acv,\r\n        0 AS lost,\r\n        0 AS lost_acv,\r\n        0 AS churn,\r\n        0 AS churn_acv,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_sals')}}\r\n    GROUP BY 1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS leads_acv,\r\n        0 AS mqls,\r\n        0 AS mql_acv,\r\n        0 AS sals,\r\n        0 AS sal_acv,\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        0 AS sql_acv,\r\n        0 AS sqos,\r\n        0 AS sqo_acv,\r\n        0 AS demo,\r\n        0 AS demo_acv,\r\n        0 AS voc,\r\n        0 AS voc_acv,\r\n        0 AS closing,\r\n        0 AS closing_acv,\r\n        0 AS won,\r\n        0 AS won_acv,\r\n        0 AS lost,\r\n        0 AS lost_acv,\r\n        0 AS churn,\r\n        0 AS churn_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqls')}}\r\n    GROUP BY 1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS leads_acv,\r\n        0 AS mqls,\r\n        0 AS mql_acv,\r\n        0 AS sals,\r\n        0 AS sal_acv,\r\n        0 AS sqls,\r\n        0 AS sql_acv,\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        0 AS demo,\r\n        0 AS demo_acv,\r\n        0 AS voc,\r\n        0 AS voc_acv,\r\n        0 AS closing,\r\n        0 AS closing_acv,\r\n        0 AS won,\r\n        0 AS won_acv,\r\n        0 AS lost,\r\n        0 AS lost_acv,\r\n        0 AS churn,\r\n        0 AS churn_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqos')}}\r\n    GROUP BY 1,2,4,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,23\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS leads_acv,\r\n        0 AS mqls,\r\n        0 AS mql_acv,\r\n        0 AS sals,\r\n        0 AS sal_acv,\r\n        0 AS sqls,\r\n        0 AS sql_acv,\r\n        0 AS sqos,\r\n        0 AS sqo_acv,\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        0 AS voc,\r\n        0 AS voc_acv,\r\n        0 AS closing,\r\n        0 AS closing_acv,\r\n        0 AS won,\r\n        0 AS won_acv,\r\n        0 AS lost,\r\n        0 AS lost_acv,\r\n        0 AS churn,\r\n        0 AS churn_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_demo')}}\r\n    GROUP BY 1,2,4,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS leads_acv,\r\n        0 AS mqls,\r\n        0 AS mql_acv,\r\n        0 AS sals,\r\n        0 AS sal_acv,\r\n        0 AS sqls,\r\n        0 AS sql_acv,\r\n        0 AS sqos,\r\n        0 AS sqo_acv,\r\n        0 AS demo,\r\n        0 AS demo_acv,\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        0 AS closing,\r\n        0 AS closing_acv,\r\n        0 AS won,\r\n        0 AS won_acv,\r\n        0 AS lost,\r\n        0 AS lost_acv,\r\n        0 AS churn,\r\n        0 AS churn_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_voc')}}\r\n    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS leads_acv,\r\n        0 AS mqls,\r\n        0 AS mql_acv,\r\n        0 AS sals,\r\n        0 AS sal_acv,\r\n        0 AS sqls,\r\n        0 AS sql_acv,\r\n        0 AS sqos,\r\n        0 AS sqo_acv,\r\n        0 AS demo,\r\n        0 AS demo_acv,\r\n        0 AS voc,\r\n        0 AS voc_acv,\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        0 AS won,\r\n        0 AS won_acv,\r\n        0 AS lost,\r\n        0 AS lost_acv,\r\n        0 AS churn,\r\n        0 AS churn_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_closing')}}\r\n    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS leads_acv,\r\n        0 AS mqls,\r\n        0 AS mql_acv,\r\n        0 AS sals,\r\n        0 AS sal_acv,\r\n        0 AS sqls,\r\n        0 AS sql_acv,\r\n        0 AS sqos,\r\n        0 AS sqo_acv,\r\n        0 AS demo,\r\n        0 AS demo_acv,\r\n        0 AS voc,\r\n        0 AS voc_acv,\r\n        0 AS closing,\r\n        0 AS closing_acv,\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        0 AS lost,\r\n        0 AS lost_acv,\r\n        0 AS churn,\r\n        0 AS churn_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_won')}}\r\n    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS leads_acv,\r\n        0 AS mqls,\r\n        0 AS mql_acv,\r\n        0 AS sals,\r\n        0 AS sal_acv,\r\n        0 AS sqls,\r\n        0 AS sql_acv,\r\n        0 AS demo,\r\n        0 AS demo_acv,\r\n        0 AS voc,\r\n        0 AS voc_acv,\r\n        0 AS closing,\r\n        0 AS closing_acv,\r\n        0 AS sqos,\r\n        0 AS sqo_acv,\r\n        0 AS won,\r\n        0 AS won_acv,\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        0 AS churn,\r\n        0 AS churn_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_lost')}}\r\n    GROUP BY 1,2,4,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23\r\n    UNION ALL\r\n    SELECT\r\n        0 AS leads,\r\n        0 AS leads_acv,\r\n        0 AS mqls,\r\n        0 AS mql_acv,\r\n        0 AS sals,\r\n        0 AS sal_acv,\r\n        0 AS sqls,\r\n        0 AS sql_acv,\r\n        0 AS sqos,\r\n        0 AS sqo_acv,\r\n        0 AS demo,\r\n        0 AS demo_acv,\r\n        0 AS voc,\r\n        0 AS voc_acv,\r\n        0 AS closing,\r\n        0 AS closing_acv,\r\n        0 AS won,\r\n        0 AS won_acv,\r\n        0 AS lost,\r\n        0 AS lost_acv,\r\n        COUNT(DISTINCT contract_id) AS churn,\r\n        SUM(arr_loss_amount) AS churn_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_churn')}}\r\n    GROUP BY 1,2,4,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23\r\n\r\n)\r\n\r\nSELECT\r\n    global_region,\r\n    SUM(leads) AS leads,\r\n    SUM(leads_acv) AS lead_acv,\r\n    SUM(mqls) AS mqls,\r\n    SUM(mql_acv) AS mql_acv,\r\n    SUM(sals) AS sals,\r\n    SUM(sal_acv) AS sal_acv,\r\n    SUM(sqls) AS sqls,\r\n    SUM(sql_acv) AS sql_acv,\r\n    SUM(sqos) AS sqos,\r\n    SUM(sqo_acv) AS sqo_acv,\r\n    SUM(demo) AS demo,\r\n    SUM(demo_acv) AS demo_acv,\r\n    SUM(voc) AS voc,\r\n    SUM(voc_acv) AS voc_acv,\r\n    SUM(closing) AS closing,\r\n    SUM(closing_acv) AS closing_acv,\r\n    SUM(won) AS won,\r\n    SUM(won_acv) AS won_acv,\r\n    SUM(lost) AS lost,\r\n    SUM(lost_acv) AS lost_acv,\r\n    SUM(churn) AS churn,\r\n    SUM(churn_acv) AS churn_acv\r\nFROM base\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_churn"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw"], "unique_id": "model.acton_marketing_data.wow_summary_lw", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw.sql", "original_file_path": "models/wow/summary/wow_summary_lw.sql", "name": "wow_summary_lw", "alias": "wow_summary_lw", "checksum": {"name": "sha256", "checksum": "493cbf7d336017e04e24893106ad403fe837295e85c3b0071c84741cb714236d"}, "tags": [], "refs": [["funnel_report_current_week_leads"], ["funnel_report_current_week_mqls"], ["funnel_report_current_week_sals"], ["funnel_report_current_week_sqls"], ["funnel_report_current_week_sqos"], ["funnel_report_current_week_demo"], ["funnel_report_current_week_voc"], ["funnel_report_current_week_closing"], ["funnel_report_current_week_won"], ["funnel_report_current_week_lost"], ["funnel_report_current_week_churn"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7794812}, "model.acton_marketing_data.wow_summary_qtd_ss_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS qtd_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS qtd_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS qtd_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS qtd_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS qtd_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS qtd_sqo_to_lost\r\n    FROM {{ref('wow_summary_qtd_ss')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_qtd_ss"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_qtd_ss_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_qtd_ss_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_qtd_ss_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_qtd_ss_conversion.sql", "name": "wow_summary_qtd_ss_conversion", "alias": "wow_summary_qtd_ss_conversion", "checksum": {"name": "sha256", "checksum": "686f816b4527c7c91a7be8ba78ed36351e5bcadd85da1b8ad170200b3d3a72f9"}, "tags": [], "refs": [["wow_summary_qtd_ss"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7823374}, "model.acton_marketing_data.wow_summary_lw_emea_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS previous_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS previous_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS previous_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS previous_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS previous_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS previous_sqo_to_lost\r\n    FROM {{ref('wow_summary_lw_emea')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_lw_emea"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw_emea_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_lw_emea_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw_emea_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_lw_emea_conversion.sql", "name": "wow_summary_lw_emea_conversion", "alias": "wow_summary_lw_emea_conversion", "checksum": {"name": "sha256", "checksum": "64776aed414e08d47bc6188a5eb3cc80b7c0a768d4f6e36b252c78a8abff3387"}, "tags": [], "refs": [["wow_summary_lw_emea"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.784278}, "model.acton_marketing_data.wow_summary_conversion_delta": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_week AS (\r\n\r\n    SELECT \r\n        wow_summary_lw_conversion.*,\r\n        'week' AS week\r\n    FROM {{ref('wow_summary_lw_conversion')}}\r\n\r\n), previous_week AS (\r\n\r\n    SELECT \r\n        wow_summary_pw_conversion.*,\r\n        'week' AS week\r\n    FROM {{ref('wow_summary_pw_conversion')}}\r\n\r\n), intermediate AS (\r\n    \r\n    SELECT\r\n        last_lead_to_mql,\r\n        last_mql_to_sal,\r\n        last_sal_to_sql,\r\n        last_sql_to_sqo,\r\n        last_sqo_to_won,\r\n        last_sqo_to_lost,\r\n        previous_lead_to_mql,\r\n        previous_mql_to_sal,\r\n        previous_sal_to_sql,\r\n        previous_sql_to_sqo,\r\n        previous_sqo_to_won,\r\n        previous_sqo_to_lost\r\n    FROM last_week\r\n    LEFT JOIN previous_week ON \r\n    last_week.week=previous_week.week\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        ROUND(SUM(last_lead_to_mql-previous_lead_to_mql),2) AS lead_to_mql_delta,\r\n        ROUND(SUM(last_mql_to_sal-previous_mql_to_sal),2) AS mql_to_sal_delta,\r\n        ROUND(SUM(last_sal_to_sql-previous_sal_to_sql),2) AS sal_to_sql_delta,\r\n        ROUND(SUM(last_sql_to_sqo-previous_sql_to_sqo),2) AS sql_to_sqo_delta,\r\n        ROUND(SUM(last_sqo_to_won-previous_sqo_to_won),2) AS sqo_to_won_delta,\r\n        ROUND(SUM(last_sqo_to_lost-previous_sqo_to_lost),2) AS sqo_to_lost_delta\r\n    FROM intermediate\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_lw_conversion", "model.acton_marketing_data.wow_summary_pw_conversion"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_conversion_delta"], "unique_id": "model.acton_marketing_data.wow_summary_conversion_delta", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_conversion_delta.sql", "original_file_path": "models/wow/summary/wow_summary_conversion_delta.sql", "name": "wow_summary_conversion_delta", "alias": "wow_summary_conversion_delta", "checksum": {"name": "sha256", "checksum": "5cc464a693397544b436ab10252fdecec3ffd9ee8724a64f4a60584990a79907"}, "tags": [], "refs": [["wow_summary_lw_conversion"], ["wow_summary_pw_conversion"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7877831}, "model.acton_marketing_data.wow_summary_pw_na_ss_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS previous_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS previous_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS previous_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS previous_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS previous_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS previous_sqo_to_lost\r\n    FROM {{ref('wow_summary_pw_na_ss')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_pw_na_ss"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw_na_ss_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_pw_na_ss_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw_na_ss_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_pw_na_ss_conversion.sql", "name": "wow_summary_pw_na_ss_conversion", "alias": "wow_summary_pw_na_ss_conversion", "checksum": {"name": "sha256", "checksum": "df0b3c79a471e1302a926f886965119f3793a9d2afd23a23ae8b358bfde9475b"}, "tags": [], "refs": [["wow_summary_pw_na_ss"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7911613}, "model.acton_marketing_data.wow_summary_lw_emea_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_leads_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_mqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_sals_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqos_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_demo_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_voc_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_closing_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_leads_ss')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_mqls_ss')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_sals_ss')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqls_ss')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqos_ss')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_demo_ss')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_voc_ss')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_closing_ss')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final\r\nWHERE global_region IN ('EUROPE','APJ','AUNZ','ROW')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw_emea_ss"], "unique_id": "model.acton_marketing_data.wow_summary_lw_emea_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw_emea_ss.sql", "original_file_path": "models/wow/summary/wow_summary_lw_emea_ss.sql", "name": "wow_summary_lw_emea_ss", "alias": "wow_summary_lw_emea_ss", "checksum": {"name": "sha256", "checksum": "f891afd8e5d088e72150ba906ef8ef6a746227d534b1945d30e788c66116cfa7"}, "tags": [], "refs": [["funnel_report_current_week_leads_ss"], ["funnel_report_current_week_mqls_ss"], ["funnel_report_current_week_sals_ss"], ["funnel_report_current_week_sqls_ss"], ["funnel_report_current_week_sqos_ss"], ["funnel_report_current_week_demo_ss"], ["funnel_report_current_week_voc_ss"], ["funnel_report_current_week_closing_ss"], ["funnel_report_current_week_won"], ["funnel_report_current_week_lost"], ["funnel_report_current_week_leads_ss"], ["funnel_report_current_week_mqls_ss"], ["funnel_report_current_week_sals_ss"], ["funnel_report_current_week_sqls_ss"], ["funnel_report_current_week_sqos_ss"], ["funnel_report_current_week_demo_ss"], ["funnel_report_current_week_voc_ss"], ["funnel_report_current_week_closing_ss"], ["funnel_report_current_week_won"], ["funnel_report_current_week_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7931333}, "model.acton_marketing_data.wow_summary_pw": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_leads')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_mqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_sals')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqos')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_demo')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_voc')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_closing')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_lost')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_churn')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_leads')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_mqls')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_sals')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqls')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqos')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_demo')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_voc')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_closing')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_lost')}}\r\n    GROUP BY 3\r\n\r\n), churn_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT contract_id) AS churn,\r\n        SUM(arr_loss_amount) AS churn_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_churn')}}\r\n    GROUP BY 3\r\n\r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv,\r\n        CASE \r\n            WHEN SUM(churn) IS null THEN 0\r\n            ELSE SUM(churn) \r\n        END AS churn,\r\n        CASE \r\n            WHEN SUM(churn_acv) IS null THEN 0\r\n            ELSE SUM(churn_acv) \r\n        END AS churn_acv    \r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    LEFT JOIN churn_base ON\r\n    base.global_region=churn_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nglobal_region,\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv,\r\nSUM(churn) AS churn,\r\nSUM(churn_acv) AS churn_acv\r\nFROM final\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_churn", "model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_churn"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw"], "unique_id": "model.acton_marketing_data.wow_summary_pw", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw.sql", "original_file_path": "models/wow/summary/wow_summary_pw.sql", "name": "wow_summary_pw", "alias": "wow_summary_pw", "checksum": {"name": "sha256", "checksum": "4c5e6acb88713db0f27d05a67e8f07385eaf8adda06a4fdb23039f1ce1ec09e4"}, "tags": [], "refs": [["funnel_report_previous_week_leads"], ["funnel_report_previous_week_mqls"], ["funnel_report_previous_week_sals"], ["funnel_report_previous_week_sqls"], ["funnel_report_previous_week_sqos"], ["funnel_report_previous_week_demo"], ["funnel_report_previous_week_voc"], ["funnel_report_previous_week_closing"], ["funnel_report_previous_week_won"], ["funnel_report_previous_week_lost"], ["funnel_report_previous_week_churn"], ["funnel_report_previous_week_leads"], ["funnel_report_previous_week_mqls"], ["funnel_report_previous_week_sals"], ["funnel_report_previous_week_sqls"], ["funnel_report_previous_week_sqos"], ["funnel_report_previous_week_demo"], ["funnel_report_previous_week_voc"], ["funnel_report_previous_week_closing"], ["funnel_report_previous_week_won"], ["funnel_report_previous_week_lost"], ["funnel_report_previous_week_churn"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.796171}, "model.acton_marketing_data.wow_summary_qtd_na": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqos')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_demo')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_voc')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_closing')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqos')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_demo')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_voc')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_closing')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final\r\nWHERE global_region NOT IN ('EUROPE','APJ','AUNZ','ROW')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_quarter_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_qtd_na"], "unique_id": "model.acton_marketing_data.wow_summary_qtd_na", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_qtd_na.sql", "original_file_path": "models/wow/summary/wow_summary_qtd_na.sql", "name": "wow_summary_qtd_na", "alias": "wow_summary_qtd_na", "checksum": {"name": "sha256", "checksum": "1818c51223e880c711f1fc530aab050a80d13bc6c2c0f9086558b79f471beee7"}, "tags": [], "refs": [["funnel_report_current_quarter_leads"], ["funnel_report_current_quarter_mqls"], ["funnel_report_current_quarter_sals"], ["funnel_report_current_quarter_sqls"], ["funnel_report_current_quarter_sqos"], ["funnel_report_current_quarter_demo"], ["funnel_report_current_quarter_voc"], ["funnel_report_current_quarter_closing"], ["funnel_report_current_quarter_won"], ["funnel_report_current_quarter_lost"], ["funnel_report_current_quarter_leads"], ["funnel_report_current_quarter_mqls"], ["funnel_report_current_quarter_sals"], ["funnel_report_current_quarter_sqls"], ["funnel_report_current_quarter_sqos"], ["funnel_report_current_quarter_demo"], ["funnel_report_current_quarter_voc"], ["funnel_report_current_quarter_closing"], ["funnel_report_current_quarter_won"], ["funnel_report_current_quarter_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.7993681}, "model.acton_marketing_data.wow_summary_pw_na_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_leads_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_mqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_sals_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqos_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_demo_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_voc_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_closing_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_leads_ss')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_mqls_ss')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_sals_ss')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqls_ss')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqos_ss')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_demo_ss')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_voc_ss')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_closing_ss')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final\r\nWHERE global_region NOT IN ('EUROPE','APJ','AUNZ','ROW')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw_na_ss"], "unique_id": "model.acton_marketing_data.wow_summary_pw_na_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw_na_ss.sql", "original_file_path": "models/wow/summary/wow_summary_pw_na_ss.sql", "name": "wow_summary_pw_na_ss", "alias": "wow_summary_pw_na_ss", "checksum": {"name": "sha256", "checksum": "8d6c5653550e2869aeff7aee0837db6a72a5ee9f9aeb44677bf68b504e7ec035"}, "tags": [], "refs": [["funnel_report_previous_week_leads_ss"], ["funnel_report_previous_week_mqls_ss"], ["funnel_report_previous_week_sals_ss"], ["funnel_report_previous_week_sqls_ss"], ["funnel_report_previous_week_sqos_ss"], ["funnel_report_previous_week_demo_ss"], ["funnel_report_previous_week_voc_ss"], ["funnel_report_previous_week_closing_ss"], ["funnel_report_previous_week_won"], ["funnel_report_previous_week_lost"], ["funnel_report_previous_week_leads_ss"], ["funnel_report_previous_week_mqls_ss"], ["funnel_report_previous_week_sals_ss"], ["funnel_report_previous_week_sqls_ss"], ["funnel_report_previous_week_sqos_ss"], ["funnel_report_previous_week_demo_ss"], ["funnel_report_previous_week_voc_ss"], ["funnel_report_previous_week_closing_ss"], ["funnel_report_previous_week_won"], ["funnel_report_previous_week_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8023632}, "model.acton_marketing_data.wow_summary_lw_conversion2": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls)/NULLIF(SUM(leads),0),2) AS weekly_conv,\r\n        '2.MQL' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_lw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sals)/NULLIF(SUM(mqls),0),2) AS weekly_conv,\r\n        '3.SAL' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_lw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sqls)/NULLIF(SUM(sals),0),2) AS weekly_conv,\r\n        '4.SQL' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_lw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sqos)/NULLIF(SUM(sqls),0),2) AS weekly_conv,\r\n        '5.SQO' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_lw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT      \r\n        ROUND(SUM(won_acv)/NULLIF(SUM(sqo_acv),0),2) AS weekly_conv,\r\n        '10.Implement' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_lw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT \r\n        ROUND(SUM(mqls)/NULLIF(SUM(leads),0),2) AS weekly_conv,\r\n        '2.MQL' AS kpi,\r\n        'Global' AS global_region\r\n    FROM {{ref('wow_summary_lw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sals)/NULLIF(SUM(mqls),0),2) AS weekly_conv,\r\n        '3.SAL' AS kpi,\r\n        'Global' AS global_region\r\n    FROM {{ref('wow_summary_lw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sqls)/NULLIF(SUM(sals),0),2) AS weekly_conv,\r\n        '4.SQL' AS kpi,\r\n        'Global' AS global_region\r\n    FROM {{ref('wow_summary_lw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sqos)/NULLIF(SUM(sqls),0),2) AS weekly_conv,\r\n        '5.SQO' AS kpi,\r\n        'Global' AS global_region\r\n    FROM {{ref('wow_summary_lw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT      \r\n        ROUND(SUM(won_acv)/NULLIF(SUM(sqo_acv),0),2) AS weekly_conv,\r\n        '10.Implement' AS kpi,\r\n        'Global' AS global_region\r\n    FROM {{ref('wow_summary_lw')}}\r\n    GROUP BY 3\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw_conversion2"], "unique_id": "model.acton_marketing_data.wow_summary_lw_conversion2", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw_conversion2.sql", "original_file_path": "models/wow/summary/wow_summary_lw_conversion2.sql", "name": "wow_summary_lw_conversion2", "alias": "wow_summary_lw_conversion2", "checksum": {"name": "sha256", "checksum": "83980b888a201ad3618063afb9c56337d57ccf79a6194b4ce56dc3e6e86ad200"}, "tags": [], "refs": [["wow_summary_lw"], ["wow_summary_lw"], ["wow_summary_lw"], ["wow_summary_lw"], ["wow_summary_lw"], ["wow_summary_lw"], ["wow_summary_lw"], ["wow_summary_lw"], ["wow_summary_lw"], ["wow_summary_lw"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8052044}, "model.acton_marketing_data.wow_summary_lw_emea": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_leads')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_mqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_sals')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqos')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_demo')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_voc')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_closing')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_leads')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_mqls')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_sals')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqls')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqos')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_demo')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_voc')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_closing')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final\r\nWHERE global_region IN ('EUROPE','APJ','AUNZ','ROW')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw_emea"], "unique_id": "model.acton_marketing_data.wow_summary_lw_emea", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw_emea.sql", "original_file_path": "models/wow/summary/wow_summary_lw_emea.sql", "name": "wow_summary_lw_emea", "alias": "wow_summary_lw_emea", "checksum": {"name": "sha256", "checksum": "614040908a9f2e92bc925bc1820a08b5799dfa1e8c6bf3013dab6a72fb0b3203"}, "tags": [], "refs": [["funnel_report_current_week_leads"], ["funnel_report_current_week_mqls"], ["funnel_report_current_week_sals"], ["funnel_report_current_week_sqls"], ["funnel_report_current_week_sqos"], ["funnel_report_current_week_demo"], ["funnel_report_current_week_voc"], ["funnel_report_current_week_closing"], ["funnel_report_current_week_won"], ["funnel_report_current_week_lost"], ["funnel_report_current_week_leads"], ["funnel_report_current_week_mqls"], ["funnel_report_current_week_sals"], ["funnel_report_current_week_sqls"], ["funnel_report_current_week_sqos"], ["funnel_report_current_week_demo"], ["funnel_report_current_week_voc"], ["funnel_report_current_week_closing"], ["funnel_report_current_week_won"], ["funnel_report_current_week_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8079948}, "model.acton_marketing_data.wow_summary_pw_na_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS previous_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS previous_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS previous_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS previous_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS previous_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS previous_sqo_to_lost\r\n    FROM {{ref('wow_summary_pw_na')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_pw_na"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw_na_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_pw_na_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw_na_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_pw_na_conversion.sql", "name": "wow_summary_pw_na_conversion", "alias": "wow_summary_pw_na_conversion", "checksum": {"name": "sha256", "checksum": "5f0055243980c60da3d44e5c070d804a2c85e9341ca13c9a476b2912fe36d40e"}, "tags": [], "refs": [["wow_summary_pw_na"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8110557}, "model.acton_marketing_data.wow_summary_qtd_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqos_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_demo_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_voc_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_closing_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads_ss')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls_ss')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals_ss')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls_ss')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqos_ss')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_demo_ss')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_voc_ss')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_closing_ss')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqos_ss", "model.acton_marketing_data.funnel_report_current_quarter_demo_ss", "model.acton_marketing_data.funnel_report_current_quarter_voc_ss", "model.acton_marketing_data.funnel_report_current_quarter_closing_ss", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqos_ss", "model.acton_marketing_data.funnel_report_current_quarter_demo_ss", "model.acton_marketing_data.funnel_report_current_quarter_voc_ss", "model.acton_marketing_data.funnel_report_current_quarter_closing_ss", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_quarter_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_qtd_ss"], "unique_id": "model.acton_marketing_data.wow_summary_qtd_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_qtd_ss.sql", "original_file_path": "models/wow/summary/wow_summary_qtd_ss.sql", "name": "wow_summary_qtd_ss", "alias": "wow_summary_qtd_ss", "checksum": {"name": "sha256", "checksum": "fc4ce1a5a1204aebc0c3b59940e229570a46187bcd0615a3b208fa0cb1bc605b"}, "tags": [], "refs": [["funnel_report_current_quarter_leads_ss"], ["funnel_report_current_quarter_mqls_ss"], ["funnel_report_current_quarter_sals_ss"], ["funnel_report_current_quarter_sqls_ss"], ["funnel_report_current_quarter_sqos_ss"], ["funnel_report_current_quarter_demo_ss"], ["funnel_report_current_quarter_voc_ss"], ["funnel_report_current_quarter_closing_ss"], ["funnel_report_current_quarter_won"], ["funnel_report_current_quarter_lost"], ["funnel_report_current_quarter_leads_ss"], ["funnel_report_current_quarter_mqls_ss"], ["funnel_report_current_quarter_sals_ss"], ["funnel_report_current_quarter_sqls_ss"], ["funnel_report_current_quarter_sqos_ss"], ["funnel_report_current_quarter_demo_ss"], ["funnel_report_current_quarter_voc_ss"], ["funnel_report_current_quarter_closing_ss"], ["funnel_report_current_quarter_won"], ["funnel_report_current_quarter_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8138692}, "model.acton_marketing_data.wow_summary_pw_conversion2": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls)/NULLIF(SUM(leads),0),2) AS weekly_conv,\r\n        '2.MQL' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_pw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sals)/NULLIF(SUM(mqls),0),2) AS weekly_conv,\r\n        '3.SAL' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_pw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sqls)/NULLIF(SUM(sals),0),2) AS weekly_conv,\r\n        '4.SQL' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_pw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sqos)/NULLIF(SUM(sqls),0),2) AS weekly_conv,\r\n        '5.SQO' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_pw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT      \r\n        ROUND(SUM(won_acv)/NULLIF(SUM(sqo_acv),0),2) AS weekly_conv,\r\n        '10.Implement' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_pw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT \r\n        ROUND(SUM(mqls)/NULLIF(SUM(leads),0),2) AS weekly_conv,\r\n        '2.MQL' AS kpi,\r\n        'Global' AS global_region\r\n    FROM {{ref('wow_summary_pw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sals)/NULLIF(SUM(mqls),0),2) AS weekly_conv,\r\n        '3.SAL' AS kpi,\r\n        'Global' AS global_region\r\n    FROM {{ref('wow_summary_pw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sqls)/NULLIF(SUM(sals),0),2) AS weekly_conv,\r\n        '4.SQL' AS kpi,\r\n        'Global' AS global_region\r\n    FROM {{ref('wow_summary_pw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sqos)/NULLIF(SUM(sqls),0),2) AS weekly_conv,\r\n        '5.SQO' AS kpi,\r\n        'Global' AS global_region\r\n    FROM {{ref('wow_summary_pw')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT      \r\n        ROUND(SUM(won_acv)/NULLIF(SUM(sqo_acv),0),2) AS weekly_conv,\r\n        '10.Implement' AS kpi,\r\n        'Global' AS global_region\r\n    FROM {{ref('wow_summary_pw')}}\r\n    GROUP BY 3\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw_conversion2"], "unique_id": "model.acton_marketing_data.wow_summary_pw_conversion2", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw_conversion2.sql", "original_file_path": "models/wow/summary/wow_summary_pw_conversion2.sql", "name": "wow_summary_pw_conversion2", "alias": "wow_summary_pw_conversion2", "checksum": {"name": "sha256", "checksum": "07c160608a1f697d564e1407dd6d265c6e802c151a0b5bc4773c085c4244546c"}, "tags": [], "refs": [["wow_summary_pw"], ["wow_summary_pw"], ["wow_summary_pw"], ["wow_summary_pw"], ["wow_summary_pw"], ["wow_summary_pw"], ["wow_summary_pw"], ["wow_summary_pw"], ["wow_summary_pw"], ["wow_summary_pw"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8189745}, "model.acton_marketing_data.wow_summary_qtd_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS qtd_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS qtd_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS qtd_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS qtd_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS qtd_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS qtd_sqo_to_lost\r\n    FROM {{ref('wow_summary_qtd')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_qtd"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_qtd_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_qtd_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_qtd_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_qtd_conversion.sql", "name": "wow_summary_qtd_conversion", "alias": "wow_summary_qtd_conversion", "checksum": {"name": "sha256", "checksum": "865895cbfb686cb5dfe5d046309ea753c1b12a2ba91591c07bd079e92d7925de"}, "tags": [], "refs": [["wow_summary_qtd"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8217382}, "model.acton_marketing_data.wow_summary_pw_emea": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_leads')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_mqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_sals')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqos')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_demo')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_voc')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_closing')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_leads')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_mqls')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_sals')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqls')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqos')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_demo')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_voc')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_closing')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final\r\nWHERE global_region IN ('EUROPE','APJ','AUNZ','ROW')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw_emea"], "unique_id": "model.acton_marketing_data.wow_summary_pw_emea", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw_emea.sql", "original_file_path": "models/wow/summary/wow_summary_pw_emea.sql", "name": "wow_summary_pw_emea", "alias": "wow_summary_pw_emea", "checksum": {"name": "sha256", "checksum": "3fbc9c067fde8fdf464af9e38d89747de1ffc591aac097bf0cb438448ceb55fc"}, "tags": [], "refs": [["funnel_report_previous_week_leads"], ["funnel_report_previous_week_mqls"], ["funnel_report_previous_week_sals"], ["funnel_report_previous_week_sqls"], ["funnel_report_previous_week_sqos"], ["funnel_report_previous_week_demo"], ["funnel_report_previous_week_voc"], ["funnel_report_previous_week_closing"], ["funnel_report_previous_week_won"], ["funnel_report_previous_week_lost"], ["funnel_report_previous_week_leads"], ["funnel_report_previous_week_mqls"], ["funnel_report_previous_week_sals"], ["funnel_report_previous_week_sqls"], ["funnel_report_previous_week_sqos"], ["funnel_report_previous_week_demo"], ["funnel_report_previous_week_voc"], ["funnel_report_previous_week_closing"], ["funnel_report_previous_week_won"], ["funnel_report_previous_week_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.823792}, "model.acton_marketing_data.wow_summary_lw_na_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS previous_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS previous_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS previous_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS previous_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS previous_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS previous_sqo_to_lost\r\n    FROM {{ref('wow_summary_lw_na')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_lw_na"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw_na_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_lw_na_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw_na_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_lw_na_conversion.sql", "name": "wow_summary_lw_na_conversion", "alias": "wow_summary_lw_na_conversion", "checksum": {"name": "sha256", "checksum": "dc164eebe863ac5e67b8b11d00437974dc09e268c872fd066497e070b318b581"}, "tags": [], "refs": [["wow_summary_lw_na"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.827282}, "model.acton_marketing_data.wow_summary_lw_na_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_leads_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_mqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_sals_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqos_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_demo_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_voc_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_closing_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_leads_ss')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_mqls_ss')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_sals_ss')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqls_ss')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqos_ss')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_demo_ss')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_voc_ss')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_closing_ss')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final\r\nWHERE global_region NOT IN ('EUROPE','APJ','AUNZ','ROW')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw_na_ss"], "unique_id": "model.acton_marketing_data.wow_summary_lw_na_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw_na_ss.sql", "original_file_path": "models/wow/summary/wow_summary_lw_na_ss.sql", "name": "wow_summary_lw_na_ss", "alias": "wow_summary_lw_na_ss", "checksum": {"name": "sha256", "checksum": "bce9daeb1df26386808f9b98007ef11d6ed4d6edae9ad6aed358298911e04137"}, "tags": [], "refs": [["funnel_report_current_week_leads_ss"], ["funnel_report_current_week_mqls_ss"], ["funnel_report_current_week_sals_ss"], ["funnel_report_current_week_sqls_ss"], ["funnel_report_current_week_sqos_ss"], ["funnel_report_current_week_demo_ss"], ["funnel_report_current_week_voc_ss"], ["funnel_report_current_week_closing_ss"], ["funnel_report_current_week_won"], ["funnel_report_current_week_lost"], ["funnel_report_current_week_leads_ss"], ["funnel_report_current_week_mqls_ss"], ["funnel_report_current_week_sals_ss"], ["funnel_report_current_week_sqls_ss"], ["funnel_report_current_week_sqos_ss"], ["funnel_report_current_week_demo_ss"], ["funnel_report_current_week_voc_ss"], ["funnel_report_current_week_closing_ss"], ["funnel_report_current_week_won"], ["funnel_report_current_week_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8306556}, "model.acton_marketing_data.wow_summary_qtd_na_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS qtd_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS qtd_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS qtd_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS qtd_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS qtd_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS qtd_sqo_to_lost\r\n    FROM {{ref('wow_summary_qtd_na')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_qtd_na"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_qtd_na_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_qtd_na_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_qtd_na_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_qtd_na_conversion.sql", "name": "wow_summary_qtd_na_conversion", "alias": "wow_summary_qtd_na_conversion", "checksum": {"name": "sha256", "checksum": "ae205bf95bb21a972a0e5e0899a71bcd88166154292cd47fac72f649447d8ab5"}, "tags": [], "refs": [["wow_summary_qtd_na"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8341777}, "model.acton_marketing_data.wow_summary_pw_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS previous_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS previous_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS previous_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS previous_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS previous_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS previous_sqo_to_lost,\r\n        ROUND(SUM(churn/NULLIF(sqos,0)),2) AS last_sqo_to_churn\r\n    FROM {{ref('wow_summary_pw')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_pw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_pw_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_pw_conversion.sql", "name": "wow_summary_pw_conversion", "alias": "wow_summary_pw_conversion", "checksum": {"name": "sha256", "checksum": "7af63f4e1373a05b7676df1574ce302dceac9a2c80842ac76ce1eb40f5a3f0b0"}, "tags": [], "refs": [["wow_summary_pw"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8373432}, "model.acton_marketing_data.wow_summary_pw_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_leads_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_mqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_sals_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqos_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_demo_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_voc_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_closing_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_leads_ss')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_mqls_ss')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_previous_week_sals_ss')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqls_ss')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_sqos_ss')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_demo_ss')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_voc_ss')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_closing_ss')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_previous_week_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw_ss"], "unique_id": "model.acton_marketing_data.wow_summary_pw_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw_ss.sql", "original_file_path": "models/wow/summary/wow_summary_pw_ss.sql", "name": "wow_summary_pw_ss", "alias": "wow_summary_pw_ss", "checksum": {"name": "sha256", "checksum": "4781e2f0c310e98d4881a0b9d820559e5261c981636e934b7db64feec8c73fd6"}, "tags": [], "refs": [["funnel_report_previous_week_leads_ss"], ["funnel_report_previous_week_mqls_ss"], ["funnel_report_previous_week_sals_ss"], ["funnel_report_previous_week_sqls_ss"], ["funnel_report_previous_week_sqos_ss"], ["funnel_report_previous_week_demo_ss"], ["funnel_report_previous_week_voc_ss"], ["funnel_report_previous_week_closing_ss"], ["funnel_report_previous_week_won"], ["funnel_report_previous_week_lost"], ["funnel_report_previous_week_leads_ss"], ["funnel_report_previous_week_mqls_ss"], ["funnel_report_previous_week_sals_ss"], ["funnel_report_previous_week_sqls_ss"], ["funnel_report_previous_week_sqos_ss"], ["funnel_report_previous_week_demo_ss"], ["funnel_report_previous_week_voc_ss"], ["funnel_report_previous_week_closing_ss"], ["funnel_report_previous_week_won"], ["funnel_report_previous_week_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8394918}, "model.acton_marketing_data.wow_summary_lw_emea_ss_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS previous_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS previous_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS previous_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS previous_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS previous_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS previous_sqo_to_lost\r\n    FROM {{ref('wow_summary_lw_emea_ss')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_lw_emea_ss"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw_emea_ss_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_lw_emea_ss_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw_emea_ss_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_lw_emea_ss_conversion.sql", "name": "wow_summary_lw_emea_ss_conversion", "alias": "wow_summary_lw_emea_ss_conversion", "checksum": {"name": "sha256", "checksum": "35f818f09048afed9d0e387ae064090266b2aeac8c85fe9b4e1696d34c335441"}, "tags": [], "refs": [["wow_summary_lw_emea_ss"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8428338}, "model.acton_marketing_data.wow_summary_qtd_emea": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqos')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_demo')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_voc')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_closing')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_leads')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_mqls')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_quarter_sals')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqls')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_sqos')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_demo')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_voc')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_closing')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_quarter_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final\r\nWHERE global_region IN ('EUROPE','APJ','AUNZ','ROW')", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_quarter_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_qtd_emea"], "unique_id": "model.acton_marketing_data.wow_summary_qtd_emea", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_qtd_emea.sql", "original_file_path": "models/wow/summary/wow_summary_qtd_emea.sql", "name": "wow_summary_qtd_emea", "alias": "wow_summary_qtd_emea", "checksum": {"name": "sha256", "checksum": "54bea4982460e1154d935fa41453d583e67627b20c6b002ac79852ccbd053988"}, "tags": [], "refs": [["funnel_report_current_quarter_leads"], ["funnel_report_current_quarter_mqls"], ["funnel_report_current_quarter_sals"], ["funnel_report_current_quarter_sqls"], ["funnel_report_current_quarter_sqos"], ["funnel_report_current_quarter_demo"], ["funnel_report_current_quarter_voc"], ["funnel_report_current_quarter_closing"], ["funnel_report_current_quarter_won"], ["funnel_report_current_quarter_lost"], ["funnel_report_current_quarter_leads"], ["funnel_report_current_quarter_mqls"], ["funnel_report_current_quarter_sals"], ["funnel_report_current_quarter_sqls"], ["funnel_report_current_quarter_sqos"], ["funnel_report_current_quarter_demo"], ["funnel_report_current_quarter_voc"], ["funnel_report_current_quarter_closing"], ["funnel_report_current_quarter_won"], ["funnel_report_current_quarter_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8449461}, "model.acton_marketing_data.wow_summary_qtd_conversion2": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS quarterly_conv,\r\n        '2.MQL' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_qtd')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS quarterly_conv,\r\n        '3.SAL' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_qtd')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS quarterly_conv,\r\n        '4.SQL' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_qtd')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS quarterly_conv,\r\n        '5.SQO' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_qtd')}}\r\n    GROUP BY 3\r\n    UNION ALL\r\n    SELECT      \r\n        ROUND(SUM(won_acv/NULLIF(sqo_acv,0)),2) AS quarterly_conv,\r\n        '10.Implement' AS kpi,\r\n        global_region\r\n    FROM {{ref('wow_summary_qtd')}}\r\n    GROUP BY 3\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_qtd_conversion2"], "unique_id": "model.acton_marketing_data.wow_summary_qtd_conversion2", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_qtd_conversion2.sql", "original_file_path": "models/wow/summary/wow_summary_qtd_conversion2.sql", "name": "wow_summary_qtd_conversion2", "alias": "wow_summary_qtd_conversion2", "checksum": {"name": "sha256", "checksum": "5e6d50d3de3903ffc5789ab1ca6e816cda689d71cb6186a6d39e241220ba2ccb"}, "tags": [], "refs": [["wow_summary_qtd"], ["wow_summary_qtd"], ["wow_summary_qtd"], ["wow_summary_qtd"], ["wow_summary_qtd"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8479655}, "model.acton_marketing_data.wow_summary_lw_ss": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base_prep AS (\r\n\r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_leads_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_mqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_sals_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqls_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqos_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_demo_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_voc_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_closing_ss')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_won')}}\r\n    UNION ALL \r\n    SELECT DISTINCT\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_lost')}}\r\n\r\n), base AS (\r\n\r\n    SELECT DISTINCT\r\n    global_region\r\n    FROM base_prep\r\n\r\n), lead_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lead_id) AS leads,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_leads_ss')}}\r\n    GROUP BY 2\r\n\r\n), mql_base AS (\r\n    \r\n    SELECT\r\n        COUNT(DISTINCT mql_id) AS mqls,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_mqls_ss')}}\r\n    GROUP BY 2\r\n\r\n), sal_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sal_id) AS sals,\r\n        global_region\r\n    FROM {{ref('funnel_report_current_week_sals_ss')}}\r\n    GROUP BY 2\r\n\r\n), sql_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sql_id) AS sqls,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqls_ss')}}\r\n    GROUP BY 2\r\n   \r\n), sqo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT sqo_id) AS sqos,\r\n        SUM(acv) AS sqo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_sqos_ss')}}\r\n    GROUP BY 3\r\n   \r\n), demo_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT demo_id) AS demo,\r\n        SUM(acv) AS demo_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_demo_ss')}}\r\n    GROUP BY 3\r\n   \r\n), voc_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT voc_id) AS voc,\r\n        SUM(acv) AS voc_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_voc_ss')}}\r\n    GROUP BY 3\r\n   \r\n), closing_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT closing_id) AS closing,\r\n        SUM(acv) AS closing_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_closing_ss')}}\r\n    GROUP BY 3\r\n   \r\n), won_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT won_id) AS won,\r\n        SUM(acv) AS won_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_won')}}\r\n    GROUP BY 3\r\n   \r\n), lost_base AS (\r\n\r\n    SELECT\r\n        COUNT(DISTINCT lost_id) AS lost,\r\n        SUM(acv_deal_size_usd) AS lost_acv,\r\n        account_global_region\r\n    FROM {{ref('funnel_report_current_week_lost')}}\r\n    GROUP BY 3\r\n   \r\n), final AS (\r\n\r\n    SELECT\r\n        base.global_region,\r\n        CASE \r\n            WHEN SUM(leads) IS null THEN 0\r\n            ELSE SUM(leads) \r\n        END AS leads,\r\n        CASE \r\n            WHEN SUM(mqls) IS null THEN 0\r\n            ELSE SUM(mqls) \r\n        END AS mqls,\r\n        CASE \r\n            WHEN SUM(sals) IS null THEN 0\r\n            ELSE SUM(sals) \r\n        END AS sals,\r\n        CASE \r\n            WHEN SUM(sqls) IS null THEN 0\r\n            ELSE SUM(sqls) \r\n        END AS sqls,\r\n        CASE \r\n            WHEN SUM(sqos) IS null THEN 0\r\n            ELSE SUM(sqos) \r\n        END AS sqos,\r\n        CASE \r\n            WHEN SUM(sqo_acv) IS null THEN 0\r\n            ELSE SUM(sqo_acv) \r\n        END AS sqo_acv,\r\n        CASE \r\n            WHEN SUM(demo) IS null THEN 0\r\n            ELSE SUM(demo) \r\n        END AS demo,\r\n        CASE \r\n            WHEN SUM(demo_acv) IS null THEN 0\r\n            ELSE SUM(demo_acv) \r\n        END AS demo_acv,\r\n        CASE \r\n            WHEN SUM(voc) IS null THEN 0\r\n            ELSE SUM(voc) \r\n        END AS voc,\r\n        CASE \r\n            WHEN SUM(voc_acv) IS null THEN 0\r\n            ELSE SUM(voc_acv) \r\n        END AS voc_acv,\r\n        CASE \r\n            WHEN SUM(closing) IS null THEN 0\r\n            ELSE SUM(closing) \r\n        END AS closing,\r\n        CASE \r\n            WHEN SUM(closing_acv) IS null THEN 0\r\n            ELSE SUM(closing_acv) \r\n        END AS closing_acv,\r\n        CASE \r\n            WHEN SUM(won) IS null THEN 0\r\n            ELSE SUM(won) \r\n        END AS won,\r\n        CASE \r\n            WHEN SUM(won_acv) IS null THEN 0\r\n            ELSE SUM(won_acv) \r\n        END AS won_acv,\r\n        CASE \r\n            WHEN SUM(lost) IS null THEN 0\r\n            ELSE SUM(lost) \r\n        END AS lost,\r\n        CASE \r\n            WHEN SUM(lost_acv) IS null THEN 0\r\n            ELSE SUM(lost_acv) \r\n        END AS lost_acv\r\n    FROM base\r\n    LEFT JOIN lead_base ON\r\n    base.global_region=lead_base.global_region\r\n    LEFT JOIN mql_base ON\r\n    base.global_region=mql_base.global_region\r\n    LEFT JOIN sal_base ON\r\n    base.global_region=sal_base.global_region\r\n    LEFT JOIN sql_base ON\r\n    base.global_region=sql_base.account_global_region\r\n    LEFT JOIN sqo_base ON\r\n    base.global_region=sqo_base.account_global_region\r\n    LEFT JOIN demo_base ON\r\n    base.global_region=demo_base.account_global_region\r\n    LEFT JOIN voc_base ON\r\n    base.global_region=voc_base.account_global_region\r\n    LEFT JOIN closing_base ON\r\n    base.global_region=closing_base.account_global_region\r\n    LEFT JOIN won_base ON\r\n    base.global_region=won_base.account_global_region\r\n    LEFT JOIN lost_base ON\r\n    base.global_region=lost_base.account_global_region\r\n    GROUP BY 1\r\n    ORDER BY 1\r\n\r\n)\r\n\r\nSELECT\r\nSUM(leads) AS leads,\r\nSUM(mqls) AS mqls,\r\nSUM(sals) AS sals,\r\nSUM(sqls) AS sqls,\r\nSUM(sqos) AS sqos,\r\nSUM(sqo_acv) AS sqo_acv,\r\nSUM(demo) AS demo,\r\nSUM(demo_acv) AS demo_acv,\r\nSUM(voc) AS voc, \r\nSUM(voc_acv) AS voc_acv,\r\nSUM(closing) AS closing,\r\nSUM(closing_acv) AS closing_acv,\r\nSUM(won) AS won,\r\nSUM(won_acv) AS won_acv,\r\nSUM(lost) AS lost,\r\nSUM(lost_acv) AS lost_acv\r\nFROM final", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_lost"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw_ss"], "unique_id": "model.acton_marketing_data.wow_summary_lw_ss", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw_ss.sql", "original_file_path": "models/wow/summary/wow_summary_lw_ss.sql", "name": "wow_summary_lw_ss", "alias": "wow_summary_lw_ss", "checksum": {"name": "sha256", "checksum": "19323cd90f9b4a66111c161344954609fd27660e12d3ec43a435cc8dd839d830"}, "tags": [], "refs": [["funnel_report_current_week_leads_ss"], ["funnel_report_current_week_mqls_ss"], ["funnel_report_current_week_sals_ss"], ["funnel_report_current_week_sqls_ss"], ["funnel_report_current_week_sqos_ss"], ["funnel_report_current_week_demo_ss"], ["funnel_report_current_week_voc_ss"], ["funnel_report_current_week_closing_ss"], ["funnel_report_current_week_won"], ["funnel_report_current_week_lost"], ["funnel_report_current_week_leads_ss"], ["funnel_report_current_week_mqls_ss"], ["funnel_report_current_week_sals_ss"], ["funnel_report_current_week_sqls_ss"], ["funnel_report_current_week_sqos_ss"], ["funnel_report_current_week_demo_ss"], ["funnel_report_current_week_voc_ss"], ["funnel_report_current_week_closing_ss"], ["funnel_report_current_week_won"], ["funnel_report_current_week_lost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8504877}, "model.acton_marketing_data.wow_summary_lw_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS last_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS last_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS last_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS last_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS last_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS last_sqo_to_lost,\r\n        ROUND(SUM(churn/NULLIF(sqos,0)),2) AS last_sqo_to_churn\r\n    FROM {{ref('wow_summary_lw')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_lw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_lw_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_lw_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_lw_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_lw_conversion.sql", "name": "wow_summary_lw_conversion", "alias": "wow_summary_lw_conversion", "checksum": {"name": "sha256", "checksum": "93999e4dfbc956991048aed00a6a688cfb6f8816d501710190b7dec2b15c5b3c"}, "tags": [], "refs": [["wow_summary_lw"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.853949}, "model.acton_marketing_data.wow_summary_pw_emea_ss_conversion": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT \r\n        ROUND(SUM(mqls/NULLIF(leads,0)),2) AS previous_lead_to_mql,\r\n        ROUND(SUM(sals/NULLIF(mqls,0)),2) AS previous_mql_to_sal,\r\n        ROUND(SUM(sqls/NULLIF(sals,0)),2) AS previous_sal_to_sql,\r\n        ROUND(SUM(sqos/NULLIF(sqls,0)),2) AS previous_sql_to_sqo,\r\n        ROUND(SUM(won/NULLIF(sqos,0)),2) AS previous_sqo_to_won,\r\n        ROUND(SUM(lost/NULLIF(sqos,0)),2) AS previous_sqo_to_lost\r\n    FROM {{ref('wow_summary_pw_emea_ss')}}\r\n   \r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.wow_summary_pw_emea_ss"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "summary", "wow_summary_pw_emea_ss_conversion"], "unique_id": "model.acton_marketing_data.wow_summary_pw_emea_ss_conversion", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/summary/wow_summary_pw_emea_ss_conversion.sql", "original_file_path": "models/wow/summary/wow_summary_pw_emea_ss_conversion.sql", "name": "wow_summary_pw_emea_ss_conversion", "alias": "wow_summary_pw_emea_ss_conversion", "checksum": {"name": "sha256", "checksum": "f5c0c01218610c17260dfb45486a1d44f5004d749ad2c32e2a6c3100a13628fc"}, "tags": [], "refs": [["wow_summary_pw_emea_ss"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.855841}, "model.acton_marketing_data.wow_disco_scheduled": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH  base AS (\r\n\r\nSELECT\r\nopportunity_id,\r\nopportunity_name,\r\nowner_id,\r\ndiscovery_call_scheduled_datetime\r\nFROM {{ref('opp_source_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.opp_source_xf\r\nWHERE 1=1\r\nAND type = 'New Business'\r\nAND discovery_call_scheduled_datetime IS NOT null\r\nAND discovery_date IS null\r\nAND opportunity_status != 'Rescheduling Meeting'\r\nAND is_closed != 'true'\r\nAND is_won != 'true'\r\nAND is_deleted != 'true'\r\n)\r\n\r\nSELECT\r\ndiscovery_call_scheduled_datetime,\r\nCOUNT(DISTINCT opportunity_id) AS opps\r\nFROM base\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "disco calls", "wow_disco_scheduled"], "unique_id": "model.acton_marketing_data.wow_disco_scheduled", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/disco calls/wow_disco_scheduled.sql", "original_file_path": "models/wow/disco calls/wow_disco_scheduled.sql", "name": "wow_disco_scheduled", "alias": "wow_disco_scheduled", "checksum": {"name": "sha256", "checksum": "e4900cf20a9ed9b9bf61d965c5f9240c00746a6dd7fdc23e6aa959b60b4865b1"}, "tags": [], "refs": [["opp_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8578541}, "model.acton_marketing_data.wow_disco_pastdue": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH  base AS (\r\n\r\nSELECT\r\nopportunity_id,\r\nopportunity_name,\r\nuser_name AS owner_name,\r\ndiscovery_call_scheduled_datetime\r\nFROM {{ref('opp_source_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.opp_source_xf\r\nLEFT JOIN {{ref('user_source_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.user_source_xf ON\r\nopp_source_xf.owner_id=user_source_xf.user_id\r\nWHERE 1=1\r\nAND type = 'New Business'\r\nAND discovery_call_scheduled_datetime IS NOT null\r\nAND discovery_date IS null\r\nAND opportunity_status != 'Rescheduling Meeting'\r\nAND is_closed != 'true'\r\nAND is_won != 'true'\r\nAND is_deleted != 'true'\r\nAND discovery_call_scheduled_datetime < CURRENT_DATE\r\n)\r\n\r\nSELECT\r\nowner_name,\r\nCOUNT(DISTINCT opportunity_id) AS opps\r\nFROM base\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "disco calls", "wow_disco_pastdue"], "unique_id": "model.acton_marketing_data.wow_disco_pastdue", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/disco calls/wow_disco_pastdue.sql", "original_file_path": "models/wow/disco calls/wow_disco_pastdue.sql", "name": "wow_disco_pastdue", "alias": "wow_disco_pastdue", "checksum": {"name": "sha256", "checksum": "849dc086ee7c5aa34a2cb4979acb765fa06fd02b4be7eed45836cd5de57d01c8"}, "tags": [], "refs": [["opp_source_xf"], ["user_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8599713}, "model.acton_marketing_data.wow_disco_missing": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\nSELECT\r\nopportunity_id,\r\nuser_name AS owner_name\r\nFROM {{ref('opp_source_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.opp_source_xf\r\nLEFT JOIN {{ref('user_source_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.user_source_xf ON\r\nopp_source_xf.created_by_id=user_source_xf.user_id\r\nWHERE 1=1\r\nAND type = 'New Business'\r\nAND discovery_call_scheduled_datetime IS null\r\nAND discovery_date IS null\r\nAND is_closed != 'true'\r\nAND is_won != 'true'\r\nAND is_deleted != 'true'\r\n\r\n)\r\n\r\nSELECT\r\nowner_name,\r\nCOUNT(DISTINCT opportunity_id) AS opps\r\nFROM base\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "disco calls", "wow_disco_missing"], "unique_id": "model.acton_marketing_data.wow_disco_missing", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/disco calls/wow_disco_missing.sql", "original_file_path": "models/wow/disco calls/wow_disco_missing.sql", "name": "wow_disco_missing", "alias": "wow_disco_missing", "checksum": {"name": "sha256", "checksum": "5f146439b74e3d481ef239be67bacd43c37c58937ec0ae3cbff121d408890309"}, "tags": [], "refs": [["opp_source_xf"], ["user_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8620265}, "model.acton_marketing_data.wow_last_week_mql_source": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_week AS (\r\n\r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n)\r\n\r\nSELECT DISTINCT\r\n    person_id,\r\n    mql_most_recent_date,\r\n    channel_lead_creation,\r\n    medium_lead_creation,\r\n    source_lead_creation,\r\n    country,\r\n    company_size_rev\r\nFROM {{ref('person_source_xf')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nperson_source_xf.mql_most_recent_date=date_base_xf.day\r\nLEFT JOIN last_week ON \r\ndate_base_xf.week=last_week.week\r\nWHERE last_week.week IS NOT null\r\nAND mql_most_recent_date IS NOT null\r\nAND person_owner_id != '00Ga0000003Nugr' -- AO-Fake Leads\r\nAND email NOT LIKE '%act-on.com'\r\nAND lead_source = 'Marketing'", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "leads", "wow_last_week_mql_source"], "unique_id": "model.acton_marketing_data.wow_last_week_mql_source", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/leads/wow_last_week_mql_source.sql", "original_file_path": "models/wow/leads/wow_last_week_mql_source.sql", "name": "wow_last_week_mql_source", "alias": "wow_last_week_mql_source", "checksum": {"name": "sha256", "checksum": "534893d3716ced091d21ec8482c5bfb141135fb56177d15940eaae6e2ce8af05"}, "tags": [], "refs": [["date_base_xf"], ["person_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8643289}, "model.acton_marketing_data.wow_weektracker": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_week AS (\r\nSELECT\r\nweek \r\nFROM {{ref('date_base_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.date_base_xf\r\nWHERE day=CURRENT_DATE-7\r\n\r\n)\r\n\r\nSELECT\r\nweek::Date AS last_week_start,\r\nweek::Date +6 AS last_week_end\r\nFROM last_week", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "leads", "wow_weektracker"], "unique_id": "model.acton_marketing_data.wow_weektracker", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/leads/wow_weektracker.sql", "original_file_path": "models/wow/leads/wow_weektracker.sql", "name": "wow_weektracker", "alias": "wow_weektracker", "checksum": {"name": "sha256", "checksum": "660afacd37c62be7e8b672460491d24f88d7b9515cb5e94017ccab8f67d078e4"}, "tags": [], "refs": [["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8666553}, "model.acton_marketing_data.wow_last_12week_mm_lead_source": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_12_weeks AS (\r\n\r\n    SELECT DISTINCT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day BETWEEN CURRENT_DATE-84 AND CURRENT_DATE-7\r\n\r\n), final AS (\r\n    \r\n    SELECT\r\n        last_12_weeks.week,\r\n        COUNT(person_id) AS leads\r\n    FROM {{ref('person_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    person_source_xf.marketing_created_date=date_base_xf.day\r\n    LEFT JOIN last_12_weeks ON \r\n    date_base_xf.week=last_12_weeks.week\r\n    WHERE last_12_weeks.week IS NOT null\r\n    AND marketing_created_date IS NOT null\r\n    AND person_owner_id != '00Ga0000003Nugr' -- AO-Fake Leads\r\n    AND email NOT LIKE '%act-on.com'\r\n    AND lead_source = 'Marketing'\r\n    AND company_size_rev IN ('Enterprise','Mid-Market')\r\n    GROUP BY 1\r\n\r\n)\r\n\r\nSELECT\r\n    week,\r\n    SUM(leads) AS leads\r\nFROM final\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "leads", "wow_last_12week_mm_lead_source"], "unique_id": "model.acton_marketing_data.wow_last_12week_mm_lead_source", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/leads/wow_last_12week_mm_lead_source.sql", "original_file_path": "models/wow/leads/wow_last_12week_mm_lead_source.sql", "name": "wow_last_12week_mm_lead_source", "alias": "wow_last_12week_mm_lead_source", "checksum": {"name": "sha256", "checksum": "49ceb7b6147c8ef3dae375803f135229200829e27ff30a392cff53d4abfcfb53"}, "tags": [], "refs": [["date_base_xf"], ["person_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8700142}, "model.acton_marketing_data.wow_last_week_lead_source": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH current_week AS (\r\n    \r\n    SELECT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day=CURRENT_DATE-7\r\n\r\n)\r\n\r\nSELECT DISTINCT\r\n    person_id,\r\n    marketing_created_date AS created_date,\r\n    CASE WHEN channel_lead_creation LIKE '$https$' THEN 'organic'\r\n        WHEN channel_lead_creation IS null THEN 'organic'\r\n        ELSE channel_lead_creation \r\n    END AS channel_lead_creation,\r\n    CASE WHEN medium_lead_creation LIKE '$https$' THEN 'search'\r\n        ELSE medium_lead_creation \r\n    END AS medium_lead_creation,\r\n    CASE WHEN source_lead_creation LIKE '$https$' THEN 'google'\r\n        ELSE source_lead_creation \r\n    END AS source_lead_creation,\r\n    country,\r\n    company_size_rev \r\nFROM {{ref('person_source_xf')}}\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\nmarketing_created_date=date_base_xf.day\r\nLEFT JOIN current_week ON \r\ndate_base_xf.week=current_week.week\r\nWHERE current_week.week IS NOT null\r\nAND marketing_created_date IS NOT null\r\nAND person_owner_id != '00Ga0000003Nugr' -- AO-Fake Leads\r\nAND email NOT LIKE '%act-on.com'\r\nAND lead_source = 'Marketing'", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "leads", "wow_last_week_lead_source"], "unique_id": "model.acton_marketing_data.wow_last_week_lead_source", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/leads/wow_last_week_lead_source.sql", "original_file_path": "models/wow/leads/wow_last_week_lead_source.sql", "name": "wow_last_week_lead_source", "alias": "wow_last_week_lead_source", "checksum": {"name": "sha256", "checksum": "82274aa0036f30238deff481833d640ff3886e37978534e75a76771f82366fa7"}, "tags": [], "refs": [["date_base_xf"], ["person_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8725853}, "model.acton_marketing_data.wow_last_12week_mm_mql_source": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_12_weeks AS (\r\n\r\n    SELECT DISTINCT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day BETWEEN CURRENT_DATE-84 AND CURRENT_DATE-7\r\n\r\n), final AS (\r\n    \r\n    SELECT\r\n        last_12_weeks.week,\r\n        COUNT(person_id) AS mqls\r\n    FROM {{ref('person_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    person_source_xf.mql_most_recent_date=date_base_xf.day\r\n    LEFT JOIN last_12_weeks ON \r\n    date_base_xf.week=last_12_weeks.week\r\n    WHERE last_12_weeks.week IS NOT null\r\n    AND mql_most_recent_date IS NOT null\r\n    AND person_owner_id != '00Ga0000003Nugr' -- AO-Fake Leads\r\n    AND email NOT LIKE '%act-on.com'\r\n    AND lead_source = 'Marketing'\r\n    AND company_size_rev IN ('Enterprise','Mid-Market')\r\n    GROUP BY 1\r\n\r\n)\r\n\r\nSELECT\r\n    week,\r\n    SUM(mqls) AS mqls\r\nFROM final\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "leads", "wow_last_12week_mm_mql_source"], "unique_id": "model.acton_marketing_data.wow_last_12week_mm_mql_source", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/leads/wow_last_12week_mm_mql_source.sql", "original_file_path": "models/wow/leads/wow_last_12week_mm_mql_source.sql", "name": "wow_last_12week_mm_mql_source", "alias": "wow_last_12week_mm_mql_source", "checksum": {"name": "sha256", "checksum": "231e19405e43f5aa179bfe3537361127de5351c419067d20a2478c7c69a8cbfd"}, "tags": [], "refs": [["date_base_xf"], ["person_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8749094}, "model.acton_marketing_data.wow_lw_sql_attribution": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_week AS (\r\n\r\n    SELECT DISTINCT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day = CURRENT_DATE-7\r\n\r\n), final AS (\r\n    \r\n    SELECT\r\n        opp_channel_lead_creation,\r\n        opp_medium_lead_creation,\r\n        opp_source_lead_creation,\r\n        COUNT(DISTINCT sql_id) AS sqls\r\n    FROM {{ref('sql_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sql_source_xf.created_date=date_base_xf.day\r\n    LEFT JOIN last_week ON \r\n    date_base_xf.week=last_week.week\r\n    WHERE last_week.week IS NOT null\r\n    AND created_date IS NOT null\r\n    AND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed')\r\n    AND type = 'New Business'\r\n    GROUP BY 1,2,3\r\n\r\n)\r\n\r\nSELECT\r\n    opp_channel_lead_creation,\r\n    opp_medium_lead_creation,\r\n    opp_source_lead_creation,\r\n    SUM(sqls) AS sqls\r\nFROM final\r\nGROUP BY 1,2,3", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "sqls", "wow_lw_sql_attribution"], "unique_id": "model.acton_marketing_data.wow_lw_sql_attribution", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/sqls/wow_lw_sql_attribution.sql", "original_file_path": "models/wow/sqls/wow_lw_sql_attribution.sql", "name": "wow_lw_sql_attribution", "alias": "wow_lw_sql_attribution", "checksum": {"name": "sha256", "checksum": "f7ed2a2e1b95d204e7586a4584046da0582c65c5c4cbe73c0225d0490249f27e"}, "tags": [], "refs": [["date_base_xf"], ["sql_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.877441}, "model.acton_marketing_data.wow_l12w_mm_sql": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_12_weeks AS (\r\nSELECT DISTINCT\r\nweek \r\nFROM {{ref('date_base_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.date_base_xf\r\nWHERE day BETWEEN CURRENT_DATE-84 AND CURRENT_DATE-7\r\n\r\n), opp_final AS (\r\n\r\nSELECT\r\ncreated_date,\r\nopportunity_id\r\nFROM {{ref('opp_source_xf')}}\r\n--FROM \"acton\".dbt_actonmarketing.opp_source_xf\r\nLEFT JOIN {{ref('account_source_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.account_source_xf ON\r\nopp_source_xf.account_id=account_source_xf.account_id\r\nWHERE 1=1 \r\nAND created_date IS NOT null\r\nAND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed')\r\nAND opp_source_xf.company_size_rev IN ('Enterprise','Mid-Market')\r\nAND type = 'New Business'\r\n\r\n), final AS (\r\n    \r\nSELECT\r\nlast_12_weeks.week,\r\nCOUNT(opportunity_id) AS sqls\r\nFROM last_12_weeks\r\nLEFT JOIN {{ref('date_base_xf')}} ON\r\n--LEFT JOIN \"acton\".dbt_actonmarketing.date_base_xf ON\r\ndate_base_xf.week=last_12_weeks.week\r\nLEFT JOIN opp_final ON \r\nopp_final.created_date=date_base_xf.day\r\nWHERE 1=1 \r\nAND last_12_weeks.week IS NOT null\r\nGROUP BY 1\r\n\r\n)\r\n\r\nSELECT\r\nweek,\r\nSUM(sqls) AS sqls\r\nFROM final\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "sqls", "wow_l12w_mm_sql"], "unique_id": "model.acton_marketing_data.wow_l12w_mm_sql", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/sqls/wow_l12w_mm_sql.sql", "original_file_path": "models/wow/sqls/wow_l12w_mm_sql.sql", "name": "wow_l12w_mm_sql", "alias": "wow_l12w_mm_sql", "checksum": {"name": "sha256", "checksum": "2d008bd5315b482d2ce8cafd640bc8837105f570381e7be1d71e91730435f91d"}, "tags": [], "refs": [["date_base_xf"], ["opp_source_xf"], ["account_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.880377}, "model.acton_marketing_data.wow_lw_sql_companysize": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_week AS (\r\n\r\n    SELECT DISTINCT\r\n        week \r\n    FROM {{ref('date_base_xf')}}\r\n    WHERE day = CURRENT_DATE-7\r\n\r\n), final AS (\r\n    \r\n    SELECT\r\n        company_size_rev,\r\n        COUNT(DISTINCT sql_id) AS sqls\r\n    FROM {{ref('sql_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sql_source_xf.created_date=date_base_xf.day\r\n    LEFT JOIN last_week ON \r\n    date_base_xf.week=last_week.week\r\n    WHERE last_week.week IS NOT null\r\n    AND created_date IS NOT null\r\n    AND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed')\r\n    AND type = 'New Business'\r\n    GROUP BY 1\r\n\r\n)\r\n\r\nSELECT\r\n    company_size_rev,\r\n    SUM(sqls) AS sqls\r\nFROM final\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "sqls", "wow_lw_sql_companysize"], "unique_id": "model.acton_marketing_data.wow_lw_sql_companysize", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/sqls/wow_lw_sql_companysize.sql", "original_file_path": "models/wow/sqls/wow_lw_sql_companysize.sql", "name": "wow_lw_sql_companysize", "alias": "wow_lw_sql_companysize", "checksum": {"name": "sha256", "checksum": "b4b97196bad6b67c5962c3b9c60e2e5a8f60836a0b68a8163e7a2aee88aacd82"}, "tags": [], "refs": [["date_base_xf"], ["sql_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8829262}, "model.acton_marketing_data.wow_l12w_sql": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH last_12_weeks AS (\r\n\r\nSELECT DISTINCT\r\n    week \r\nFROM {{ref('date_base_xf')}}\r\nWHERE day BETWEEN CURRENT_DATE-84 AND CURRENT_DATE-7\r\n\r\n), final AS (\r\n    \r\n    SELECT\r\n        last_12_weeks.week,\r\n        COUNT(DISTINCT sql_id) AS sqls\r\n    FROM {{ref('sql_source_xf')}}\r\n    LEFT JOIN {{ref('date_base_xf')}} ON\r\n    sql_source_xf.created_date=date_base_xf.day\r\n    LEFT JOIN last_12_weeks ON \r\n    date_base_xf.week=last_12_weeks.week\r\n    WHERE last_12_weeks.week IS NOT null\r\n    AND created_date IS NOT null\r\n    AND stage_name NOT IN ('Closed - Duplicate','Closed - Admin Removed')\r\n    AND type = 'New Business'\r\n    GROUP BY 1\r\n\r\n)\r\n\r\nSELECT\r\n    week,\r\n    SUM(sqls) AS sqls\r\nFROM final\r\nGROUP BY 1", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf", "model.acton_marketing_data.date_base_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "wow", "sqls", "wow_l12w_sql"], "unique_id": "model.acton_marketing_data.wow_l12w_sql", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "wow/sqls/wow_l12w_sql.sql", "original_file_path": "models/wow/sqls/wow_l12w_sql.sql", "name": "wow_l12w_sql", "alias": "wow_l12w_sql", "checksum": {"name": "sha256", "checksum": "e24daf5949aa0ee9df8e1977757a2b31187696f563bdf2704b5283353b9f4c54"}, "tags": [], "refs": [["date_base_xf"], ["sql_source_xf"], ["date_base_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.885193}, "model.acton_marketing_data.customer_power_ups": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT DISTINCT\r\n        campaign_member.campaign_id,\r\n        campaign.campaign_name,\r\n        campaign_member.lead_or_contact_id,\r\n        campaign_member.campaign_member_id,\r\n        campaign_member.campaign_member_status,\r\n        campaign_member.campaign_member_created_date,\r\n        person.lean_data_account_id AS account_id,\r\n        person.created_date,\r\n        COALESCE(account.account_name,person.company) AS account_name,\r\n        account.account_owner_name,\r\n        account.account_csm_name,\r\n        COALESCE(account.global_region,person.global_region) AS global_region,\r\n        account.executive_sponsor,\r\n        account.assigned_account_tier,\r\n        account.customer_since,\r\n        account.renewal_date,\r\n        account.business_model,\r\n        account.contract_type,\r\n        account.delivered_support_tier,\r\n        COALESCE(account.industry,person.industry) AS industry,\r\n        COALESCE(account.company_size_rev,person.company_size_rev) AS company_size_rev,\r\n        COALESCE(account.segment,person.segment) AS segment,\r\n        account.account_type,\r\n        account.is_current_customer,\r\n        campaign_influence.influence_opportunity_id AS opportunity_id,\r\n        opp.acv AS acv_deal_size_usd,\r\n        opp.opportunity_name,\r\n        opp.is_won,\r\n        CASE \r\n            WHEN is_won = true THEN influence_opportunity_id\r\n            END AS won_opportunity_id,\r\n        CASE \r\n            WHEN is_won = true THEN acv\r\n            END AS won_opportunity_acv\r\nFROM {{ref('campaign_member_source_xf')}} campaign_member\r\nLEFT JOIN {{ref('campaign_source_xf')}} campaign\r\nON campaign_member.campaign_id=campaign.campaign_id\r\nLEFT JOIN {{ref('person_source_xf')}} person\r\nON campaign_member.lead_or_contact_id=person.person_id\r\nLEFT JOIN {{ref('account_source_xf')}} account\r\nON person.lean_data_account_id=account.account_id\r\nLEFT JOIN {{ref('campaign_influence_xf')}} campaign_influence\r\nON campaign_member.campaign_id=campaign_influence.influence_campaign_id\r\nAND campaign_influence.influence_contact_id=person.person_id\r\nLEFT JOIN {{ref('opp_source_xf')}} opp\r\nON campaign_influence.influence_opportunity_id=opp.opportunity_id\r\nWHERE campaign.parent_campaign_id LIKE '7015Y000002UBBi%'\r\nAND campaign_member_status NOT IN ('Initial','Sent')\r\n)\r\n\r\nSELECT *\r\nFROM base", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.campaign_member_source_xf", "model.acton_marketing_data.campaign_source_xf", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.campaign_influence_xf", "model.acton_marketing_data.opp_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "customer_marketing", "customer_power_ups"], "unique_id": "model.acton_marketing_data.customer_power_ups", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "customer_marketing/customer_power_ups.sql", "original_file_path": "models/customer_marketing/customer_power_ups.sql", "name": "customer_power_ups", "alias": "customer_power_ups", "checksum": {"name": "sha256", "checksum": "94bbf8ae330f800d9c00daf25058312f6fc47bbd84e5890d9d0125f272b22c4f"}, "tags": [], "refs": [["campaign_member_source_xf"], ["campaign_source_xf"], ["person_source_xf"], ["account_source_xf"], ["campaign_influence_xf"], ["opp_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8876727}, "model.acton_marketing_data.avg_lead_to_cw_cohort_count": {"raw_sql": "WITH base AS(\r\n\r\n    SELECT *\r\n    FROM {{ ref('lead_to_cw_cohort')}}\r\n)\r\n\r\nSELECT DISTINCT\r\n    channel_bucket,\r\n    segment,\r\n    SUM(is_mql) AS mqls,\r\n    SUM(is_sal) AS sals,\r\n    SUM(is_sql) AS sqls,\r\n    SUM(is_sqo) AS sqos,\r\n    SUM(is_cl) AS closed_lost,\r\n    SUM(is_cw) AS closed_won\r\nFROM base\r\nGROUP BY 1,2", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.lead_to_cw_cohort"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "cohort_model", "avg_lead_to_cw_cohort_count"], "unique_id": "model.acton_marketing_data.avg_lead_to_cw_cohort_count", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "cohort_model/avg_lead_to_cw_cohort_count.sql", "original_file_path": "models/cohort_model/avg_lead_to_cw_cohort_count.sql", "name": "avg_lead_to_cw_cohort_count", "alias": "avg_lead_to_cw_cohort_count", "checksum": {"name": "sha256", "checksum": "5a68a7817dfe2cd9031b17328b15522b315a82db6f2a9154022138b5af4ceb84"}, "tags": [], "refs": [["lead_to_cw_cohort"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.890319}, "model.acton_marketing_data.avg_lead_to_cw_cohort": {"raw_sql": "WITH base AS(\r\n\r\n    SELECT *\r\n    FROM {{ ref('lead_to_cw_cohort')}}\r\n)\r\n\r\nSELECT\r\n    channel_bucket,\r\n    segment,\r\n    AVG(days_to_mql) AS avg_days_to_mql,\r\n    AVG(days_to_sal) AS avg_days_to_sal,\r\n    AVG(days_to_sql) AS avg_days_to_sql,\r\n    AVG(days_to_sqo) AS avg_days_to_sqo,\r\n    AVG(days_to_won) AS avg_days_to_won,\r\n    AVG(days_to_closed_lost) AS avg_days_to_closed_lost\r\nFROM base\r\nGROUP BY 1,2", "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.lead_to_cw_cohort"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "cohort_model", "avg_lead_to_cw_cohort"], "unique_id": "model.acton_marketing_data.avg_lead_to_cw_cohort", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "cohort_model/avg_lead_to_cw_cohort.sql", "original_file_path": "models/cohort_model/avg_lead_to_cw_cohort.sql", "name": "avg_lead_to_cw_cohort", "alias": "avg_lead_to_cw_cohort", "checksum": {"name": "sha256", "checksum": "96ebbd538b46f34d110283fa62c73c2ca30fa79fb41c194b2ae13fe20f405a0d"}, "tags": [], "refs": [["lead_to_cw_cohort"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8921106}, "model.acton_marketing_data.lead_to_cw_cohort": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH base AS (\r\n\r\n    SELECT *\r\n    FROM {{ref('opportunities_with_contacts')}}\r\n\r\n), intermediate AS (\r\n\r\n    SELECT\r\n        person_id,\r\n        opportunity_id,\r\n        company_size_rev,\r\n        global_region,\r\n        segment,\r\n        channel_bucket,\r\n        marketing_created_date::Date,\r\n        mql_created_date::Date,\r\n        CASE \r\n            WHEN person_status NOT IN ('Current Customer','Partner','Bad Data','No Fit') THEN mql_created_date::Date\r\n            ELSE null\r\n        END AS sal_created_date,\r\n        person_status,\r\n        opp_created_date::Date,\r\n        discovery_date::Date,\r\n        close_date::Date,\r\n        CASE\r\n            WHEN is_won = true THEN close_date::Date\r\n            ELSE null\r\n        END AS cw_date,\r\n        CASE \r\n            WHEN is_won = false AND is_closed = true THEN close_date::Date\r\n            ELSE null\r\n        END AS cl_date,\r\n        is_won,\r\n        channel_lead_creation,\r\n        medium_lead_creation,\r\n        source_lead_creation,\r\n        is_mql,\r\n        is_sal,\r\n        is_sql,\r\n        is_sqo,\r\n        is_cl,\r\n        is_cw\r\n    FROM base\r\n    WHERE marketing_created_date >= '2021-01-01'\r\n    --AND person_status != 'Current Customer'\r\n\r\n), final AS (\r\n\r\n    SELECT \r\n        intermediate.*,\r\n        CASE \r\n            WHEN mql_created_date>=marketing_created_date THEN {{ dbt_utils.datediff(\"marketing_created_date\",\"mql_created_date\",'day') }} \r\n            ELSE 0 \r\n        END AS days_to_mql,\r\n        CASE \r\n            WHEN sal_created_date>=mql_created_date THEN {{ dbt_utils.datediff(\"mql_created_date\",\"sal_created_date\",'day') }} \r\n            ELSE 0 \r\n        END AS  days_to_sal,\r\n        CASE \r\n            WHEN opp_created_date>=sal_created_date THEN {{ dbt_utils.datediff(\"sal_created_date\",\"opp_created_date\",'day') }} \r\n            ELSE 0 \r\n        END AS  days_to_sql,\r\n        CASE \r\n            WHEN discovery_date>=opp_created_date THEN {{ dbt_utils.datediff(\"opp_created_date\",\"discovery_date\",'day') }} \r\n            ELSE 0 \r\n        END AS  days_to_sqo,\r\n        CASE \r\n            WHEN cw_date>=discovery_date THEN {{ dbt_utils.datediff(\"discovery_date\",\"cw_date\",'day') }} \r\n            ELSE 0 \r\n        END AS  days_to_won,\r\n        CASE \r\n            WHEN cl_date>=discovery_date THEN {{ dbt_utils.datediff(\"discovery_date\",\"cl_date\",'day') }} \r\n            ELSE 0 \r\n        END AS  days_to_closed_lost\r\n    FROM intermediate\r\n\r\n)\r\n\r\nSELECT *\r\nFROM final", "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.datediff"], "nodes": ["model.acton_marketing_data.opportunities_with_contacts"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "dbt_actonmarketing", "fqn": ["acton_marketing_data", "cohort_model", "lead_to_cw_cohort"], "unique_id": "model.acton_marketing_data.lead_to_cw_cohort", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "cohort_model/lead_to_cw_cohort.sql", "original_file_path": "models/cohort_model/lead_to_cw_cohort.sql", "name": "lead_to_cw_cohort", "alias": "lead_to_cw_cohort", "checksum": {"name": "sha256", "checksum": "aae666219797add9f4457df7ed1886ddb2cf7c5fa46a0d5412c5ce7f3c57426e"}, "tags": [], "refs": [["opportunities_with_contacts"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table"}, "created_at": 1665014418.8939817}, "snapshot.acton_marketing_data.sfdc_ao_instance_snapshot2": {"raw_sql": "\r\n\r\n{{\r\n    config (\r\n        target_schema='snapshots',\r\n        unique_key = 'ao_instance_id',\r\n        strategy='timestamp',\r\n        updated_at='systemmodstamp'\r\n    )\r\n}}\r\n\r\nSELECT *\r\nFROM {{ref('ao_instance_source_xf')}}\r\n\r\n", "resource_type": "snapshot", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.ao_instance_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "snapshot", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "strategy": "timestamp", "unique_key": "ao_instance_id", "target_schema": "snapshots", "target_database": null, "updated_at": "systemmodstamp", "check_cols": null, "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "snapshots", "fqn": ["acton_marketing_data", "sfdc", "sfdc_ao_instance_snapshot", "sfdc_ao_instance_snapshot2"], "unique_id": "snapshot.acton_marketing_data.sfdc_ao_instance_snapshot2", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sfdc/sfdc_ao_instance_snapshot.sql", "original_file_path": "snapshots/sfdc/sfdc_ao_instance_snapshot.sql", "name": "sfdc_ao_instance_snapshot2", "alias": "sfdc_ao_instance_snapshot2", "checksum": {"name": "sha256", "checksum": "a460b3d1add6700b47970262622605cfb9269a593970c22e454ed745d917ae68"}, "tags": [], "refs": [["ao_instance_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"target_schema": "snapshots", "unique_key": "ao_instance_id", "strategy": "timestamp", "updated_at": "systemmodstamp"}, "created_at": 1665014418.9123726}, "snapshot.acton_marketing_data.sfdc_contact_snapshot3": {"raw_sql": "\r\n\r\n{{\r\n    config (\r\n        target_schema='snapshots',\r\n        unique_key = 'contact_id',\r\n        strategy='timestamp',\r\n        updated_at='systemmodstamp'\r\n    )\r\n}}\r\n\r\nSELECT *\r\nFROM {{ref('contact_source_xf')}}\r\n\r\n", "resource_type": "snapshot", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.contact_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "snapshot", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "strategy": "timestamp", "unique_key": "contact_id", "target_schema": "snapshots", "target_database": null, "updated_at": "systemmodstamp", "check_cols": null, "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "snapshots", "fqn": ["acton_marketing_data", "sfdc", "sfdc_contact_snapshot", "sfdc_contact_snapshot3"], "unique_id": "snapshot.acton_marketing_data.sfdc_contact_snapshot3", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sfdc/sfdc_contact_snapshot.sql", "original_file_path": "snapshots/sfdc/sfdc_contact_snapshot.sql", "name": "sfdc_contact_snapshot3", "alias": "sfdc_contact_snapshot3", "checksum": {"name": "sha256", "checksum": "ebe336e78ae4cf1d1302645a60d243070f30b246039e3c5f7a21ad34858d8034"}, "tags": [], "refs": [["contact_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"target_schema": "snapshots", "unique_key": "contact_id", "strategy": "timestamp", "updated_at": "systemmodstamp"}, "created_at": 1665014418.9195716}, "snapshot.acton_marketing_data.sfdc_lead_snapshot2": {"raw_sql": "\r\n\r\n{{\r\n    config (\r\n        target_schema='snapshots',\r\n        unique_key = 'lead_id',\r\n        strategy='timestamp',\r\n        updated_at='systemmodstamp'\r\n    )\r\n}}\r\n\r\nSELECT *\r\nFROM {{ref('lead_source_xf')}}\r\n\r\n", "resource_type": "snapshot", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.lead_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "snapshot", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "strategy": "timestamp", "unique_key": "lead_id", "target_schema": "snapshots", "target_database": null, "updated_at": "systemmodstamp", "check_cols": null, "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "snapshots", "fqn": ["acton_marketing_data", "sfdc", "sfdc_lead_snapshot", "sfdc_lead_snapshot2"], "unique_id": "snapshot.acton_marketing_data.sfdc_lead_snapshot2", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sfdc/sfdc_lead_snapshot.sql", "original_file_path": "snapshots/sfdc/sfdc_lead_snapshot.sql", "name": "sfdc_lead_snapshot2", "alias": "sfdc_lead_snapshot2", "checksum": {"name": "sha256", "checksum": "1a754d6245739970a6da29d20fcbbe9f33b9663f456c6206b0fca3c6218128ee"}, "tags": [], "refs": [["lead_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"target_schema": "snapshots", "unique_key": "lead_id", "strategy": "timestamp", "updated_at": "systemmodstamp"}, "created_at": 1665014418.9242027}, "snapshot.acton_marketing_data.sfdc_contract_snapshot2": {"raw_sql": "\r\n\r\n{{\r\n    config (\r\n        target_schema='snapshots',\r\n        unique_key = 'contract_id',\r\n        strategy='timestamp',\r\n        updated_at='systemmodstamp'\r\n    )\r\n}}\r\n\r\nSELECT *\r\nFROM {{ref('contract_source_xf')}}\r\n\r\n", "resource_type": "snapshot", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.contract_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "snapshot", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "strategy": "timestamp", "unique_key": "contract_id", "target_schema": "snapshots", "target_database": null, "updated_at": "systemmodstamp", "check_cols": null, "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "snapshots", "fqn": ["acton_marketing_data", "sfdc", "sfdc_contract_snapshot", "sfdc_contract_snapshot2"], "unique_id": "snapshot.acton_marketing_data.sfdc_contract_snapshot2", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sfdc/sfdc_contract_snapshot.sql", "original_file_path": "snapshots/sfdc/sfdc_contract_snapshot.sql", "name": "sfdc_contract_snapshot2", "alias": "sfdc_contract_snapshot2", "checksum": {"name": "sha256", "checksum": "35f0e1350b2f58119b5047c2ab9b675ee33c47225cb611378f7ec462fcfbb026"}, "tags": [], "refs": [["contract_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"target_schema": "snapshots", "unique_key": "contract_id", "strategy": "timestamp", "updated_at": "systemmodstamp"}, "created_at": 1665014418.928618}, "snapshot.acton_marketing_data.sfdc_ao_instance_user_snapshot2": {"raw_sql": "\r\n\r\n{{\r\n    config (\r\n        target_schema='snapshots',\r\n        unique_key = 'ao_user_id',\r\n        strategy='timestamp',\r\n        updated_at='systemmodstamp'\r\n    )\r\n}}\r\n\r\nSELECT *\r\nFROM {{ref('ao_instance_user_source_xf')}}\r\n\r\n", "resource_type": "snapshot", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.ao_instance_user_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "snapshot", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "strategy": "timestamp", "unique_key": "ao_user_id", "target_schema": "snapshots", "target_database": null, "updated_at": "systemmodstamp", "check_cols": null, "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "snapshots", "fqn": ["acton_marketing_data", "sfdc", "sfdc_ao_instance_user_snapshot", "sfdc_ao_instance_user_snapshot2"], "unique_id": "snapshot.acton_marketing_data.sfdc_ao_instance_user_snapshot2", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sfdc/sfdc_ao_instance_user_snapshot.sql", "original_file_path": "snapshots/sfdc/sfdc_ao_instance_user_snapshot.sql", "name": "sfdc_ao_instance_user_snapshot2", "alias": "sfdc_ao_instance_user_snapshot2", "checksum": {"name": "sha256", "checksum": "dfd908b80531bd2d3a0916d3278548a2d15c620aa5e02950ca839a07f1f1da4f"}, "tags": [], "refs": [["ao_instance_user_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"target_schema": "snapshots", "unique_key": "ao_user_id", "strategy": "timestamp", "updated_at": "systemmodstamp"}, "created_at": 1665014418.933256}, "snapshot.acton_marketing_data.sfdc_account_snapshot4": {"raw_sql": "\r\n\r\n{{\r\n    config (\r\n        target_schema='snapshots',\r\n        unique_key = 'account_id',\r\n        strategy='timestamp',\r\n        updated_at='systemmodstamp'\r\n    )\r\n    \r\n}}\r\n\r\nSELECT *\r\nFROM {{ref('account_source_xf')}}\r\n\r\n", "resource_type": "snapshot", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.account_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "snapshot", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "strategy": "timestamp", "unique_key": "account_id", "target_schema": "snapshots", "target_database": null, "updated_at": "systemmodstamp", "check_cols": null, "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "snapshots", "fqn": ["acton_marketing_data", "sfdc", "sfdc_account_snapshot", "sfdc_account_snapshot4"], "unique_id": "snapshot.acton_marketing_data.sfdc_account_snapshot4", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sfdc/sfdc_account_snapshot.sql", "original_file_path": "snapshots/sfdc/sfdc_account_snapshot.sql", "name": "sfdc_account_snapshot4", "alias": "sfdc_account_snapshot4", "checksum": {"name": "sha256", "checksum": "36e888f60e98924cf2cdadb8382f845e0210d955651783037f0e50181be3e304"}, "tags": [], "refs": [["account_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"target_schema": "snapshots", "unique_key": "account_id", "strategy": "timestamp", "updated_at": "systemmodstamp"}, "created_at": 1665014418.9379551}, "snapshot.acton_marketing_data.sfdc_opportunity_snapshot2": {"raw_sql": "\r\n\r\n{{\r\n    config (\r\n        target_schema='snapshots',\r\n        unique_key = 'opportunity_id',\r\n        strategy='timestamp',\r\n        updated_at='systemmodstamp'\r\n    )\r\n}}\r\n\r\nSELECT *\r\nFROM {{ref('opp_source_xf')}}\r\n\r\n", "resource_type": "snapshot", "depends_on": {"macros": [], "nodes": ["model.acton_marketing_data.opp_source_xf"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "snapshot", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "strategy": "timestamp", "unique_key": "opportunity_id", "target_schema": "snapshots", "target_database": null, "updated_at": "systemmodstamp", "check_cols": null, "post-hook": [], "pre-hook": []}, "database": "acton", "schema": "snapshots", "fqn": ["acton_marketing_data", "sfdc", "sfdc_opportunity_snapshot", "sfdc_opportunity_snapshot2"], "unique_id": "snapshot.acton_marketing_data.sfdc_opportunity_snapshot2", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "sfdc/sfdc_opportunity_snapshot.sql", "original_file_path": "snapshots/sfdc/sfdc_opportunity_snapshot.sql", "name": "sfdc_opportunity_snapshot2", "alias": "sfdc_opportunity_snapshot2", "checksum": {"name": "sha256", "checksum": "b51fb000a612300d8cebed81ee4d28addbb6e2983ebfbdb6cba7fe82d336872d"}, "tags": [], "refs": [["opp_source_xf"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": null, "build_path": null, "deferred": false, "unrendered_config": {"target_schema": "snapshots", "unique_key": "opportunity_id", "strategy": "timestamp", "updated_at": "systemmodstamp"}, "created_at": 1665014418.9425273}}, "sources": {"source.acton_marketing_data.salesforce.account": {"fqn": ["acton_marketing_data", "salesforce", "account"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.account", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "account", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "account", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"account\"", "created_at": 1665014419.0044599}, "source.acton_marketing_data.salesforce.act_on_instance_c": {"fqn": ["acton_marketing_data", "salesforce", "act_on_instance_c"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.act_on_instance_c", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "act_on_instance_c", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "act_on_instance_c", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"act_on_instance_c\"", "created_at": 1665014419.0046375}, "source.acton_marketing_data.salesforce.act_on_instance_user_c": {"fqn": ["acton_marketing_data", "salesforce", "act_on_instance_user_c"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.act_on_instance_user_c", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "act_on_instance_user_c", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "act_on_instance_user_c", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"act_on_instance_user_c\"", "created_at": 1665014419.0047598}, "source.acton_marketing_data.salesforce.campaign_influence": {"fqn": ["acton_marketing_data", "salesforce", "campaign_influence"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.campaign_influence", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "campaign_influence", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "campaign_influence", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"campaign_influence\"", "created_at": 1665014419.0048738}, "source.acton_marketing_data.salesforce.campaign_member": {"fqn": ["acton_marketing_data", "salesforce", "campaign_member"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.campaign_member", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "campaign_member", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "campaign_member", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"campaign_member\"", "created_at": 1665014419.0049841}, "source.acton_marketing_data.salesforce.campaign": {"fqn": ["acton_marketing_data", "salesforce", "campaign"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.campaign", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "campaign", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "campaign", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"campaign\"", "created_at": 1665014419.005092}, "source.acton_marketing_data.salesforce.contact_history": {"fqn": ["acton_marketing_data", "salesforce", "contact_history"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.contact_history", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "contact_history", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "contact_history", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"contact_history\"", "created_at": 1665014419.0051978}, "source.acton_marketing_data.salesforce.contact": {"fqn": ["acton_marketing_data", "salesforce", "contact"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.contact", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "contact", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "contact", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"contact\"", "created_at": 1665014419.0053008}, "source.acton_marketing_data.salesforce.contract": {"fqn": ["acton_marketing_data", "salesforce", "contract"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.contract", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "contract", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "contract", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"contract\"", "created_at": 1665014419.005403}, "source.acton_marketing_data.salesforce.lead_history": {"fqn": ["acton_marketing_data", "salesforce", "lead_history"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.lead_history", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "lead_history", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "lead_history", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"lead_history\"", "created_at": 1665014419.0055509}, "source.acton_marketing_data.salesforce.lead": {"fqn": ["acton_marketing_data", "salesforce", "lead"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.lead", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "lead", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "lead", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"lead\"", "created_at": 1665014419.0056686}, "source.acton_marketing_data.salesforce.opportunity": {"fqn": ["acton_marketing_data", "salesforce", "opportunity"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.opportunity", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "opportunity", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "opportunity", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"opportunity\"", "created_at": 1665014419.0057752}, "source.acton_marketing_data.salesforce.opportunity_field_history": {"fqn": ["acton_marketing_data", "salesforce", "opportunity_field_history"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.opportunity_field_history", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "opportunity_field_history", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "opportunity_field_history", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"opportunity_field_history\"", "created_at": 1665014419.0058796}, "source.acton_marketing_data.salesforce.opportunity_line_item": {"fqn": ["acton_marketing_data", "salesforce", "opportunity_line_item"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.opportunity_line_item", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "opportunity_line_item", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "opportunity_line_item", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"opportunity_line_item\"", "created_at": 1665014419.005983}, "source.acton_marketing_data.salesforce.product_2": {"fqn": ["acton_marketing_data", "salesforce", "product_2"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.product_2", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "product_2", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "product_2", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"product_2\"", "created_at": 1665014419.0062218}, "source.acton_marketing_data.salesforce.task": {"fqn": ["acton_marketing_data", "salesforce", "task"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.task", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "task", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "task", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"task\"", "created_at": 1665014419.0063474}, "source.acton_marketing_data.salesforce.user": {"fqn": ["acton_marketing_data", "salesforce", "user"], "database": "acton", "schema": "salesforce", "unique_id": "source.acton_marketing_data.salesforce.user", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "user", "source_name": "salesforce", "source_description": "", "loader": "", "identifier": "user", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"salesforce\".\"user\"", "created_at": 1665014419.0064583}, "source.acton_marketing_data.data_studio_s3.data_studio_emails": {"fqn": ["acton_marketing_data", "data_studio_s3", "data_studio_emails"], "database": "acton", "schema": "data_studio_s3", "unique_id": "source.acton_marketing_data.data_studio_s3.data_studio_emails", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "data_studio_emails", "source_name": "data_studio_s3", "source_description": "", "loader": "", "identifier": "data_studio_emails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"data_studio_s3\".\"data_studio_emails\"", "created_at": 1665014419.006565}, "source.acton_marketing_data.data_studio_s3.data_studio_forms": {"fqn": ["acton_marketing_data", "data_studio_s3", "data_studio_forms"], "database": "acton", "schema": "data_studio_s3", "unique_id": "source.acton_marketing_data.data_studio_s3.data_studio_forms", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "data_studio_forms", "source_name": "data_studio_s3", "source_description": "", "loader": "", "identifier": "data_studio_forms", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"data_studio_s3\".\"data_studio_forms\"", "created_at": 1665014419.0066695}, "source.acton_marketing_data.data_studio_s3.data_studio_landingpages": {"fqn": ["acton_marketing_data", "data_studio_s3", "data_studio_landingpages"], "database": "acton", "schema": "data_studio_s3", "unique_id": "source.acton_marketing_data.data_studio_s3.data_studio_landingpages", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "data_studio_landingpages", "source_name": "data_studio_s3", "source_description": "", "loader": "", "identifier": "data_studio_landingpages", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"data_studio_s3\".\"data_studio_landingpages\"", "created_at": 1665014419.006772}, "source.acton_marketing_data.data_studio_s3.data_studio_media": {"fqn": ["acton_marketing_data", "data_studio_s3", "data_studio_media"], "database": "acton", "schema": "data_studio_s3", "unique_id": "source.acton_marketing_data.data_studio_s3.data_studio_media", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "data_studio_media", "source_name": "data_studio_s3", "source_description": "", "loader": "", "identifier": "data_studio_media", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"data_studio_s3\".\"data_studio_media\"", "created_at": 1665014419.0068746}, "source.acton_marketing_data.data_studio_s3.data_studio_webinars": {"fqn": ["acton_marketing_data", "data_studio_s3", "data_studio_webinars"], "database": "acton", "schema": "data_studio_s3", "unique_id": "source.acton_marketing_data.data_studio_s3.data_studio_webinars", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "data_studio_webinars", "source_name": "data_studio_s3", "source_description": "", "loader": "", "identifier": "data_studio_webinars", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"data_studio_s3\".\"data_studio_webinars\"", "created_at": 1665014419.0069764}, "source.acton_marketing_data.data_studio_s3.data_studio_webpages": {"fqn": ["acton_marketing_data", "data_studio_s3", "data_studio_webpages"], "database": "acton", "schema": "data_studio_s3", "unique_id": "source.acton_marketing_data.data_studio_s3.data_studio_webpages", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "data_studio_webpages", "source_name": "data_studio_s3", "source_description": "", "loader": "", "identifier": "data_studio_webpages", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"data_studio_s3\".\"data_studio_webpages\"", "created_at": 1665014419.0070786}, "source.acton_marketing_data.datastudio1.email_clicks_ao_20220330": {"fqn": ["acton_marketing_data", "staging", "tpch", "datastudio1", "email_clicks_ao_20220330"], "database": "acton", "schema": "datastudio1", "unique_id": "source.acton_marketing_data.datastudio1.email_clicks_ao_20220330", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "models/staging/tpch/sources.yml", "original_file_path": "models/staging/tpch/sources.yml", "name": "email_clicks_ao_20220330", "source_name": "datastudio1", "source_description": "", "loader": "", "identifier": "email_clicks_ao_20220330", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": {"location": "s3://datastudio1/email_clicks_ao_20220330.csv", "file_format": null, "row_format": null, "tbl_properties": null, "partitions": null}, "description": "This source table is actually a set of files in external storage. The dbt-external-tables package provides handy macros for getting those files queryable, just in time for modeling.\n                \n", "columns": {"Recipient E-mail": {"name": "Recipient E-mail", "description": "Email", "meta": {}, "data_type": "varchar(255)", "quote": null, "tags": []}, "Action": {"name": "Action", "description": "Action", "meta": {}, "data_type": "varchar(255)", "quote": null, "tags": []}, "Action Day": {"name": "Action Day", "description": "Action Day", "meta": {}, "data_type": "varchar(255)", "quote": null, "tags": []}, "Action Time": {"name": "Action Time", "description": "Action Time", "meta": {}, "data_type": "varchar(255)", "quote": null, "tags": []}, "Message ID": {"name": "Message ID", "description": "Message ID", "meta": {}, "data_type": "varchar(255)", "quote": null, "tags": []}, "Subject": {"name": "Subject", "description": "Message Subject", "meta": {}, "data_type": "varchar(255)", "quote": null, "tags": []}, "Message Title": {"name": "Message Title", "description": "Message Title", "meta": {}, "data_type": "varchar(255)", "quote": null, "tags": []}, "Automated Program Name": {"name": "Automated Program Name", "description": "AP Name", "meta": {}, "data_type": "varchar(255)", "quote": null, "tags": []}, "Campaign Name": {"name": "Campaign Name", "description": "Campaign Name", "meta": {}, "data_type": "varchar(255)", "quote": null, "tags": []}, "Clicked URL": {"name": "Clicked URL", "description": "Clicked URL", "meta": {}, "data_type": "varchar(255)", "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"acton\".\"datastudio1\".\"email_clicks_ao_20220330\"", "created_at": 1665014419.0072083}}, "macros": {"macro.acton_marketing_data.refresh_external_table": {"unique_id": "macro.acton_marketing_data.refresh_external_table", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "macros/common/refresh_external_table.sql", "original_file_path": "macros/common/refresh_external_table.sql", "name": "refresh_external_table", "macro_sql": "{% macro refresh_external_table(source_node) %}\r\n    {{ return(adapter.dispatch('refresh_external_table', 'dbt_external_tables')(source_node)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.acton_marketing_data.default__refresh_external_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.1887057}, "macro.acton_marketing_data.default__refresh_external_table": {"unique_id": "macro.acton_marketing_data.default__refresh_external_table", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "macros/common/refresh_external_table.sql", "original_file_path": "macros/common/refresh_external_table.sql", "name": "default__refresh_external_table", "macro_sql": "{% macro default__refresh_external_table(source_node) %}\r\n    {% do return([]) %}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.1890993}, "macro.acton_marketing_data.get_external_build_plan": {"unique_id": "macro.acton_marketing_data.get_external_build_plan", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "macros/common/get_external_build_plan.sql", "original_file_path": "macros/common/get_external_build_plan.sql", "name": "get_external_build_plan", "macro_sql": "{% macro get_external_build_plan(source_node) %}\r\n    {{ return(adapter.dispatch('get_external_build_plan', 'dbt_external_tables')(source_node)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.acton_marketing_data.default__get_external_build_plan"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.1899776}, "macro.acton_marketing_data.default__get_external_build_plan": {"unique_id": "macro.acton_marketing_data.default__get_external_build_plan", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "macros/common/get_external_build_plan.sql", "original_file_path": "macros/common/get_external_build_plan.sql", "name": "default__get_external_build_plan", "macro_sql": "{% macro default__get_external_build_plan(source_node) %}\r\n    {{ exceptions.raise_compiler_error(\"Staging external sources is not implemented for the default adapter\") }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.1903164}, "macro.acton_marketing_data.create_external_table": {"unique_id": "macro.acton_marketing_data.create_external_table", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "macros/common/create_external_table.sql", "original_file_path": "macros/common/create_external_table.sql", "name": "create_external_table", "macro_sql": "{% macro create_external_table(source_node) %}\r\n    {{ adapter.dispatch('create_external_table', 'dbt_external_tables')(source_node) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.acton_marketing_data.default__create_external_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.1910124}, "macro.acton_marketing_data.default__create_external_table": {"unique_id": "macro.acton_marketing_data.default__create_external_table", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "macros/common/create_external_table.sql", "original_file_path": "macros/common/create_external_table.sql", "name": "default__create_external_table", "macro_sql": "{% macro default__create_external_table(source_node) %}\r\n    {{ exceptions.raise_compiler_error(\"External table creation is not implemented for the default adapter\") }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.1914382}, "macro.acton_marketing_data.stage_external_sources": {"unique_id": "macro.acton_marketing_data.stage_external_sources", "package_name": "acton_marketing_data", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981", "path": "macros/common/stage_external_sources.sql", "original_file_path": "macros/common/stage_external_sources.sql", "name": "stage_external_sources", "macro_sql": "{% macro stage_external_sources(select=none) %}\r\n\r\n    {% set sources_to_stage = [] %}\r\n    \r\n    {% set source_nodes = graph.sources.values() if graph.sources else [] %}\r\n    \r\n    {% for node in source_nodes %}\r\n        {% if node.external %}\r\n            \r\n            {% if select %}\r\n            \r\n                {% for src in select.split(' ') %}\r\n                \r\n                    {% if '.' in src %}\r\n                        {% set src_s = src.split('.') %}\r\n                        {% if src_s[0] == node.source_name and src_s[1] == node.name %}\r\n                            {% do sources_to_stage.append(node) %}\r\n                        {% endif %}\r\n                    {% else %}\r\n                        {% if src == node.source_name %}\r\n                            {% do sources_to_stage.append(node) %}\r\n                        {% endif %}\r\n                    {% endif %}\r\n                    \r\n                {% endfor %}\r\n                        \r\n            {% else %}\r\n            \r\n                {% do sources_to_stage.append(node) %}\r\n                \r\n            {% endif %}\r\n        {% endif %}\r\n        \r\n    {% endfor %}\r\n    \r\n    {% if sources_to_stage|length == 0 %}\r\n        {% do log('No external sources selected', info = true) %}\r\n    {% endif %}\r\n            \r\n    {% for node in sources_to_stage %}\r\n\r\n        {% set loop_label = loop.index ~ ' of ' ~ loop.length %}\r\n\r\n        {% do log(loop_label ~ ' START external source ' ~ node.schema ~ '.' ~ node.identifier, info = true) -%}\r\n        \r\n        {% set run_queue = dbt_external_tables.get_external_build_plan(node) %}\r\n        \r\n        {% do log(loop_label ~ ' SKIP', info = true) if run_queue == [] %}\r\n        {% set width = flags.PRINTER_WIDTH %}\r\n        \r\n        {% for q in run_queue %}\r\n        \r\n            {% set q_msg = q|replace('\\n','')|replace('begin;','')|trim %}\r\n            {% set q_log = q_msg[:width] ~ '...  ' if q_msg|length > width else q_msg %}\r\n        \r\n            {% do log(loop_label ~ ' (' ~ loop.index ~ ') ' ~ q_log, info = true) %}\r\n            {% set exit_txn = dbt_external_tables.exit_transaction() %}\r\n        \r\n            {% call statement('runner', fetch_result = True, auto_begin = False) %}\r\n                {{ exit_txn }} {{ q }}\r\n            {% endcall %}\r\n            \r\n            {% set runner = load_result('runner') %}\r\n            {% set log_msg = runner['response'] if 'response' in runner.keys() else runner['status'] %}\r\n            {% do log(loop_label ~ ' (' ~ loop.index ~ ') ' ~ log_msg, info = true) %}\r\n            \r\n        {% endfor %}\r\n        \r\n    {% endfor %}\r\n    \r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_external_tables.get_external_build_plan", "macro.dbt_external_tables.exit_transaction", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2018743}, "macro.dbt_postgres.postgres_get_relations": {"unique_id": "macro.dbt_postgres.postgres_get_relations", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/relations.sql", "original_file_path": "macros/relations.sql", "name": "postgres_get_relations", "macro_sql": "{% macro postgres_get_relations () -%}\n\n  {#\n      -- in pg_depend, objid is the dependent, refobjid is the referenced object\n      --  > a pg_depend entry indicates that the referenced object cannot be\n      --  > dropped without also dropping the dependent object.\n  #}\n\n  {%- call statement('relations', fetch_result=True) -%}\n    with relation as (\n        select\n            pg_rewrite.ev_class as class,\n            pg_rewrite.oid as id\n        from pg_rewrite\n    ),\n    class as (\n        select\n            oid as id,\n            relname as name,\n            relnamespace as schema,\n            relkind as kind\n        from pg_class\n    ),\n    dependency as (\n        select\n            pg_depend.objid as id,\n            pg_depend.refobjid as ref\n        from pg_depend\n    ),\n    schema as (\n        select\n            pg_namespace.oid as id,\n            pg_namespace.nspname as name\n        from pg_namespace\n        where nspname != 'information_schema' and nspname not like 'pg\\_%'\n    ),\n    referenced as (\n        select\n            relation.id AS id,\n            referenced_class.name ,\n            referenced_class.schema ,\n            referenced_class.kind\n        from relation\n        join class as referenced_class on relation.class=referenced_class.id\n        where referenced_class.kind in ('r', 'v')\n    ),\n    relationships as (\n        select\n            referenced.name as referenced_name,\n            referenced.schema as referenced_schema_id,\n            dependent_class.name as dependent_name,\n            dependent_class.schema as dependent_schema_id,\n            referenced.kind as kind\n        from referenced\n        join dependency on referenced.id=dependency.id\n        join class as dependent_class on dependency.ref=dependent_class.id\n        where\n            (referenced.name != dependent_class.name or\n             referenced.schema != dependent_class.schema)\n    )\n\n    select\n        referenced_schema.name as referenced_schema,\n        relationships.referenced_name as referenced_name,\n        dependent_schema.name as dependent_schema,\n        relationships.dependent_name as dependent_name\n    from relationships\n    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id\n    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id\n    group by referenced_schema, referenced_name, dependent_schema, dependent_name\n    order by referenced_schema, referenced_name, dependent_schema, dependent_name;\n\n  {%- endcall -%}\n\n  {{ return(load_result('relations').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.203257}, "macro.dbt_postgres.postgres__create_table_as": {"unique_id": "macro.dbt_postgres.postgres__create_table_as", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__create_table_as", "macro_sql": "{% macro postgres__create_table_as(temporary, relation, sql) -%}\n  {%- set unlogged = config.get('unlogged', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary -%}\n    temporary\n  {%- elif unlogged -%}\n    unlogged\n  {%- endif %} table {{ relation }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2135558}, "macro.dbt_postgres.postgres__get_create_index_sql": {"unique_id": "macro.dbt_postgres.postgres__get_create_index_sql", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_create_index_sql", "macro_sql": "{% macro postgres__get_create_index_sql(relation, index_dict) -%}\n  {%- set index_config = adapter.parse_index(index_dict) -%}\n  {%- set comma_separated_columns = \", \".join(index_config.columns) -%}\n  {%- set index_name = index_config.render(relation) -%}\n\n  create {% if index_config.unique -%}\n    unique\n  {%- endif %} index if not exists\n  \"{{ index_name }}\"\n  on {{ relation }} {% if index_config.type -%}\n    using {{ index_config.type }}\n  {%- endif %}\n  ({{ comma_separated_columns }});\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.214659}, "macro.dbt_postgres.postgres__create_schema": {"unique_id": "macro.dbt_postgres.postgres__create_schema", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__create_schema", "macro_sql": "{% macro postgres__create_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier().include(database=False) }}\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2154443}, "macro.dbt_postgres.postgres__drop_schema": {"unique_id": "macro.dbt_postgres.postgres__drop_schema", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__drop_schema", "macro_sql": "{% macro postgres__drop_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier().include(database=False) }} cascade\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2161446}, "macro.dbt_postgres.postgres__get_columns_in_relation": {"unique_id": "macro.dbt_postgres.postgres__get_columns_in_relation", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_columns_in_relation", "macro_sql": "{% macro postgres__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      select\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n      from {{ relation.information_schema('columns') }}\n      where table_name = '{{ relation.identifier }}'\n        {% if relation.schema %}\n        and table_schema = '{{ relation.schema }}'\n        {% endif %}\n      order by ordinal_position\n\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.217189}, "macro.dbt_postgres.postgres__list_relations_without_caching": {"unique_id": "macro.dbt_postgres.postgres__list_relations_without_caching", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__list_relations_without_caching", "macro_sql": "{% macro postgres__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      '{{ schema_relation.database }}' as database,\n      tablename as name,\n      schemaname as schema,\n      'table' as type\n    from pg_tables\n    where schemaname ilike '{{ schema_relation.schema }}'\n    union all\n    select\n      '{{ schema_relation.database }}' as database,\n      viewname as name,\n      schemaname as schema,\n      'view' as type\n    from pg_views\n    where schemaname ilike '{{ schema_relation.schema }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2180285}, "macro.dbt_postgres.postgres__information_schema_name": {"unique_id": "macro.dbt_postgres.postgres__information_schema_name", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__information_schema_name", "macro_sql": "{% macro postgres__information_schema_name(database) -%}\n  {% if database_name -%}\n    {{ adapter.verify_database(database_name) }}\n  {%- endif -%}\n  information_schema\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2184274}, "macro.dbt_postgres.postgres__list_schemas": {"unique_id": "macro.dbt_postgres.postgres__list_schemas", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__list_schemas", "macro_sql": "{% macro postgres__list_schemas(database) %}\n  {% if database -%}\n    {{ adapter.verify_database(database) }}\n  {%- endif -%}\n  {% call statement('list_schemas', fetch_result=True, auto_begin=False) %}\n    select distinct nspname from pg_namespace\n  {% endcall %}\n  {{ return(load_result('list_schemas').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2191765}, "macro.dbt_postgres.postgres__check_schema_exists": {"unique_id": "macro.dbt_postgres.postgres__check_schema_exists", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__check_schema_exists", "macro_sql": "{% macro postgres__check_schema_exists(information_schema, schema) -%}\n  {% if information_schema.database -%}\n    {{ adapter.verify_database(information_schema.database) }}\n  {%- endif -%}\n  {% call statement('check_schema_exists', fetch_result=True, auto_begin=False) %}\n    select count(*) from pg_namespace where nspname = '{{ schema }}'\n  {% endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2200181}, "macro.dbt_postgres.postgres__current_timestamp": {"unique_id": "macro.dbt_postgres.postgres__current_timestamp", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__current_timestamp", "macro_sql": "{% macro postgres__current_timestamp() -%}\n  now()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2202425}, "macro.dbt_postgres.postgres__snapshot_string_as_time": {"unique_id": "macro.dbt_postgres.postgres__snapshot_string_as_time", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__snapshot_string_as_time", "macro_sql": "{% macro postgres__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp without time zone\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2206774}, "macro.dbt_postgres.postgres__snapshot_get_time": {"unique_id": "macro.dbt_postgres.postgres__snapshot_get_time", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__snapshot_get_time", "macro_sql": "{% macro postgres__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp without time zone\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2209213}, "macro.dbt_postgres.postgres__make_temp_relation": {"unique_id": "macro.dbt_postgres.postgres__make_temp_relation", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_temp_relation", "macro_sql": "{% macro postgres__make_temp_relation(base_relation, suffix) %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% set dtstring = dt.strftime(\"%H%M%S%f\") %}\n    {% set suffix_length = suffix|length + dtstring|length %}\n    {% set relation_max_name_length = 63 %}\n    {% if suffix_length > relation_max_name_length %}\n        {% do exceptions.raise_compiler_error('Temp relation suffix is too long (' ~ suffix|length ~ ' characters). Maximum length is ' ~ (relation_max_name_length - dtstring|length) ~ ' characters.') %}\n    {% endif %}\n    {% set tmp_identifier = base_relation.identifier[:relation_max_name_length - suffix_length] ~ suffix ~ dtstring %}\n    {% do return(base_relation.incorporate(\n                                  path={\n                                    \"identifier\": tmp_identifier,\n                                    \"schema\": none,\n                                    \"database\": none\n                                  })) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.22284}, "macro.dbt_postgres.postgres_escape_comment": {"unique_id": "macro.dbt_postgres.postgres_escape_comment", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres_escape_comment", "macro_sql": "{% macro postgres_escape_comment(comment) -%}\n  {% if comment is not string %}\n    {% do exceptions.raise_compiler_error('cannot escape a non-string: ' ~ comment) %}\n  {% endif %}\n  {%- set magic = '$dbt_comment_literal_block$' -%}\n  {%- if magic in comment -%}\n    {%- do exceptions.raise_compiler_error('The string ' ~ magic ~ ' is not allowed in comments.') -%}\n  {%- endif -%}\n  {{ magic }}{{ comment }}{{ magic }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.223951}, "macro.dbt_postgres.postgres__alter_relation_comment": {"unique_id": "macro.dbt_postgres.postgres__alter_relation_comment", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__alter_relation_comment", "macro_sql": "{% macro postgres__alter_relation_comment(relation, comment) %}\n  {% set escaped_comment = postgres_escape_comment(comment) %}\n  comment on {{ relation.type }} {{ relation }} is {{ escaped_comment }};\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2244725}, "macro.dbt_postgres.postgres__alter_column_comment": {"unique_id": "macro.dbt_postgres.postgres__alter_column_comment", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__alter_column_comment", "macro_sql": "{% macro postgres__alter_column_comment(relation, column_dict) %}\n  {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n  {% for column_name in column_dict if (column_name in existing_columns) %}\n    {% set comment = column_dict[column_name]['description'] %}\n    {% set escaped_comment = postgres_escape_comment(comment) %}\n    comment on column {{ relation }}.{{ adapter.quote(column_name) if column_dict[column_name]['quote'] else column_name }} is {{ escaped_comment }};\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2257884}, "macro.dbt_postgres.postgres__get_catalog": {"unique_id": "macro.dbt_postgres.postgres__get_catalog", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "postgres__get_catalog", "macro_sql": "{% macro postgres__get_catalog(information_schema, schemas) -%}\n\n  {%- call statement('catalog', fetch_result=True) -%}\n    {#\n      If the user has multiple databases set and the first one is wrong, this will fail.\n      But we won't fail in the case where there are multiple quoting-difference-only dbs, which is better.\n    #}\n    {% set database = information_schema.database %}\n    {{ adapter.verify_database(database) }}\n\n    select\n        '{{ database }}' as table_database,\n        sch.nspname as table_schema,\n        tbl.relname as table_name,\n        case tbl.relkind\n            when 'v' then 'VIEW'\n            else 'BASE TABLE'\n        end as table_type,\n        tbl_desc.description as table_comment,\n        col.attname as column_name,\n        col.attnum as column_index,\n        pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,\n        col_desc.description as column_comment,\n        pg_get_userbyid(tbl.relowner) as table_owner\n\n    from pg_catalog.pg_namespace sch\n    join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid\n    join pg_catalog.pg_attribute col on col.attrelid = tbl.oid\n    left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)\n    left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)\n\n    where (\n        {%- for schema in schemas -%}\n          upper(sch.nspname) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n      and not pg_is_other_temp_schema(sch.oid) -- not a temporary schema belonging to another session\n      and tbl.relpersistence in ('p', 'u') -- [p]ermanent table or [u]nlogged table. Exclude [t]emporary tables\n      and tbl.relkind in ('r', 'v', 'f', 'p') -- o[r]dinary table, [v]iew, [f]oreign table, [p]artitioned table. Other values are [i]ndex, [S]equence, [c]omposite type, [t]OAST table, [m]aterialized view\n      and col.attnum > 0 -- negative numbers are used for system columns such as oid\n      and not col.attisdropped -- column as not been dropped\n\n    order by\n        sch.nspname,\n        tbl.relname,\n        col.attnum\n\n  {%- endcall -%}\n\n  {{ return(load_result('catalog').table) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.227871}, "macro.dbt_postgres.postgres__snapshot_merge_sql": {"unique_id": "macro.dbt_postgres.postgres__snapshot_merge_sql", "package_name": "dbt_postgres", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/postgres", "path": "macros/materializations/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot_merge.sql", "name": "postgres__snapshot_merge_sql", "macro_sql": "{% macro postgres__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    update {{ target }}\n    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = {{ target }}.dbt_scd_id::text\n      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)\n      and {{ target }}.dbt_valid_to is null;\n\n    insert into {{ target }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n        DBT_INTERNAL_SOURCE.{{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.22944}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2323835}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2329667}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2333748}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2337677}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2341688}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2347095}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2351544}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.235811}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.23622}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2367115}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2397585}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2401211}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2408135}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2412157}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2421014}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2426064}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.24403}, "macro.dbt.alter_relation_add_remove_columns": {"unique_id": "macro.dbt.alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2446117}, "macro.dbt.default__alter_relation_add_remove_columns": {"unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n  \n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n  \n  {% set sql -%}\n     \n     alter {{ relation.type }} {{ relation }}\n       \n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n            \n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n  \n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.24633}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2474391}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter '+adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.247769}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.248259}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2491868}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.250606}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2509806}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2515488}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2520301}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.252633}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2537022}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2566037}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix %}\n    {% set tmp_relation = base_relation.incorporate(\n                                path={\"identifier\": tmp_identifier}) -%}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2573712}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.257813}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2582924}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2586951}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2590587}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2595031}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2601194}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2606766}, "macro.dbt.default__get_or_create_relation": {"unique_id": "macro.dbt.default__get_or_create_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.262027}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2626188}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2630534}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2639394}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.26437}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2647314}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2651398}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2661939}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.266508}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2668567}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2678227}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.26896}, "macro.dbt.default__generate_schema_name": {"unique_id": "macro.dbt.default__generate_schema_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2695737}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2702103}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2711043}, "macro.dbt.default__generate_alias_name": {"unique_id": "macro.dbt.default__generate_alias_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2716122}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2726295}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2732053}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.276349}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2791505}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2807696}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2812884}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "statement", "macro_sql": "{% macro statement(name=None, fetch_result=False, auto_begin=True) -%}\n  {%- if execute: -%}\n    {%- set sql = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n      {{ write(sql) }}\n    {%- endif -%}\n\n    {%- set res, table = adapter.execute(sql, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2836926}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.284948}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2856202}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2863035}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\nselect *\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2868214}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2882006}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2890584}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.289938}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2906127}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2912853}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2936854}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.294146}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2944713}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2947884}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.2951293}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/table/table.sql", "original_file_path": "macros/materializations/models/table/table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type='table') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema,\n                                                      database=database,\n                                                      type='table') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if old_relation is not none %}\n      {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3023505}, "macro.dbt.get_create_table_as_sql": {"unique_id": "macro.dbt.get_create_table_as_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3034391}, "macro.dbt.default__get_create_table_as_sql": {"unique_id": "macro.dbt.default__get_create_table_as_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3038547}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, sql) -%}\n  {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3043115}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n  \n  {{ sql_header if sql_header is not none }}\n  \n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3051972}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/models/view/create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3077207}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.308578}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.309073}, "macro.dbt.get_create_view_as_sql": {"unique_id": "macro.dbt.get_create_view_as_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3099608}, "macro.dbt.default__get_create_view_as_sql": {"unique_id": "macro.dbt.default__get_create_view_as_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.310325}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3107245}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3112984}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/view/view.sql", "original_file_path": "macros/materializations/models/view/view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, database=database,\n                                                type='view') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema, database=database, type='view') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"old_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the old_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the old_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema, database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if old_relation is not none %}\n    {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_view_as", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3181698}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  {% set unique_key = config.get('unique_key') %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(target_relation) %}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n  {% set backup_identifier = model['name'] + \"__dbt_backup\" %}\n\n  -- the intermediate_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {% set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                  schema=schema,\n                                                                  database=database) %}                                               \n  {% set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                            schema=schema,\n                                                            database=database) %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {# -- first check whether we want to full refresh for source view or config reasons #}\n  {% set trigger_full_refresh = (full_refresh_mode or existing_relation.is_view) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n{% elif trigger_full_refresh %}\n      {#-- Make sure the backup doesn't exist so we don't encounter issues with the rename below #}\n      {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n      {% set backup_identifier = model['name'] + '__dbt_backup' %}\n      {% set intermediate_relation = existing_relation.incorporate(path={\"identifier\": tmp_identifier}) %}\n      {% set backup_relation = existing_relation.incorporate(path={\"identifier\": backup_identifier}) %}\n\n      {% set build_sql = create_table_as(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n      {% do to_drop.append(backup_relation) %}\n  {% else %}\n    {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=tmp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n    {% set build_sql = get_delete_insert_merge_sql(target_relation, tmp_relation, unique_key, dest_columns) %}\n  \n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %} \n      {% do adapter.rename_relation(target_relation, backup_relation) %} \n      {% do adapter.rename_relation(intermediate_relation, target_relation) %} \n  {% endif %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.get_delete_insert_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3279173}, "macro.dbt.incremental_validate_on_schema_change": {"unique_id": "macro.dbt.incremental_validate_on_schema_change", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n   \n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n     \n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n     \n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n   \n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3359902}, "macro.dbt.check_for_schema_changes": {"unique_id": "macro.dbt.check_for_schema_changes", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n  \n  {% set schema_changed = False %}\n  \n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n  \n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3386436}, "macro.dbt.sync_column_schemas": {"unique_id": "macro.dbt.sync_column_schemas", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n  \n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n  \n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n  \n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %} \n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n  \n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(schema_change_message) %}\n  \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3413174}, "macro.dbt.process_schema_changes": {"unique_id": "macro.dbt.process_schema_changes", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n    \n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n    \n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n      \n      {% if schema_changes_dict['schema_changed'] %}\n    \n        {% if on_schema_change == 'fail' %}\n        \n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways: \n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n          {% endset %}\n          \n          {% do exceptions.raise_compiler_error(fail_msg) %}\n        \n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n          \n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n        \n        {% endif %}\n      \n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n    \n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3429222}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3444402}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3492038}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set update_columns = config.get('merge_update_columns', default = dest_columns | map(attribute=\"quoted\") | list) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% set unique_key_match %}\n            DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n        {% endset %}\n        {% do predicates.append(unique_key_match) %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.351875}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3524375}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key is not none %}\n    delete from {{ target }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ source }}\n    );\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.353363}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3539557}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3553953}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n    \n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3570964}, "macro.dbt.diff_columns": {"unique_id": "macro.dbt.diff_columns", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n   \n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n  \n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3583198}, "macro.dbt.diff_column_data_types": {"unique_id": "macro.dbt.diff_column_data_types", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n  \n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }} \n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3596275}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3663547}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3682888}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.368857}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3700223}, "macro.dbt.get_binding_char": {"unique_id": "macro.dbt.get_binding_char", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.370371}, "macro.dbt.default__get_binding_char": {"unique_id": "macro.dbt.default__get_binding_char", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3706384}, "macro.dbt.get_batch_size": {"unique_id": "macro.dbt.get_batch_size", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.370988}, "macro.dbt.default__get_batch_size": {"unique_id": "macro.dbt.default__get_batch_size", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3713882}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.372447}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3728652}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3755627}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set agate_table = load_agate_table() -%}\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ create_table_sql }};\n    -- dbt seed --\n    {{ sql }}\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3813322}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3823807}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3830545}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "name": "materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n    \n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n    \n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n    \n    {% do relations.append(target_relation) %}\n  \n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n    \n    {{ adapter.commit() }}\n  \n  {% else %}\n\n      {% set main_sql = sql %}\n  \n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n  \n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3874488}, "macro.dbt.get_where_subquery": {"unique_id": "macro.dbt.get_where_subquery", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.388355}, "macro.dbt.default__get_where_subquery": {"unique_id": "macro.dbt.default__get_where_subquery", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3892043}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3945396}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3951716}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3955452}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3958452}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3963137}, "macro.dbt.default__snapshot_staging_table": {"unique_id": "macro.dbt.default__snapshot_staging_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select \n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n    \n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n    \n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3984308}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.398866}, "macro.dbt.default__build_snapshot_table": {"unique_id": "macro.dbt.default__build_snapshot_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.3994212}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set tmp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, tmp_relation, select) }}\n    {% endcall %}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4005914}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4073195}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4077075}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4082}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_get_time", "macro_sql": "{% macro snapshot_get_time() -%}\n  {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4085324}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() -%}\n  {{ current_timestamp() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4087565}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4103105}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4106848}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4110653}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists) -%}\n    {%- set query_columns = get_columns_in_query(node['compiled_sql']) -%}\n    {%- if not target_exists -%}\n        {# no table yet -> return whatever the query does #}\n        {{ return([false, query_columns]) }}\n    {%- endif -%}\n    {# handle any schema changes #}\n    {%- set target_table = node.get('alias', node.get('name')) -%}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=target_table) -%}\n    {%- set existing_cols = get_columns_in_query('select * from ' ~ target_relation) -%}\n    {%- set ns = namespace() -%} {# handle for-loop scoping with a namespace #}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(col) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return([ns.column_added, intersection]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4132676}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    \n    {% set select_current_time -%}\n        select {{ snapshot_get_time() }} as snapshot_start\n    {%- endset %}\n\n    {#-- don't access the column by name, to avoid dealing with casing issues on snowflake #}\n    {%- set now = run_query(select_current_time)[0][0] -%}\n    {% if now is none or now is undefined -%}\n        {%- do exceptions.raise_compiler_error('Could not get a snapshot start time from the database') -%}\n    {%- endif %}\n    {% set updated_at = config.get('updated_at', snapshot_string_as_time(now)) %}\n\n    {% set column_added = false %}\n\n    {% if check_cols_config == 'all' %}\n        {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists) %}\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {% set check_cols = check_cols_config %}\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        TRUE\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.run_query", "macro.dbt.snapshot_string_as_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.417794}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4187942}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.419402}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n\n  {% if not adapter.check_schema_exists(model.database, model.schema) %}\n    {% do create_schema(model.database, model.schema) %}\n  {% endif %}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_schema", "macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4724588}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4737813}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4743044}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4749215}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4755225}, "macro.dbt_utils.pivot": {"unique_id": "macro.dbt_utils.pivot", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "name": "pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4777126}, "macro.dbt_utils.default__pivot": {"unique_id": "macro.dbt_utils.default__pivot", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "name": "default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for v in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ v }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ v ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ v ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4794858}, "macro.dbt_utils.star": {"unique_id": "macro.dbt_utils.star", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "name": "star", "macro_sql": "{% macro star(from, relation_alias=False, except=[], prefix='', suffix='') -%}\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4810016}, "macro.dbt_utils.default__star": {"unique_id": "macro.dbt_utils.default__star", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "name": "default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[], prefix='', suffix='') -%}\n    {%- do dbt_utils._is_relation(from, 'star') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n\n        {%- endif %}\n    {%- endfor %}\n\n    {%- for col in include_cols %}\n\n        {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}{{ adapter.quote(col)|trim }} as {{ adapter.quote(prefix ~ col ~ suffix)|trim }}\n        {%- if not loop.last %},{{ '\\n  ' }}{% endif %}\n\n    {%- endfor -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4834456}, "macro.dbt_utils.surrogate_key": {"unique_id": "macro.dbt_utils.surrogate_key", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "name": "surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4847398}, "macro.dbt_utils.default__surrogate_key": {"unique_id": "macro.dbt_utils.default__surrogate_key", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "name": "default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- if varargs|length >= 1 or field_list is string %}\n\n{%- set error_message = '\nWarning: the `surrogate_key` macro now takes a single list argument instead of \\\nmultiple string arguments. Support for multiple string arguments will be \\\ndeprecated in a future release of dbt-utils. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{# first argument is not included in varargs, so add first element to field_list_xf #}\n{%- set field_list_xf = [field_list] -%}\n\n{%- for field in varargs %}\n{%- set _ = field_list_xf.append(field) -%}\n{%- endfor -%}\n\n{%- else -%}\n\n{# if using list, just set field_list_xf as field_list #}\n{%- set field_list_xf = field_list -%}\n\n{%- endif -%}\n\n\n{%- set fields = [] -%}\n\n{%- for field in field_list_xf -%}\n\n    {%- set _ = fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt_utils.type_string() ~ \"), '')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- set _ = fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{dbt_utils.hash(dbt_utils.concat(fields))}}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string", "macro.dbt_utils.hash", "macro.dbt_utils.concat"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4868906}, "macro.dbt_utils.get_query_results_as_dict": {"unique_id": "macro.dbt_utils.get_query_results_as_dict", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "name": "get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4878187}, "macro.dbt_utils.default__get_query_results_as_dict": {"unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "name": "default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4891236}, "macro.dbt_utils.get_intervals_between": {"unique_id": "macro.dbt_utils.get_intervals_between", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.491043}, "macro.dbt_utils.default__get_intervals_between": {"unique_id": "macro.dbt_utils.default__get_intervals_between", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{dbt_utils.datediff(start_date, end_date, datepart)}}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4924626}, "macro.dbt_utils.date_spine": {"unique_id": "macro.dbt_utils.date_spine", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4929864}, "macro.dbt_utils.default__date_spine": {"unique_id": "macro.dbt_utils.default__date_spine", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt_utils.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4937992}, "macro.dbt_utils.get_column_values": {"unique_id": "macro.dbt_utils.get_column_values", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "name": "get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4956863}, "macro.dbt_utils.default__get_column_values": {"unique_id": "macro.dbt_utils.default__get_column_values", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "name": "default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none) -%}\n{% if default is none %}\n    {% set default = [] %}\n{% endif %}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return(default) }}\n    {% endif %}\n\n    {# Not all relations are tables. Renaming for internal clarity without breaking functionality for anyone using named arguments #}\n    {# TODO: Change the method signature in a future 0.x.0 release #}\n    {%- set target_relation = table -%}\n\n    {# adapter.load_relation is a convenience wrapper to avoid building a Relation when we already have one #}\n    {% set relation_exists = (load_relation(target_relation)) is not none %}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not relation_exists and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ target_relation ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not relation_exists and default is not none -%}\n\n          {{ log(\"Relation \" ~ target_relation ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4991343}, "macro.dbt_utils.group_by": {"unique_id": "macro.dbt_utils.group_by", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "name": "group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.4999037}, "macro.dbt_utils.default__group_by": {"unique_id": "macro.dbt_utils.default__group_by", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "name": "default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5004745}, "macro.dbt_utils.get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.503435}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as \"table_schema\",\n            table_name as \"table_name\",\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as \"table_type\"\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5040398}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                case table_type\n                    when 'BASE TABLE' then 'table'\n                    else lower(table_type)\n                end as table_type\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5056238}, "macro.dbt_utils._bigquery__get_matching_schemata": {"unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "_bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5067444}, "macro.dbt_utils.nullcheck_table": {"unique_id": "macro.dbt_utils.nullcheck_table", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "name": "nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5076518}, "macro.dbt_utils.default__nullcheck_table": {"unique_id": "macro.dbt_utils.default__nullcheck_table", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "name": "default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5084152}, "macro.dbt_utils.get_tables_by_prefix_sql": {"unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "name": "get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5093803}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "name": "default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5100732}, "macro.dbt_utils.get_relations_by_pattern": {"unique_id": "macro.dbt_utils.get_relations_by_pattern", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "name": "get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5114589}, "macro.dbt_utils.default__get_relations_by_pattern": {"unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "name": "default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5134425}, "macro.dbt_utils.get_relations_by_prefix": {"unique_id": "macro.dbt_utils.get_relations_by_prefix", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "name": "get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5148516}, "macro.dbt_utils.default__get_relations_by_prefix": {"unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "name": "default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.516678}, "macro.dbt_utils.safe_add": {"unique_id": "macro.dbt_utils.safe_add", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "name": "safe_add", "macro_sql": "{%- macro safe_add() -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(*varargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.517733}, "macro.dbt_utils.default__safe_add": {"unique_id": "macro.dbt_utils.default__safe_add", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "name": "default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add() -%}\n\n{% set fields = [] %}\n\n{%- for field in varargs -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5183775}, "macro.dbt_utils.degrees_to_radians": {"unique_id": "macro.dbt_utils.degrees_to_radians", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5202713}, "macro.dbt_utils.haversine_distance": {"unique_id": "macro.dbt_utils.haversine_distance", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5208933}, "macro.dbt_utils.default__haversine_distance": {"unique_id": "macro.dbt_utils.default__haversine_distance", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5222847}, "macro.dbt_utils.bigquery__haversine_distance": {"unique_id": "macro.dbt_utils.bigquery__haversine_distance", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5241537}, "macro.dbt_utils.unpivot": {"unique_id": "macro.dbt_utils.unpivot", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "name": "unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', table=none) -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name, table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5276656}, "macro.dbt_utils.default__unpivot": {"unique_id": "macro.dbt_utils.default__unpivot", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "name": "default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', table=none) -%}\n\n    {% if table %}\n        {%- set error_message = '\n            Warning: the `unpivot` macro no longer accepts a `table` parameter. \\\n            This parameter will be deprecated in a future release of dbt-utils. Use the `relation` parameter instead. \\\n            The {}.{} model triggered this warning. \\\n            '.format(model.package_name, model.name) -%}\n        {%- do exceptions.warn(error_message) -%}\n    {% endif %}\n\n    {% if relation and table %}\n        {{ exceptions.raise_compiler_error(\"Error: both the `relation` and `table` parameters were provided to `unpivot` macro. Choose one only (we recommend `relation`).\") }}\n    {% elif not relation and table %}\n        {% set relation=table %}\n    {% elif not relation and not table %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt_utils.type_string() }}) as {{ field_name }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt_utils.cast_bool_to_text(col.column) }}\n             {% else %}\n           {{ col.column }}\n             {% endif %}\n           as {{ cast_to }}) as {{ value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.type_string", "macro.dbt_utils.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.532061}, "macro.dbt_utils.get_powers_of_two": {"unique_id": "macro.dbt_utils.get_powers_of_two", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5338142}, "macro.dbt_utils.default__get_powers_of_two": {"unique_id": "macro.dbt_utils.default__get_powers_of_two", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5347302}, "macro.dbt_utils.generate_series": {"unique_id": "macro.dbt_utils.generate_series", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.535156}, "macro.dbt_utils.default__generate_series": {"unique_id": "macro.dbt_utils.default__generate_series", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5363023}, "macro.dbt_utils.nullcheck": {"unique_id": "macro.dbt_utils.nullcheck", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "name": "nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5371459}, "macro.dbt_utils.default__nullcheck": {"unique_id": "macro.dbt_utils.default__nullcheck", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "name": "default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5380175}, "macro.dbt_utils.union_relations": {"unique_id": "macro.dbt_utils.union_relations", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "name": "union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation') -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.540996}, "macro.dbt_utils.default__union_relations": {"unique_id": "macro.dbt_utils.default__union_relations", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "name": "default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation') -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column in exclude -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column not in include -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                cast({{ dbt_utils.string_literal(relation) }} as {{ dbt_utils.type_string() }}) as {{ source_column_name }},\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.string_literal", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5463288}, "macro.dbt_utils.get_period_boundaries": {"unique_id": "macro.dbt_utils.get_period_boundaries", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "get_period_boundaries", "macro_sql": "{% macro get_period_boundaries(target_schema, target_table, timestamp_field, start_date, stop_date, period) -%}\n    {{ return(adapter.dispatch('get_period_boundaries', 'dbt_utils')(target_schema, target_table, timestamp_field, start_date, stop_date, period)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_period_boundaries"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5563288}, "macro.dbt_utils.default__get_period_boundaries": {"unique_id": "macro.dbt_utils.default__get_period_boundaries", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "default__get_period_boundaries", "macro_sql": "{% macro default__get_period_boundaries(target_schema, target_table, timestamp_field, start_date, stop_date, period) -%}\n\n  {% call statement('period_boundaries', fetch_result=True) -%}\n    with data as (\n      select\n          coalesce(max(\"{{timestamp_field}}\"), '{{start_date}}')::timestamp as start_timestamp,\n          coalesce(\n            {{dbt_utils.dateadd('millisecond',\n                                -1,\n                                \"nullif('\" ~ stop_date ~ \"','')::timestamp\")}},\n            {{dbt_utils.current_timestamp()}}\n          ) as stop_timestamp\n      from \"{{target_schema}}\".\"{{target_table}}\"\n    )\n\n    select\n      start_timestamp,\n      stop_timestamp,\n      {{dbt_utils.datediff('start_timestamp',\n                           'stop_timestamp',\n                           period)}}  + 1 as num_periods\n    from data\n  {%- endcall %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.dateadd", "macro.dbt_utils.current_timestamp", "macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5574799}, "macro.dbt_utils.get_period_sql": {"unique_id": "macro.dbt_utils.get_period_sql", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "get_period_sql", "macro_sql": "{% macro get_period_sql(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset) -%}\n    {{ return(adapter.dispatch('get_period_sql', 'dbt_utils')(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_period_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.55818}, "macro.dbt_utils.default__get_period_sql": {"unique_id": "macro.dbt_utils.default__get_period_sql", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "default__get_period_sql", "macro_sql": "{% macro default__get_period_sql(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset) -%}\n\n  {%- set period_filter -%}\n    (\"{{timestamp_field}}\" >  '{{start_timestamp}}'::timestamp + interval '{{offset}} {{period}}' and\n     \"{{timestamp_field}}\" <= '{{start_timestamp}}'::timestamp + interval '{{offset}} {{period}}' + interval '1 {{period}}' and\n     \"{{timestamp_field}}\" <  '{{stop_timestamp}}'::timestamp)\n  {%- endset -%}\n\n  {%- set filtered_sql = sql | replace(\"__PERIOD_FILTER__\", period_filter) -%}\n\n  select\n    {{target_cols_csv}}\n  from (\n    {{filtered_sql}}\n  )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5592763}, "macro.dbt_utils.materialization_insert_by_period_default": {"unique_id": "macro.dbt_utils.materialization_insert_by_period_default", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "materialization_insert_by_period_default", "macro_sql": "{% materialization insert_by_period, default -%}\n  {%- set timestamp_field = config.require('timestamp_field') -%}\n  {%- set start_date = config.require('start_date') -%}\n  {%- set stop_date = config.get('stop_date') or '' -%}}\n  {%- set period = config.get('period') or 'week' -%}\n\n  {%- if sql.find('__PERIOD_FILTER__') == -1 -%}\n    {%- set error_message -%}\n      Model '{{ model.unique_id }}' does not include the required string '__PERIOD_FILTER__' in its sql\n    {%- endset -%}\n    {{ exceptions.raise_compiler_error(error_message) }}\n  {%- endif -%}\n\n  {%- set identifier = model['name'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, type='table') -%}\n\n  {%- set non_destructive_mode = (flags.NON_DESTRUCTIVE == True) -%}\n  {%- set full_refresh_mode = (flags.FULL_REFRESH == True) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_not_as_table = (old_relation is not none and not old_relation.is_table) -%}\n\n  {%- set should_truncate = (non_destructive_mode and full_refresh_mode and exists_as_table) -%}\n  {%- set should_drop = (not should_truncate and (full_refresh_mode or exists_not_as_table)) -%}\n  {%- set force_create = (flags.FULL_REFRESH and not flags.NON_DESTRUCTIVE) -%}\n\n  -- setup\n  {% if old_relation is none -%}\n    -- noop\n  {%- elif should_truncate -%}\n    {{adapter.truncate_relation(old_relation)}}\n  {%- elif should_drop -%}\n    {{adapter.drop_relation(old_relation)}}\n    {%- set old_relation = none -%}\n  {%- endif %}\n\n  {{run_hooks(pre_hooks, inside_transaction=False)}}\n\n  -- `begin` happens here, so `commit` after it to finish the transaction\n  {{run_hooks(pre_hooks, inside_transaction=True)}}\n  {% call statement() -%}\n    begin; -- make extra sure we've closed out the transaction\n    commit;\n  {%- endcall %}\n\n  -- build model\n  {% if force_create or old_relation is none -%}\n    {# Create an empty target table -#}\n    {% call statement('main') -%}\n      {%- set empty_sql = sql | replace(\"__PERIOD_FILTER__\", 'false') -%}\n      {{create_table_as(False, target_relation, empty_sql)}}\n    {%- endcall %}\n  {%- endif %}\n\n  {% set _ = dbt_utils.get_period_boundaries(schema,\n                                              identifier,\n                                              timestamp_field,\n                                              start_date,\n                                              stop_date,\n                                              period) %}\n  {%- set start_timestamp = load_result('period_boundaries')['data'][0][0] | string -%}\n  {%- set stop_timestamp = load_result('period_boundaries')['data'][0][1] | string -%}\n  {%- set num_periods = load_result('period_boundaries')['data'][0][2] | int -%}\n\n  {% set target_columns = adapter.get_columns_in_relation(target_relation) %}\n  {%- set target_cols_csv = target_columns | map(attribute='quoted') | join(', ') -%}\n  {%- set loop_vars = {'sum_rows_inserted': 0} -%}\n\n  -- commit each period as a separate transaction\n  {% for i in range(num_periods) -%}\n    {%- set msg = \"Running for \" ~ period ~ \" \" ~ (i + 1) ~ \" of \" ~ (num_periods) -%}\n    {{ dbt_utils.log_info(msg) }}\n\n    {%- set tmp_identifier = model['name'] ~ '__dbt_incremental_period' ~ i ~ '_tmp' -%}\n    {%- set tmp_relation = api.Relation.create(identifier=tmp_identifier,\n                                               schema=schema, type='table') -%}\n    {% call statement() -%}\n      {% set tmp_table_sql = dbt_utils.get_period_sql(target_cols_csv,\n                                                       sql,\n                                                       timestamp_field,\n                                                       period,\n                                                       start_timestamp,\n                                                       stop_timestamp,\n                                                       i) %}\n      {{dbt.create_table_as(True, tmp_relation, tmp_table_sql)}}\n    {%- endcall %}\n\n    {{adapter.expand_target_column_types(from_relation=tmp_relation,\n                                         to_relation=target_relation)}}\n    {%- set name = 'main-' ~ i -%}\n    {% call statement(name, fetch_result=True) -%}\n      insert into {{target_relation}} ({{target_cols_csv}})\n      (\n          select\n              {{target_cols_csv}}\n          from {{tmp_relation.include(schema=False)}}\n      );\n    {%- endcall %}\n    {% set result = load_result('main-' ~ i) %}\n    {% if 'response' in result.keys() %} {# added in v0.19.0 #}\n        {% set rows_inserted = result['response']['rows_affected'] %}\n    {% else %} {# older versions #}\n        {% set rows_inserted = result['status'].split(\" \")[2] | int %}\n    {% endif %}\n    \n    {%- set sum_rows_inserted = loop_vars['sum_rows_inserted'] + rows_inserted -%}\n    {%- if loop_vars.update({'sum_rows_inserted': sum_rows_inserted}) %} {% endif -%}\n\n    {%- set msg = \"Ran for \" ~ period ~ \" \" ~ (i + 1) ~ \" of \" ~ (num_periods) ~ \"; \" ~ rows_inserted ~ \" records inserted\" -%}\n    {{ dbt_utils.log_info(msg) }}\n\n  {%- endfor %}\n\n  {% call statement() -%}\n    begin;\n  {%- endcall %}\n\n  {{run_hooks(post_hooks, inside_transaction=True)}}\n\n  {% call statement() -%}\n    commit;\n  {%- endcall %}\n\n  {{run_hooks(post_hooks, inside_transaction=False)}}\n\n  {%- set status_string = \"INSERT \" ~ loop_vars['sum_rows_inserted'] -%}\n\n  {% call noop_statement('main', status_string) -%}\n    -- no-op\n  {%- endcall %}\n\n  -- Return the relations created in this materialization\n  {{ return({'relations': [target_relation]}) }}  \n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt_utils.get_period_boundaries", "macro.dbt_utils.log_info", "macro.dbt_utils.get_period_sql", "macro.dbt.noop_statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5701048}, "macro.dbt_utils.pretty_time": {"unique_id": "macro.dbt_utils.pretty_time", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "name": "pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5709858}, "macro.dbt_utils.default__pretty_time": {"unique_id": "macro.dbt_utils.default__pretty_time", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "name": "default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5714252}, "macro.dbt_utils.slugify": {"unique_id": "macro.dbt_utils.slugify", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/slugify.sql", "original_file_path": "macros/jinja_helpers/slugify.sql", "name": "slugify", "macro_sql": "{% macro slugify(string) %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.572597}, "macro.dbt_utils.log_info": {"unique_id": "macro.dbt_utils.log_info", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "name": "log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.57331}, "macro.dbt_utils.default__log_info": {"unique_id": "macro.dbt_utils.default__log_info", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "name": "default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.573739}, "macro.dbt_utils.pretty_log_format": {"unique_id": "macro.dbt_utils.pretty_log_format", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "name": "pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.574452}, "macro.dbt_utils.default__pretty_log_format": {"unique_id": "macro.dbt_utils.default__pretty_log_format", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "name": "default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5748281}, "macro.dbt_utils.get_url_parameter": {"unique_id": "macro.dbt_utils.get_url_parameter", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "name": "get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5757675}, "macro.dbt_utils.default__get_url_parameter": {"unique_id": "macro.dbt_utils.default__get_url_parameter", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "name": "default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt_utils.split_part(dbt_utils.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.split_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5764976}, "macro.dbt_utils.get_url_path": {"unique_id": "macro.dbt_utils.get_url_path", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "name": "get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5775642}, "macro.dbt_utils.default__get_url_path": {"unique_id": "macro.dbt_utils.default__get_url_path", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "name": "default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url = \n        dbt_utils.replace(\n            dbt_utils.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{dbt_utils.position(\"'/'\", stripped_url)}}, 0),\n            {{dbt_utils.position(\"'?'\", stripped_url)}} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt_utils.split_part(\n            dbt_utils.right(\n                stripped_url, \n                dbt_utils.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ), \n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt_utils.safe_cast(\n        parsed_path,\n        dbt_utils.type_string()\n    )}}\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt_utils.position", "macro.dbt_utils.split_part", "macro.dbt_utils.right", "macro.dbt_utils.length", "macro.dbt_utils.safe_cast", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5789518}, "macro.dbt_utils.get_url_host": {"unique_id": "macro.dbt_utils.get_url_host", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "name": "get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.579804}, "macro.dbt_utils.default__get_url_host": {"unique_id": "macro.dbt_utils.default__get_url_host", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "name": "default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed =\n    dbt_utils.split_part(\n        dbt_utils.split_part(\n            dbt_utils.replace(\n                dbt_utils.replace(\n                    dbt_utils.replace(field, \"'android-app://'\", \"''\"\n                    ), \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n\n-%}\n\n\n    {{ dbt_utils.safe_cast(\n        parsed,\n        dbt_utils.type_string()\n        )}}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.split_part", "macro.dbt_utils.replace", "macro.dbt_utils.safe_cast", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.580939}, "macro.dbt_utils.test_expression_is_true": {"unique_id": "macro.dbt_utils.test_expression_is_true", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/expression_is_true.sql", "original_file_path": "macros/schema_tests/expression_is_true.sql", "name": "test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None, condition='1=1') %}\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name, condition)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5820582}, "macro.dbt_utils.default__test_expression_is_true": {"unique_id": "macro.dbt_utils.default__test_expression_is_true", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/expression_is_true.sql", "original_file_path": "macros/schema_tests/expression_is_true.sql", "name": "default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name, condition) %}\n\nwith meet_condition as (\n    select * from {{ model }} where {{ condition }}\n)\n\nselect\n    *\nfrom meet_condition\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5827208}, "macro.dbt_utils.test_not_constant": {"unique_id": "macro.dbt_utils.test_not_constant", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/not_constant.sql", "original_file_path": "macros/schema_tests/not_constant.sql", "name": "test_not_constant", "macro_sql": "{% test not_constant(model, column_name) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5835273}, "macro.dbt_utils.default__test_not_constant": {"unique_id": "macro.dbt_utils.default__test_not_constant", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/not_constant.sql", "original_file_path": "macros/schema_tests/not_constant.sql", "name": "default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name) %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5839298}, "macro.dbt_utils.test_sequential_values": {"unique_id": "macro.dbt_utils.test_sequential_values", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/sequential_values.sql", "original_file_path": "macros/schema_tests/sequential_values.sql", "name": "test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart)) }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5852442}, "macro.dbt_utils.default__test_sequential_values": {"unique_id": "macro.dbt_utils.default__test_sequential_values", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/sequential_values.sql", "original_file_path": "macros/schema_tests/sequential_values.sql", "name": "default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None) %}\n\nwith windowed as (\n\n    select\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            order by {{ column_name }}\n        ) as previous_{{ column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt_utils.type_timestamp() }})= cast({{ dbt_utils.dateadd(datepart, interval, 'previous_' + column_name) }} as {{ dbt_utils.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = previous_{{ column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.586735}, "macro.dbt_utils.test_not_null_proportion": {"unique_id": "macro.dbt_utils.test_not_null_proportion", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/not_null_proportion.sql", "original_file_path": "macros/schema_tests/not_null_proportion.sql", "name": "test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, **kwargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5877147}, "macro.dbt_utils.default__test_not_null_proportion": {"unique_id": "macro.dbt_utils.default__test_not_null_proportion", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/not_null_proportion.sql", "original_file_path": "macros/schema_tests/not_null_proportion.sql", "name": "default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\nwith validation as (\n  select\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from {{ model }}\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.588841}, "macro.dbt_utils.test_at_least_one": {"unique_id": "macro.dbt_utils.test_at_least_one", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/at_least_one.sql", "original_file_path": "macros/schema_tests/at_least_one.sql", "name": "test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5896883}, "macro.dbt_utils.default__test_at_least_one": {"unique_id": "macro.dbt_utils.default__test_at_least_one", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/at_least_one.sql", "original_file_path": "macros/schema_tests/at_least_one.sql", "name": "default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name) %}\n\nselect *\nfrom (\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      count({{ column_name }}) as filler_column\n\n    from {{ model }}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5900986}, "macro.dbt_utils.test_equality": {"unique_id": "macro.dbt_utils.test_equality", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/equality.sql", "original_file_path": "macros/schema_tests/equality.sql", "name": "test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.591747}, "macro.dbt_utils.default__test_equality": {"unique_id": "macro.dbt_utils.default__test_equality", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/equality.sql", "original_file_path": "macros/schema_tests/equality.sql", "name": "default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None) %}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{#-\nIf the compare_cols arg is provided, we can run this test without querying the\ninformation schema\u00a0\u2014 this allows the model to be an ephemeral model\n-#}\n\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set compare_columns = adapter.get_columns_in_relation(model) | map(attribute='quoted') -%}\n{%- endif -%}\n\n{% set compare_cols_csv = compare_columns | join(', ') %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt_utils.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt_utils.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5937557}, "macro.dbt_utils.test_not_null_where": {"unique_id": "macro.dbt_utils.test_not_null_where", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/test_not_null_where.sql", "original_file_path": "macros/schema_tests/test_not_null_where.sql", "name": "test_not_null_where", "macro_sql": "{% test not_null_where(model, column_name) %}\r\n  {%- set deprecation_warning = '\r\n    Warning: `dbt_utils.not_null_where` is no longer supported.\r\n    Starting in dbt v0.20.0, the built-in `not_null` test supports a `where` config.\r\n    ' -%}\r\n  {%- do exceptions.warn(deprecation_warning) -%}\r\n  {{ return(adapter.dispatch('test_not_null_where', 'dbt_utils')(model, column_name)) }}\r\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5947764}, "macro.dbt_utils.default__test_not_null_where": {"unique_id": "macro.dbt_utils.default__test_not_null_where", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/test_not_null_where.sql", "original_file_path": "macros/schema_tests/test_not_null_where.sql", "name": "default__test_not_null_where", "macro_sql": "{% macro default__test_not_null_where(model, column_name) %}\r\n  {{ return(test_not_null(model, column_name)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.595156}, "macro.dbt_utils.test_equal_rowcount": {"unique_id": "macro.dbt_utils.test_equal_rowcount", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/equal_rowcount.sql", "original_file_path": "macros/schema_tests/equal_rowcount.sql", "name": "test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5960667}, "macro.dbt_utils.default__test_equal_rowcount": {"unique_id": "macro.dbt_utils.default__test_equal_rowcount", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/equal_rowcount.sql", "original_file_path": "macros/schema_tests/equal_rowcount.sql", "name": "default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'coalesce(diff_count, 0)') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\nwith a as (\n\n    select count(*) as count_a from {{ model }}\n\n),\nb as (\n\n    select count(*) as count_b from {{ compare_model }}\n\n),\nfinal as (\n\n    select\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n    from a\n    cross join b\n\n)\n\nselect * from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5968711}, "macro.dbt_utils.test_not_accepted_values": {"unique_id": "macro.dbt_utils.test_not_accepted_values", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/not_accepted_values.sql", "original_file_path": "macros/schema_tests/not_accepted_values.sql", "name": "test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5980625}, "macro.dbt_utils.default__test_not_accepted_values": {"unique_id": "macro.dbt_utils.default__test_not_accepted_values", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/not_accepted_values.sql", "original_file_path": "macros/schema_tests/not_accepted_values.sql", "name": "default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5989134}, "macro.dbt_utils.test_unique_where": {"unique_id": "macro.dbt_utils.test_unique_where", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/test_unique_where.sql", "original_file_path": "macros/schema_tests/test_unique_where.sql", "name": "test_unique_where", "macro_sql": "{% test unique_where(model, column_name) %}\r\n  {%- set deprecation_warning = '\r\n    Warning: `dbt_utils.unique_where` is no longer supported.\r\n    Starting in dbt v0.20.0, the built-in `unique` test supports a `where` config.\r\n    ' -%}\r\n  {%- do exceptions.warn(deprecation_warning) -%}\r\n  {{ return(adapter.dispatch('test_unique_where', 'dbt_utils')(model, column_name)) }}\r\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.5998995}, "macro.dbt_utils.default__test_unique_where": {"unique_id": "macro.dbt_utils.default__test_unique_where", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/test_unique_where.sql", "original_file_path": "macros/schema_tests/test_unique_where.sql", "name": "default__test_unique_where", "macro_sql": "{% macro default__test_unique_where(model, column_name) %}\r\n  {{ return(test_unique(model, column_name)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6002758}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/schema_tests/mutually_exclusive_ranges.sql", "name": "test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6054065}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/schema_tests/mutually_exclusive_ranges.sql", "name": "default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }} as partition_by_col,\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions nore cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6089013}, "macro.dbt_utils.test_relationships_where": {"unique_id": "macro.dbt_utils.test_relationships_where", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/relationships_where.sql", "original_file_path": "macros/schema_tests/relationships_where.sql", "name": "test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6102943}, "macro.dbt_utils.default__test_relationships_where": {"unique_id": "macro.dbt_utils.default__test_relationships_where", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/relationships_where.sql", "original_file_path": "macros/schema_tests/relationships_where.sql", "name": "default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6110394}, "macro.dbt_utils.test_accepted_range": {"unique_id": "macro.dbt_utils.test_accepted_range", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/accepted_range.sql", "original_file_path": "macros/schema_tests/accepted_range.sql", "name": "test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6124697}, "macro.dbt_utils.default__test_accepted_range": {"unique_id": "macro.dbt_utils.default__test_accepted_range", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/accepted_range.sql", "original_file_path": "macros/schema_tests/accepted_range.sql", "name": "default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6135309}, "macro.dbt_utils.test_fewer_rows_than": {"unique_id": "macro.dbt_utils.test_fewer_rows_than", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/fewer_rows_than.sql", "original_file_path": "macros/schema_tests/fewer_rows_than.sql", "name": "test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6146429}, "macro.dbt_utils.default__test_fewer_rows_than": {"unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/fewer_rows_than.sql", "original_file_path": "macros/schema_tests/fewer_rows_than.sql", "name": "default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model) %}\n\n{{ config(fail_calc = 'coalesce(row_count_delta, 0)') }}\n\nwith a as (\n\n    select count(*) as count_our_model from {{ model }}\n\n),\nb as (\n\n    select count(*) as count_comparison_model from {{ compare_model }}\n\n),\ncounts as (\n\n    select\n        count_our_model,\n        count_comparison_model\n    from a\n    cross join b\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6151388}, "macro.dbt_utils.test_unique_combination_of_columns": {"unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/unique_combination_of_columns.sql", "original_file_path": "macros/schema_tests/unique_combination_of_columns.sql", "name": "test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6164176}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/unique_combination_of_columns.sql", "original_file_path": "macros/schema_tests/unique_combination_of_columns.sql", "name": "default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6179516}, "macro.dbt_utils.test_recency": {"unique_id": "macro.dbt_utils.test_recency", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/recency.sql", "original_file_path": "macros/schema_tests/recency.sql", "name": "test_recency", "macro_sql": "{% test recency(model, field, datepart, interval) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.618907}, "macro.dbt_utils.default__test_recency": {"unique_id": "macro.dbt_utils.default__test_recency", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/recency.sql", "original_file_path": "macros/schema_tests/recency.sql", "name": "default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval) %}\n\n{% set threshold = dbt_utils.dateadd(datepart, interval * -1, dbt_utils.current_timestamp()) %}\n\nwith recency as (\n\n    select max({{field}}) as most_recent\n    from {{ model }}\n\n)\n\nselect\n\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6196296}, "macro.dbt_utils.test_cardinality_equality": {"unique_id": "macro.dbt_utils.test_cardinality_equality", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/cardinality_equality.sql", "original_file_path": "macros/schema_tests/cardinality_equality.sql", "name": "test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6207821}, "macro.dbt_utils.default__test_cardinality_equality": {"unique_id": "macro.dbt_utils.default__test_cardinality_equality", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/schema_tests/cardinality_equality.sql", "original_file_path": "macros/schema_tests/cardinality_equality.sql", "name": "default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt_utils.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt_utils.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6215506}, "macro.dbt_utils.split_part": {"unique_id": "macro.dbt_utils.split_part", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt_utils') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__split_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6226418}, "macro.dbt_utils.default__split_part": {"unique_id": "macro.dbt_utils.default__split_part", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.623018}, "macro.dbt_utils.bigquery__split_part": {"unique_id": "macro.dbt_utils.bigquery__split_part", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "bigquery__split_part", "macro_sql": "{% macro bigquery__split_part(string_text, delimiter_text, part_number) %}\n\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset({{ part_number - 1 }})]\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6234128}, "macro.dbt_utils.length": {"unique_id": "macro.dbt_utils.length", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__length"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6241658}, "macro.dbt_utils.default__length": {"unique_id": "macro.dbt_utils.default__length", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "default__length", "macro_sql": "{% macro default__length(expression) %}\n    \n    length(\n        {{ expression }}\n    )\n    \n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6244326}, "macro.dbt_utils.redshift__length": {"unique_id": "macro.dbt_utils.redshift__length", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "redshift__length", "macro_sql": "{% macro redshift__length(expression) %}\n\n    len(\n        {{ expression }}\n    )\n    \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6246712}, "macro.dbt_utils.current_timestamp": {"unique_id": "macro.dbt_utils.current_timestamp", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ return(adapter.dispatch('current_timestamp', 'dbt_utils')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.625844}, "macro.dbt_utils.default__current_timestamp": {"unique_id": "macro.dbt_utils.default__current_timestamp", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() %}\n    current_timestamp::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.626258}, "macro.dbt_utils.redshift__current_timestamp": {"unique_id": "macro.dbt_utils.redshift__current_timestamp", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "redshift__current_timestamp", "macro_sql": "{% macro redshift__current_timestamp() %}\n    getdate()\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6264482}, "macro.dbt_utils.bigquery__current_timestamp": {"unique_id": "macro.dbt_utils.bigquery__current_timestamp", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "bigquery__current_timestamp", "macro_sql": "{% macro bigquery__current_timestamp() %}\n    current_timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6266167}, "macro.dbt_utils.current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "current_timestamp_in_utc", "macro_sql": "{% macro current_timestamp_in_utc() -%}\n  {{ return(adapter.dispatch('current_timestamp_in_utc', 'dbt_utils')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.postgres__current_timestamp_in_utc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6269639}, "macro.dbt_utils.default__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.default__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "default__current_timestamp_in_utc", "macro_sql": "{% macro default__current_timestamp_in_utc() %}\n    {{dbt_utils.current_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6273289}, "macro.dbt_utils.snowflake__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.snowflake__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "snowflake__current_timestamp_in_utc", "macro_sql": "{% macro snowflake__current_timestamp_in_utc() %}\n    convert_timezone('UTC', {{dbt_utils.current_timestamp()}})::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6276627}, "macro.dbt_utils.postgres__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.postgres__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "postgres__current_timestamp_in_utc", "macro_sql": "{% macro postgres__current_timestamp_in_utc() %}\n    (current_timestamp at time zone 'utc')::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6279202}, "macro.dbt_utils.redshift__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.redshift__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "redshift__current_timestamp_in_utc", "macro_sql": "{% macro redshift__current_timestamp_in_utc() %}\n    {{ return(dbt_utils.default__current_timestamp_in_utc()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__current_timestamp_in_utc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6282144}, "macro.dbt_utils.right": {"unique_id": "macro.dbt_utils.right", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt_utils') (string_text, length_expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__right"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6293576}, "macro.dbt_utils.default__right": {"unique_id": "macro.dbt_utils.default__right", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n    \n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6297014}, "macro.dbt_utils.bigquery__right": {"unique_id": "macro.dbt_utils.bigquery__right", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "bigquery__right", "macro_sql": "{% macro bigquery__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0 \n        then ''\n    else \n        substr(\n            {{ string_text }},\n            -1 * ({{ length_expression }})\n        )\n    end\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6300552}, "macro.dbt_utils.snowflake__right": {"unique_id": "macro.dbt_utils.snowflake__right", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "snowflake__right", "macro_sql": "{% macro snowflake__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0 \n        then ''\n    else \n        right(\n            {{ string_text }},\n            {{ length_expression }}\n        )\n    end\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6304066}, "macro.dbt_utils.hash": {"unique_id": "macro.dbt_utils.hash", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt_utils') (field)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6311834}, "macro.dbt_utils.default__hash": {"unique_id": "macro.dbt_utils.default__hash", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{field}} as {{dbt_utils.type_string()}}))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.631506}, "macro.dbt_utils.bigquery__hash": {"unique_id": "macro.dbt_utils.bigquery__hash", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "bigquery__hash", "macro_sql": "{% macro bigquery__hash(field) -%}\n    to_hex({{dbt_utils.default__hash(field)}})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6317966}, "macro.dbt_utils.replace": {"unique_id": "macro.dbt_utils.replace", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/replace.sql", "original_file_path": "macros/cross_db_utils/replace.sql", "name": "replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt_utils') (field, old_chars, new_chars)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6327307}, "macro.dbt_utils.default__replace": {"unique_id": "macro.dbt_utils.default__replace", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/replace.sql", "original_file_path": "macros/cross_db_utils/replace.sql", "name": "default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n    \n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.633111}, "macro.dbt_utils.cast_bool_to_text": {"unique_id": "macro.dbt_utils.cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt_utils') (field) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6339185}, "macro.dbt_utils.default__cast_bool_to_text": {"unique_id": "macro.dbt_utils.default__cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ dbt_utils.type_string() }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6342406}, "macro.dbt_utils.redshift__cast_bool_to_text": {"unique_id": "macro.dbt_utils.redshift__cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "redshift__cast_bool_to_text", "macro_sql": "{% macro redshift__cast_bool_to_text(field) %}\n    case\n        when {{ field }} is true then 'true'\n        when {{ field }} is false then 'false'\n    end::text\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6345236}, "macro.dbt_utils.concat": {"unique_id": "macro.dbt_utils.concat", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt_utils')(fields)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.635185}, "macro.dbt_utils.default__concat": {"unique_id": "macro.dbt_utils.default__concat", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.63547}, "macro.dbt_utils._is_relation": {"unique_id": "macro.dbt_utils._is_relation", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/_is_relation.sql", "original_file_path": "macros/cross_db_utils/_is_relation.sql", "name": "_is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6367009}, "macro.dbt_utils.identifier": {"unique_id": "macro.dbt_utils.identifier", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "identifier", "macro_sql": "{% macro identifier(value) %}\t\n  {%- set error_message = '\n    Warning: the `identifier` macro is no longer supported and will be deprecated in a future release of dbt-utils. \\\n    Use `adapter.quote` instead. The {}.{} model triggered this warning. \\\n    '.format(model.package_name, model.name) -%}\n  {%- do exceptions.warn(error_message) -%}\n  {{ return(adapter.dispatch('identifier', 'dbt_utils') (value)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__identifier"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6379368}, "macro.dbt_utils.default__identifier": {"unique_id": "macro.dbt_utils.default__identifier", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "default__identifier", "macro_sql": "{% macro default__identifier(value) -%}\t\n    \"{{ value }}\"\t\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.638195}, "macro.dbt_utils.bigquery__identifier": {"unique_id": "macro.dbt_utils.bigquery__identifier", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "bigquery__identifier", "macro_sql": "{% macro bigquery__identifier(value) -%}\t\n    `{{ value }}`\t\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6384246}, "macro.dbt_utils.datediff": {"unique_id": "macro.dbt_utils.datediff", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt_utils')(first_date, second_date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.postgres__datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6428478}, "macro.dbt_utils.default__datediff": {"unique_id": "macro.dbt_utils.default__datediff", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) %}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.64323}, "macro.dbt_utils.bigquery__datediff": {"unique_id": "macro.dbt_utils.bigquery__datediff", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "bigquery__datediff", "macro_sql": "{% macro bigquery__datediff(first_date, second_date, datepart) %}\n\n    datetime_diff(\n        cast({{second_date}} as datetime),\n        cast({{first_date}} as datetime),\n        {{datepart}}\n    )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6435897}, "macro.dbt_utils.postgres__datediff": {"unique_id": "macro.dbt_utils.postgres__datediff", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "postgres__datediff", "macro_sql": "{% macro postgres__datediff(first_date, second_date, datepart) %}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6472335}, "macro.dbt_utils.redshift__datediff": {"unique_id": "macro.dbt_utils.redshift__datediff", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "redshift__datediff", "macro_sql": "{% macro redshift__datediff(first_date, second_date, datepart) %}\n\n    {{ return(dbt_utils.default__datediff(first_date, second_date, datepart)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6477046}, "macro.dbt_utils.dateadd": {"unique_id": "macro.dbt_utils.dateadd", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt_utils')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.postgres__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6489973}, "macro.dbt_utils.default__dateadd": {"unique_id": "macro.dbt_utils.default__dateadd", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6493719}, "macro.dbt_utils.bigquery__dateadd": {"unique_id": "macro.dbt_utils.bigquery__dateadd", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "bigquery__dateadd", "macro_sql": "{% macro bigquery__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n        datetime_add(\n            cast( {{ from_date_or_timestamp }} as datetime),\n        interval {{ interval }} {{ datepart }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6497602}, "macro.dbt_utils.postgres__dateadd": {"unique_id": "macro.dbt_utils.postgres__dateadd", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "postgres__dateadd", "macro_sql": "{% macro postgres__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6501184}, "macro.dbt_utils.redshift__dateadd": {"unique_id": "macro.dbt_utils.redshift__dateadd", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "redshift__dateadd", "macro_sql": "{% macro redshift__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ return(dbt_utils.default__dateadd(datepart, interval, from_date_or_timestamp)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6505444}, "macro.dbt_utils.type_string": {"unique_id": "macro.dbt_utils.type_string", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.postgres__type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6518717}, "macro.dbt_utils.default__type_string": {"unique_id": "macro.dbt_utils.default__type_string", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_string", "macro_sql": "{% macro default__type_string() %}\n    string\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6520536}, "macro.dbt_utils.redshift__type_string": {"unique_id": "macro.dbt_utils.redshift__type_string", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "redshift__type_string", "macro_sql": "\n\n{%- macro redshift__type_string() -%}\n    varchar\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6522236}, "macro.dbt_utils.postgres__type_string": {"unique_id": "macro.dbt_utils.postgres__type_string", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "postgres__type_string", "macro_sql": "{% macro postgres__type_string() %}\n    varchar\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6524026}, "macro.dbt_utils.snowflake__type_string": {"unique_id": "macro.dbt_utils.snowflake__type_string", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_string", "macro_sql": "{% macro snowflake__type_string() %}\n    varchar\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.652569}, "macro.dbt_utils.type_timestamp": {"unique_id": "macro.dbt_utils.type_timestamp", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6530197}, "macro.dbt_utils.default__type_timestamp": {"unique_id": "macro.dbt_utils.default__type_timestamp", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6532044}, "macro.dbt_utils.snowflake__type_timestamp": {"unique_id": "macro.dbt_utils.snowflake__type_timestamp", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_timestamp", "macro_sql": "{% macro snowflake__type_timestamp() %}\n    timestamp_ntz\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.653371}, "macro.dbt_utils.type_float": {"unique_id": "macro.dbt_utils.type_float", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.653897}, "macro.dbt_utils.default__type_float": {"unique_id": "macro.dbt_utils.default__type_float", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_float", "macro_sql": "{% macro default__type_float() %}\n    float\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.654082}, "macro.dbt_utils.bigquery__type_float": {"unique_id": "macro.dbt_utils.bigquery__type_float", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_float", "macro_sql": "{% macro bigquery__type_float() %}\n    float64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.654246}, "macro.dbt_utils.type_numeric": {"unique_id": "macro.dbt_utils.type_numeric", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6545925}, "macro.dbt_utils.default__type_numeric": {"unique_id": "macro.dbt_utils.default__type_numeric", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    numeric(28, 6)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6547647}, "macro.dbt_utils.bigquery__type_numeric": {"unique_id": "macro.dbt_utils.bigquery__type_numeric", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_numeric", "macro_sql": "{% macro bigquery__type_numeric() %}\n    numeric\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6549268}, "macro.dbt_utils.type_bigint": {"unique_id": "macro.dbt_utils.type_bigint", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.655276}, "macro.dbt_utils.default__type_bigint": {"unique_id": "macro.dbt_utils.default__type_bigint", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    bigint\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.655463}, "macro.dbt_utils.bigquery__type_bigint": {"unique_id": "macro.dbt_utils.bigquery__type_bigint", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_bigint", "macro_sql": "{% macro bigquery__type_bigint() %}\n    int64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6556318}, "macro.dbt_utils.type_int": {"unique_id": "macro.dbt_utils.type_int", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6559827}, "macro.dbt_utils.default__type_int": {"unique_id": "macro.dbt_utils.default__type_int", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_int", "macro_sql": "{% macro default__type_int() %}\n    int\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6561553}, "macro.dbt_utils.bigquery__type_int": {"unique_id": "macro.dbt_utils.bigquery__type_int", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_int", "macro_sql": "{% macro bigquery__type_int() %}\n    int64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6563313}, "macro.dbt_utils.position": {"unique_id": "macro.dbt_utils.position", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt_utils') (substring_text, string_text)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__position"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6571975}, "macro.dbt_utils.default__position": {"unique_id": "macro.dbt_utils.default__position", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n    \n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.657537}, "macro.dbt_utils.bigquery__position": {"unique_id": "macro.dbt_utils.bigquery__position", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "bigquery__position", "macro_sql": "{% macro bigquery__position(substring_text, string_text) %}\n\n    strpos(\n        {{ string_text }},\n        {{ substring_text }}\n        \n    )\n    \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6578484}, "macro.dbt_utils.string_literal": {"unique_id": "macro.dbt_utils.string_literal", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/literal.sql", "original_file_path": "macros/cross_db_utils/literal.sql", "name": "string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt_utils') (value)) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6586227}, "macro.dbt_utils.default__string_literal": {"unique_id": "macro.dbt_utils.default__string_literal", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/literal.sql", "original_file_path": "macros/cross_db_utils/literal.sql", "name": "default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6588752}, "macro.dbt_utils._is_ephemeral": {"unique_id": "macro.dbt_utils._is_ephemeral", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/_is_ephemeral.sql", "original_file_path": "macros/cross_db_utils/_is_ephemeral.sql", "name": "_is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.660715}, "macro.dbt_utils.width_bucket": {"unique_id": "macro.dbt_utils.width_bucket", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6631668}, "macro.dbt_utils.default__width_bucket": {"unique_id": "macro.dbt_utils.default__width_bucket", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt_utils.safe_cast(expr, dbt_utils.type_numeric() ) }},\n                    {{ dbt_utils.safe_cast(bin_size, dbt_utils.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.safe_cast", "macro.dbt_utils.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6643093}, "macro.dbt_utils.redshift__width_bucket": {"unique_id": "macro.dbt_utils.redshift__width_bucket", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "redshift__width_bucket", "macro_sql": "{% macro redshift__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is exactly at the bucket edge\n        case\n            when\n                {{ dbt_utils.safe_cast(expr, dbt_utils.type_numeric() ) }} %\n                {{ dbt_utils.safe_cast(bin_size, dbt_utils.type_numeric() ) }}\n                 = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.safe_cast", "macro.dbt_utils.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6654904}, "macro.dbt_utils.snowflake__width_bucket": {"unique_id": "macro.dbt_utils.snowflake__width_bucket", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6659458}, "macro.dbt_utils.date_trunc": {"unique_id": "macro.dbt_utils.date_trunc", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt_utils') (datepart, date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6667655}, "macro.dbt_utils.default__date_trunc": {"unique_id": "macro.dbt_utils.default__date_trunc", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) %}\n    date_trunc('{{datepart}}', {{date}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.66707}, "macro.dbt_utils.bigquery__date_trunc": {"unique_id": "macro.dbt_utils.bigquery__date_trunc", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "bigquery__date_trunc", "macro_sql": "{% macro bigquery__date_trunc(datepart, date) %}\n    timestamp_trunc(\n        cast({{date}} as timestamp),\n        {{datepart}}\n    )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6673622}, "macro.dbt_utils.except": {"unique_id": "macro.dbt_utils.except", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt_utils')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.668019}, "macro.dbt_utils.default__except": {"unique_id": "macro.dbt_utils.default__except", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.668198}, "macro.dbt_utils.bigquery__except": {"unique_id": "macro.dbt_utils.bigquery__except", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "bigquery__except", "macro_sql": "{% macro bigquery__except() %}\n\n    except distinct\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6684854}, "macro.dbt_utils.safe_cast": {"unique_id": "macro.dbt_utils.safe_cast", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt_utils') (field, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.66935}, "macro.dbt_utils.default__safe_cast": {"unique_id": "macro.dbt_utils.default__safe_cast", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.669846}, "macro.dbt_utils.snowflake__safe_cast": {"unique_id": "macro.dbt_utils.snowflake__safe_cast", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "snowflake__safe_cast", "macro_sql": "{% macro snowflake__safe_cast(field, type) %}\n    try_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6703446}, "macro.dbt_utils.bigquery__safe_cast": {"unique_id": "macro.dbt_utils.bigquery__safe_cast", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "bigquery__safe_cast", "macro_sql": "{% macro bigquery__safe_cast(field, type) %}\n    safe_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.670667}, "macro.dbt_utils.last_day": {"unique_id": "macro.dbt_utils.last_day", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt_utils') (date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.postgres__last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6718423}, "macro.dbt_utils.default_last_day": {"unique_id": "macro.dbt_utils.default_last_day", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "default_last_day", "macro_sql": "\n\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt_utils.dateadd('day', '-1',\n        dbt_utils.dateadd(datepart, '1', dbt_utils.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6724262}, "macro.dbt_utils.default__last_day": {"unique_id": "macro.dbt_utils.default__last_day", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt_utils.default_last_day(date, datepart)}}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6727548}, "macro.dbt_utils.postgres__last_day": {"unique_id": "macro.dbt_utils.postgres__last_day", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "postgres__last_day", "macro_sql": "{% macro postgres__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- postgres dateadd does not support quarter interval.\n    cast(\n        {{dbt_utils.dateadd('day', '-1',\n        dbt_utils.dateadd('month', '3', dbt_utils.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt_utils.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.date_trunc", "macro.dbt_utils.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6737158}, "macro.dbt_utils.redshift__last_day": {"unique_id": "macro.dbt_utils.redshift__last_day", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "redshift__last_day", "macro_sql": "{% macro redshift__last_day(date, datepart) %}\n\n    {{ return(dbt_utils.default__last_day(date, datepart)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.674119}, "macro.dbt_utils.intersect": {"unique_id": "macro.dbt_utils.intersect", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt_utils')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.674805}, "macro.dbt_utils.default__intersect": {"unique_id": "macro.dbt_utils.default__intersect", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6749892}, "macro.dbt_utils.bigquery__intersect": {"unique_id": "macro.dbt_utils.bigquery__intersect", "package_name": "dbt_utils", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "bigquery__intersect", "macro_sql": "{% macro bigquery__intersect() %}\n\n    intersect distinct\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.675157}, "macro.dbt_external_tables.bigquery__get_external_build_plan": {"unique_id": "macro.dbt_external_tables.bigquery__get_external_build_plan", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/bigquery/get_external_build_plan.sql", "original_file_path": "macros/plugins/bigquery/get_external_build_plan.sql", "name": "bigquery__get_external_build_plan", "macro_sql": "{% macro bigquery__get_external_build_plan(source_node) %}\n\n    {% set build_plan = [] %}\n    \n    {% set old_relation = adapter.get_relation(\n        database = source_node.database,\n        schema = source_node.schema,\n        identifier = source_node.identifier\n    ) %}\n    \n    {% set create_or_replace = (old_relation is none or var('ext_full_refresh', false)) %}\n\n    {% if create_or_replace %}\n        {% set build_plan = build_plan + [dbt_external_tables.create_external_table(source_node)] %}\n    {% else %}\n        {% set build_plan = build_plan + dbt_external_tables.refresh_external_table(source_node) %}\n    {% endif %}\n\n    {% do return(build_plan) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_external_tables.create_external_table", "macro.dbt_external_tables.refresh_external_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6771636}, "macro.dbt_external_tables.bigquery__create_external_table": {"unique_id": "macro.dbt_external_tables.bigquery__create_external_table", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/bigquery/create_external_table.sql", "original_file_path": "macros/plugins/bigquery/create_external_table.sql", "name": "bigquery__create_external_table", "macro_sql": "{% macro bigquery__create_external_table(source_node) %}\n\n    {%- set columns = source_node.columns.values() -%}\n    {%- set external = source_node.external -%}\n    {%- set partitions = external.partitions -%}\n    {%- set options = external.options -%}\n    \n    {%- set uris = [] -%}\n    {%- if options is mapping and options.get('uris', none) -%}\n        {%- set uris = external.options.get('uris') -%}\n    {%- else -%}\n        {%- set uris = [external.location] -%}\n    {%- endif -%}\n\n    create or replace external table {{source(source_node.source_name, source_node.name)}}\n        {%- if columns -%}(\n            {% for column in columns %}\n                {{column.name}} {{column.data_type}} {{- ',' if not loop.last -}}\n            {%- endfor -%}\n        )\n        {% endif %}\n        {% if options and options.get('hive_partition_uri_prefix', none) %}\n        with partition columns {%- if partitions %} (\n            {%- for partition in partitions %}\n                {{partition.name}} {{partition.data_type}}{{',' if not loop.last}}\n            {%- endfor -%}\n        ) {% endif -%}\n        {% endif %}\n        options (\n            uris = [{%- for uri in uris -%} '{{uri}}' {{- \",\" if not loop.last}} {%- endfor -%}]\n            {%- if options is mapping -%}\n            {%- for key, value in options.items() if key != 'uris' %}\n                {%- if value is string -%}\n                , {{key}} = '{{value}}'\n                {%- else -%}\n                , {{key}} = {{value}}\n                {%- endif -%}\n            {%- endfor -%}\n            {%- endif -%}\n        )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.682586}, "macro.dbt_external_tables.snowflake__refresh_external_table": {"unique_id": "macro.dbt_external_tables.snowflake__refresh_external_table", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/snowflake/refresh_external_table.sql", "original_file_path": "macros/plugins/snowflake/refresh_external_table.sql", "name": "snowflake__refresh_external_table", "macro_sql": "{% macro snowflake__refresh_external_table(source_node) %}\n\n    {% set external = source_node.external %}\n    {% set snowpipe = source_node.external.get('snowpipe', none) %}\n    \n    {% set auto_refresh = external.get('auto_refresh', false) %}\n    {% set partitions = external.get('partitions', none) %}\n    \n    {% set manual_refresh = (partitions and not auto_refresh) %}\n    \n    {% if manual_refresh %}\n\n        {% set ddl %}\n        begin;\n        alter external table {{source(source_node.source_name, source_node.name)}} refresh;\n        commit;\n        {% endset %}\n        \n        {% do return([ddl]) %}\n    \n    {% else %}\n    \n        {% do return([]) %}\n    \n    {% endif %}\n    \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6848705}, "macro.dbt_external_tables.snowflake__get_external_build_plan": {"unique_id": "macro.dbt_external_tables.snowflake__get_external_build_plan", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/snowflake/get_external_build_plan.sql", "original_file_path": "macros/plugins/snowflake/get_external_build_plan.sql", "name": "snowflake__get_external_build_plan", "macro_sql": "{% macro snowflake__get_external_build_plan(source_node) %}\n\n    {% set build_plan = [] %}\n    \n    {% set old_relation = adapter.get_relation(\n        database = source_node.database,\n        schema = source_node.schema,\n        identifier = source_node.identifier\n    ) %}\n    \n    {% set create_or_replace = (old_relation is none or var('ext_full_refresh', false)) %}\n\n    {% if source_node.external.get('snowpipe', none) is not none %}\n    \n        {% if create_or_replace %}\n            {% set build_plan = build_plan + [\n                dbt_external_tables.snowflake_create_empty_table(source_node),\n                dbt_external_tables.snowflake_get_copy_sql(source_node, explicit_transaction=true),\n                dbt_external_tables.snowflake_create_snowpipe(source_node)\n            ] %}\n        {% else %}\n            {% set build_plan = build_plan + dbt_external_tables.snowflake_refresh_snowpipe(source_node) %}\n        {% endif %}\n            \n    {% else %}\n    \n        {% if create_or_replace %}\n            {% set build_plan = build_plan + [dbt_external_tables.create_external_table(source_node)] %}\n        {% else %}\n            {% set build_plan = build_plan + dbt_external_tables.refresh_external_table(source_node) %}\n        {% endif %}\n        \n    {% endif %}\n\n    {% do return(build_plan) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_external_tables.snowflake_create_empty_table", "macro.dbt_external_tables.snowflake_get_copy_sql", "macro.dbt_external_tables.snowflake_create_snowpipe", "macro.dbt_external_tables.snowflake_refresh_snowpipe", "macro.dbt_external_tables.create_external_table", "macro.dbt_external_tables.refresh_external_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6880982}, "macro.dbt_external_tables.snowflake__create_external_table": {"unique_id": "macro.dbt_external_tables.snowflake__create_external_table", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/snowflake/create_external_table.sql", "original_file_path": "macros/plugins/snowflake/create_external_table.sql", "name": "snowflake__create_external_table", "macro_sql": "{% macro snowflake__create_external_table(source_node) %}\n\n    {%- set columns = source_node.columns.values() -%}\n    {%- set external = source_node.external -%}\n    {%- set partitions = external.partitions -%}\n\n    {%- set is_csv = dbt_external_tables.is_csv(external.file_format) -%}\n\n{# https://docs.snowflake.net/manuals/sql-reference/sql/create-external-table.html #}\n{# This assumes you have already created an external stage #}\n    create or replace external table {{source(source_node.source_name, source_node.name)}}\n    {%- if columns or partitions -%}\n    (\n        {%- if partitions -%}{%- for partition in partitions %}\n            {{partition.name}} {{partition.data_type}} as {{partition.expression}}{{- ',' if not loop.last or columns|length > 0 -}}\n        {%- endfor -%}{%- endif -%}\n        {%- for column in columns %}\n            {%- set column_quoted = adapter.quote(column.name) if column.quote else column.name %}\n            {%- set col_expression -%}\n                {%- set col_id = 'value:c' ~ loop.index if is_csv else 'value:' ~ column.name -%}\n                (case when is_null_value({{col_id}}) or lower({{col_id}}) = 'null' then null else {{col_id}} end)\n            {%- endset %}\n            {{column_quoted}} {{column.data_type}} as ({{col_expression}}::{{column.data_type}})\n            {{- ',' if not loop.last -}}\n        {% endfor %}\n    )\n    {%- endif -%}\n    {% if partitions %} partition by ({{partitions|map(attribute='name')|join(', ')}}) {% endif %}\n    location = {{external.location}} {# stage #}\n    {% if external.auto_refresh in (true, false) -%}\n      auto_refresh = {{external.auto_refresh}}\n    {%- endif %}\n    {% if external.pattern -%} pattern = '{{external.pattern}}' {%- endif %}\n    {% if external.integration -%} integration = '{{external.integration}}' {%- endif %}\n    file_format = {{external.file_format}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_external_tables.is_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6931138}, "macro.dbt_external_tables.snowflake_create_snowpipe": {"unique_id": "macro.dbt_external_tables.snowflake_create_snowpipe", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/snowflake/snowpipe/create_snowpipe.sql", "original_file_path": "macros/plugins/snowflake/snowpipe/create_snowpipe.sql", "name": "snowflake_create_snowpipe", "macro_sql": "{% macro snowflake_create_snowpipe(source_node) %}\n\n    {%- set external = source_node.external -%}\n    {%- set snowpipe = external.snowpipe -%}\n\n{# https://docs.snowflake.com/en/sql-reference/sql/create-pipe.html #}\n    create or replace pipe {{source(source_node.source_name, source_node.name)}}\n        {% if snowpipe.auto_ingest -%} auto_ingest = {{snowpipe.auto_ingest}} {%- endif %}\n        {% if snowpipe.aws_sns_topic -%} aws_sns_topic = '{{snowpipe.aws_sns_topic}}' {%- endif %}\n        {% if snowpipe.integration -%} integration = '{{snowpipe.integration}}' {%- endif %}\n        as {{ dbt_external_tables.snowflake_get_copy_sql(source_node) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_external_tables.snowflake_get_copy_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6948566}, "macro.dbt_external_tables.snowflake_refresh_snowpipe": {"unique_id": "macro.dbt_external_tables.snowflake_refresh_snowpipe", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/snowflake/snowpipe/refresh_snowpipe.sql", "original_file_path": "macros/plugins/snowflake/snowpipe/refresh_snowpipe.sql", "name": "snowflake_refresh_snowpipe", "macro_sql": "{% macro snowflake_refresh_snowpipe(source_node) %}\n\n    {% set snowpipe = source_node.external.snowpipe %}\n    {% set auto_ingest = snowpipe.get('auto_ingest', false) if snowpipe is mapping %}\n    \n    {% if auto_ingest is true %}\n    \n        {% do return([]) %}\n    \n    {% else %}\n    \n        {% set ddl %}\n        alter pipe {{source(source_node.source_name, source_node.name)}} refresh\n        {% endset %}\n        \n        {{ return([ddl]) }}\n    \n    {% endif %}\n    \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6964877}, "macro.dbt_external_tables.snowflake_create_empty_table": {"unique_id": "macro.dbt_external_tables.snowflake_create_empty_table", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/snowflake/snowpipe/create_empty_table.sql", "original_file_path": "macros/plugins/snowflake/snowpipe/create_empty_table.sql", "name": "snowflake_create_empty_table", "macro_sql": "{% macro snowflake_create_empty_table(source_node) %}\n\n    {%- set columns = source_node.columns.values() %}\n\n    create or replace table {{source(source_node.source_name, source_node.name)}} (\n        {% if columns|length == 0 %}\n            value variant,\n        {% else -%}\n        {%- for column in columns -%}\n            {{column.name}} {{column.data_type}},\n        {% endfor -%}\n        {% endif %}\n            metadata_filename varchar,\n            metadata_file_row_number bigint,\n            _dbt_copied_at timestamp\n    );\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.6978624}, "macro.dbt_external_tables.snowflake_get_copy_sql": {"unique_id": "macro.dbt_external_tables.snowflake_get_copy_sql", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/snowflake/snowpipe/get_copy_sql.sql", "original_file_path": "macros/plugins/snowflake/snowpipe/get_copy_sql.sql", "name": "snowflake_get_copy_sql", "macro_sql": "{% macro snowflake_get_copy_sql(source_node, explicit_transaction=false) %}\n{# This assumes you have already created an external stage #}\n\n    {%- set columns = source_node.columns.values() -%}\n    {%- set external = source_node.external -%}\n    {%- set is_csv = dbt_external_tables.is_csv(external.file_format) %}\n    {%- set copy_options = external.snowpipe.get('copy_options', none) -%}\n   \n    {%- if explicit_transaction -%} begin; {%- endif %}\n    \n    copy into {{source(source_node.source_name, source_node.name)}}\n    from ( \n        select\n        {% if columns|length == 0 %}\n            $1::variant as value,\n        {% else -%}\n        {%- for column in columns -%}\n            {%- set col_expression -%}\n                {%- if is_csv -%}nullif(${{loop.index}},''){# special case: get columns by ordinal position #}\n                {%- else -%}nullif($1:{{column.name}},''){# standard behavior: get columns by name #}\n                {%- endif -%}\n            {%- endset -%}\n            {{col_expression}}::{{column.data_type}} as {{column.name}},\n        {% endfor -%}\n        {% endif %}\n            metadata$filename::varchar as metadata_filename,\n            metadata$file_row_number::bigint as metadata_file_row_number,\n            current_timestamp::timestamp as _dbt_copied_at\n        from {{external.location}} {# stage #}\n    )\n    file_format = {{external.file_format}}\n    {% if external.pattern -%} pattern = '{{external.pattern}}' {%- endif %}\n    {% if copy_options %} {{copy_options}} {% endif %};\n    \n    {% if explicit_transaction -%} commit; {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_external_tables.is_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.701227}, "macro.dbt_external_tables.is_csv": {"unique_id": "macro.dbt_external_tables.is_csv", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/snowflake/helpers/is_csv.sql", "original_file_path": "macros/plugins/snowflake/helpers/is_csv.sql", "name": "is_csv", "macro_sql": "{% macro is_csv(file_format) %}\n\n{# From https://docs.snowflake.net/manuals/sql-reference/sql/create-external-table.html:\n\nImportant: The external table does not inherit the file format, if any, in the \nstage definition. You must explicitly specify any file format options for the \nexternal table using the FILE_FORMAT parameter.\n\nNote: FORMAT_NAME and TYPE are mutually exclusive; to avoid unintended behavior, \nyou should only specify one or the other when creating an external table.\n\n#}\n\n    {% set ff_ltrimmed = file_format|lower|replace(' ','') %}\n\n    {% if 'type=' in ff_ltrimmed %}\n    \n        {% if 'type=csv' in ff_ltrimmed %}\n\n            {{return(true)}}\n\n        {% else %}\n\n            {{return(false)}}\n            \n        {% endif %}\n        \n    {% else %}\n    \n        {% set ff_standardized = ff_ltrimmed\n            | replace('(','') | replace(')','')\n            | replace('format_name=','') %}\n        {% set fqn = ff_standardized.split('.') %}\n        \n        {% if fqn | length == 3 %}\n            {% set ff_database, ff_schema, ff_identifier = fqn[0], fqn[1], fqn[2] %}\n        {% elif fqn | length == 2 %}\n            {% set ff_database, ff_schema, ff_identifier = target.database, fqn[0], fqn[1] %}\n        {% else %}\n            {% set ff_database, ff_schema, ff_identifier = target.database, target.schema, fqn[0] %}\n        {% endif %}\n    \n        {% call statement('get_file_format', fetch_result = True) %}\n            show file formats in {{ff_database}}.{{ff_schema}}\n        {% endcall %}\n        \n        {% set ffs = load_result('get_file_format').table %}\n        \n        {% for ff in ffs %}\n            \n            {% if ff['name']|lower == ff_identifier and ff['type']|lower == 'csv' %}\n            \n                {{return(true)}}\n            \n            {% endif %}\n        \n        {% endfor %}\n        \n        {{return(false)}}        \n    \n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7066016}, "macro.dbt_external_tables.spark__refresh_external_table": {"unique_id": "macro.dbt_external_tables.spark__refresh_external_table", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/spark/refresh_external_table.sql", "original_file_path": "macros/plugins/spark/refresh_external_table.sql", "name": "spark__refresh_external_table", "macro_sql": "{% macro spark__refresh_external_table(source_node) %}\n    \n    {% set refresh %}\n        refresh table {{source(source_node.source_name, source_node.name)}}\n    {% endset %}\n    \n    {% do return([refresh]) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7074702}, "macro.dbt_external_tables.spark__get_external_build_plan": {"unique_id": "macro.dbt_external_tables.spark__get_external_build_plan", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/spark/get_external_build_plan.sql", "original_file_path": "macros/plugins/spark/get_external_build_plan.sql", "name": "spark__get_external_build_plan", "macro_sql": "{% macro spark__get_external_build_plan(source_node) %}\n\n    {% set build_plan = [] %}\n\n    {% set old_relation = adapter.get_relation(\n        database = none,\n        schema = source_node.schema,\n        identifier = source_node.identifier\n    ) %}\n\n    {% set create_or_replace = (old_relation is none or var('ext_full_refresh', false)) %}\n\n    {% if create_or_replace %}\n        {% set build_plan = build_plan + [\n            dbt_external_tables.dropif(source_node), \n            dbt_external_tables.create_external_table(source_node)\n        ] %}\n    {% else %}\n        {% set build_plan = build_plan + dbt_external_tables.refresh_external_table(source_node) %}\n    {% endif %}\n\n    {% set recover_partitions = spark__recover_partitions(source_node) %}\n    {% if recover_partitions|length > 0 %}\n    {% set build_plan = build_plan + [\n        recover_partitions\n    ] %}\n    {% endif %}\n\n    {% do return(build_plan) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_external_tables.dropif", "macro.dbt_external_tables.create_external_table", "macro.dbt_external_tables.refresh_external_table", "macro.dbt_external_tables.spark__recover_partitions"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.710096}, "macro.dbt_external_tables.spark__create_external_table": {"unique_id": "macro.dbt_external_tables.spark__create_external_table", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/spark/create_external_table.sql", "original_file_path": "macros/plugins/spark/create_external_table.sql", "name": "spark__create_external_table", "macro_sql": "{% macro spark__create_external_table(source_node) %}\n\n    {%- set columns = source_node.columns.values() -%}\n    {%- set external = source_node.external -%}\n    {%- set partitions = external.partitions -%}\n    {%- set options = external.options -%}\n\n{# https://spark.apache.org/docs/latest/sql-data-sources-hive-tables.html #}\n    create table {{source(source_node.source_name, source_node.name)}} \n    {%- if columns|length > 0 %} (\n        {% for column in columns %}\n            {{column.name}} {{column.data_type}}\n            {{- ',' if not loop.last -}}\n        {% endfor %}\n    ) {% endif -%}\n    {% if external.using %} using {{external.using}} {%- endif %}\n    {% if options -%} options (\n        {%- for key, value in options.items() -%}\n            '{{ key }}' = '{{value}}' {{- ', \\n' if not loop.last -}}\n        {%- endfor -%}\n    ) {%- endif %}\n    {% if partitions -%} partitioned by (\n        {%- for partition in partitions -%}\n            {{partition.name}} {{partition.data_type}}{{', ' if not loop.last}}\n        {%- endfor -%}\n    ) {%- endif %}\n    {% if external.row_format -%} row format {{external.row_format}} {%- endif %}\n    {% if external.file_format -%} stored as {{external.file_format}} {%- endif %}\n    {% if external.location -%} location '{{external.location}}' {%- endif %}\n    {% if external.table_properties -%} tblproperties {{ external.table_properties }} {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7143881}, "macro.dbt_external_tables.spark__recover_partitions": {"unique_id": "macro.dbt_external_tables.spark__recover_partitions", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/spark/helpers/recover_partitions.sql", "original_file_path": "macros/plugins/spark/helpers/recover_partitions.sql", "name": "spark__recover_partitions", "macro_sql": "{% macro spark__recover_partitions(source_node) %}\n    {# https://docs.databricks.com/sql/language-manual/sql-ref-syntax-ddl-alter-table.html #}\n\n    {% set ddl %}\n    {%- if source_node.external.partitions and source_node.external.using and source_node.external.using|lower != 'delta' -%}\n        ALTER TABLE {{ source(source_node.source_name, source_node.name) }} RECOVER PARTITIONS\n    {%- endif -%}\n    {% endset %}\n\n    {{return(ddl)}}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7157552}, "macro.dbt_external_tables.spark__dropif": {"unique_id": "macro.dbt_external_tables.spark__dropif", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/spark/helpers/dropif.sql", "original_file_path": "macros/plugins/spark/helpers/dropif.sql", "name": "spark__dropif", "macro_sql": "{% macro spark__dropif(node) %}\n    \n    {% set ddl %}\n        drop table if exists {{source(node.source_name, node.name)}}\n    {% endset %}\n    \n    {{return(ddl)}}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7165675}, "macro.dbt_external_tables.redshift__refresh_external_table": {"unique_id": "macro.dbt_external_tables.redshift__refresh_external_table", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/redshift/refresh_external_table.sql", "original_file_path": "macros/plugins/redshift/refresh_external_table.sql", "name": "redshift__refresh_external_table", "macro_sql": "{% macro redshift__refresh_external_table(source_node) %}\n\n    {%- set partitions = source_node.external.get('partitions',[]) -%}\n\n    {%- if partitions -%}\n    \n        {%- set part_len = partitions|length -%}\n    \n        {%- set get_partitions_sql -%}\n        \n        select * from\n        \n        {%- for partition in partitions %} (\n        \n            {%- set part_num = loop.index -%}\n            \n            {%- if partition.vals.macro -%}\n                {%- set vals = dbt_external_tables.render_from_context(partition.vals.macro, **partition.vals.args) -%}\n            {%- elif partition.vals is string -%}\n                {%- set vals = [partition.vals] -%}\n            {%- else -%}\n                {%- set vals = partition.vals -%}\n            {%- endif -%}\n        \n            {%- for val in vals %}\n            \n                select\n                    '\"{{ partition.name }}\"' as name_{{ part_num }},\n                    '\"{{ val }}\"' as val_{{ part_num }},\n                    '\"{{ dbt_external_tables.render_from_context(partition.path_macro, partition.name, val) }}\"' as path_{{ part_num }}\n                \n                {{ 'union all' if not loop.last else ') ' }}\n            \n            {%- endfor -%}\n            \n            {{ 'cross join' if not loop.last }}\n            \n        {%- endfor -%}\n        \n        {%- endset -%}\n        \n        {%- set finals = [] -%}\n        \n        {%- if execute -%}\n            {%- set results = run_query(get_partitions_sql) -%}\n            {%- for row in results -%}\n                \n                {%- set partition_parts = [] -%}\n                {%- set path_parts = [] -%}\n                \n                {%- for i in range(0, part_len) -%}\n                    {%- do partition_parts.append({\n                        'name': row[i * 3][1:-1],\n                        'value': row[i * 3 + 1][1:-1]\n                    }) -%}\n                    {%- do path_parts.append(row[i * 3 + 2][1:-1]) -%}\n                {%- endfor -%}\n                \n                {%- set construct = {\n                    'partition_by': partition_parts,\n                    'path': path_parts | join('/')\n                }  -%}\n                \n                {% do finals.append(construct) %}\n            {%- endfor -%}\n        {%- endif -%}\n    \n        {%- set ddl = dbt_external_tables.redshift_alter_table_add_partitions(source_node, finals) -%}\n        {{ return(ddl) }}\n    \n    {% else %}\n    \n        {% do return([]) %}\n    \n    {% endif %}\n    \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_external_tables.render_from_context", "macro.dbt.run_query", "macro.dbt_external_tables.redshift_alter_table_add_partitions"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7263083}, "macro.dbt_external_tables.redshift__get_external_build_plan": {"unique_id": "macro.dbt_external_tables.redshift__get_external_build_plan", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/redshift/get_external_build_plan.sql", "original_file_path": "macros/plugins/redshift/get_external_build_plan.sql", "name": "redshift__get_external_build_plan", "macro_sql": "{% macro redshift__get_external_build_plan(source_node) %}\n\n    {% set build_plan = [] %}\n    \n    {% set create_or_replace = (var('ext_full_refresh', false) or not redshift_is_ext_tbl(source_node)) %}\n    \n    {% if create_or_replace %}\n\n        {% set build_plan = [\n                dbt_external_tables.dropif(source_node),\n                dbt_external_tables.create_external_table(source_node)\n            ] + dbt_external_tables.refresh_external_table(source_node) \n        %}\n        \n    {% else %}\n    \n        {% set build_plan = dbt_external_tables.refresh_external_table(source_node) %}\n        \n    {% endif %}\n    \n    {% do return(build_plan) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_external_tables.redshift_is_ext_tbl", "macro.dbt_external_tables.dropif", "macro.dbt_external_tables.create_external_table", "macro.dbt_external_tables.refresh_external_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.728145}, "macro.dbt_external_tables.redshift__create_external_table": {"unique_id": "macro.dbt_external_tables.redshift__create_external_table", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/redshift/create_external_table.sql", "original_file_path": "macros/plugins/redshift/create_external_table.sql", "name": "redshift__create_external_table", "macro_sql": "{% macro redshift__create_external_table(source_node) %}\n\n    {%- set columns = source_node.columns.values() -%}\n    {%- set external = source_node.external -%}\n    {%- set partitions = external.partitions -%}\n\n{# https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_TABLE.html #}\n{# This assumes you have already created an external schema #}\n\n    create external table {{source(source_node.source_name, source_node.name)}} (\n        {% for column in columns %}\n            {{adapter.quote(column.name)}} {{column.data_type}}\n            {{- ',' if not loop.last -}}\n        {% endfor %}\n    )\n    {% if partitions -%} partitioned by (\n        {%- for partition in partitions -%}\n            {{adapter.quote(partition.name)}} {{partition.data_type}}{{', ' if not loop.last}}\n        {%- endfor -%}\n    ) {%- endif %}\n    {% if external.row_format -%} row format {{external.row_format}} {%- endif %}\n    {% if external.file_format -%} stored as {{external.file_format}} {%- endif %}\n    {% if external.location -%} location '{{external.location}}' {%- endif %}\n    {% if external.table_properties -%} table properties {{external.table_properties}} {%- endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7314634}, "macro.dbt_external_tables.redshift__exit_transaction": {"unique_id": "macro.dbt_external_tables.redshift__exit_transaction", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/redshift/helpers/transaction.sql", "original_file_path": "macros/plugins/redshift/helpers/transaction.sql", "name": "redshift__exit_transaction", "macro_sql": "{% macro redshift__exit_transaction() %}\n    {{ return('begin; commit;') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7319891}, "macro.dbt_external_tables.redshift__dropif": {"unique_id": "macro.dbt_external_tables.redshift__dropif", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/redshift/helpers/dropif.sql", "original_file_path": "macros/plugins/redshift/helpers/dropif.sql", "name": "redshift__dropif", "macro_sql": "{% macro redshift__dropif(node) %}\n    \n    {% set ddl %}\n        drop table if exists {{source(node.source_name, node.name)}} cascade\n    {% endset %}\n    \n    {{return(ddl)}}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7328439}, "macro.dbt_external_tables.year_month_day": {"unique_id": "macro.dbt_external_tables.year_month_day", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/redshift/helpers/paths.sql", "original_file_path": "macros/plugins/redshift/helpers/paths.sql", "name": "year_month_day", "macro_sql": "{% macro year_month_day(name, value) %}\n    {% set path = value.replace('-','/') %}\n    {{return(path)}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7337813}, "macro.dbt_external_tables.key_value": {"unique_id": "macro.dbt_external_tables.key_value", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/redshift/helpers/paths.sql", "original_file_path": "macros/plugins/redshift/helpers/paths.sql", "name": "key_value", "macro_sql": "{% macro key_value(name, value) %}\n    {% set path = name ~ '=' ~ value %}\n    {{return(path)}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7342525}, "macro.dbt_external_tables.value_only": {"unique_id": "macro.dbt_external_tables.value_only", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/redshift/helpers/paths.sql", "original_file_path": "macros/plugins/redshift/helpers/paths.sql", "name": "value_only", "macro_sql": "{% macro value_only(name, value) %}\n    {% set path = value %}\n    {{return(path)}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.734662}, "macro.dbt_external_tables.redshift_alter_table_add_partitions": {"unique_id": "macro.dbt_external_tables.redshift_alter_table_add_partitions", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/redshift/helpers/add_partitions.sql", "original_file_path": "macros/plugins/redshift/helpers/add_partitions.sql", "name": "redshift_alter_table_add_partitions", "macro_sql": "{% macro redshift_alter_table_add_partitions(source_node, partitions) %}\n\n  {{ log(\"Generating ADD PARTITION statement for partition set between \" \n         ~ partitions[0]['path'] ~ \" and \" ~ (partitions|last)['path']) }}\n\n  {% set ddl = [] %}\n  \n  {% if partitions|length > 0 %}\n  \n    {% set alter_table_add %}\n        alter table {{source(source_node.source_name, source_node.name)}} add if not exists \n    {% endset %}\n  \n    {%- set alters -%}\n\n      {{ alter_table_add }}\n\n    {%- for partition in partitions -%}\n\n      {%- if loop.index0 != 0 and loop.index0 % 100 == 0 -%}\n\n        ; {{ alter_table_add }}\n\n      {%- endif -%}\n\n        partition ({%- for part in partition.partition_by -%}{{ part.name }}='{{ part.value }}'{{', ' if not loop.last}}{%- endfor -%})\n        location '{{ source_node.external.location }}/{{ partition.path }}/'\n\n    {% endfor -%}\n    \n    {%- endset -%}\n    \n    {% set ddl = ddl + alters.split(';') %}\n\n  {% else %}\n\n    {{ log(\"No partitions to be added\") }}\n\n  {% endif %}\n  \n  {% do return(ddl) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.738367}, "macro.dbt_external_tables.redshift_is_ext_tbl": {"unique_id": "macro.dbt_external_tables.redshift_is_ext_tbl", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/redshift/helpers/is_ext_tbl.sql", "original_file_path": "macros/plugins/redshift/helpers/is_ext_tbl.sql", "name": "redshift_is_ext_tbl", "macro_sql": "{% macro redshift_is_ext_tbl(node) %}\n\n    {% set existing_relation = load_relation(node) %}\n    \n    {#  external tables don't appear in information_schema.tables,\n        so dbt doesn't cache them #}\n    {% if existing_relation is none %}\n\n        {% set find_ext_tbl %}\n        \n            select count(*) from svv_external_tables\n            where schemaname = '{{node.schema}}'\n            and tablename = '{{node.identifier}}'\n        \n        {% endset %}\n        \n        {% if execute %}\n            {% set result = run_query(find_ext_tbl)[0][0] %}\n        {% else %}\n            {% set result = 0 %}\n        {% endif %}\n\n        {% set is_ext_tbl = (result > 0) %}\n        {% do return(is_ext_tbl) %}\n        \n    {% else %}\n    \n        {% do return(false) %}\n        \n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7405968}, "macro.dbt_external_tables.render_from_context": {"unique_id": "macro.dbt_external_tables.render_from_context", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/redshift/helpers/render_macro.sql", "original_file_path": "macros/plugins/redshift/helpers/render_macro.sql", "name": "render_from_context", "macro_sql": "{% macro render_from_context(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called by macro '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  \n    {{ return(package_context[name](*varargs, **kwargs)) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7431836}, "macro.dbt_external_tables.sqlserver__get_external_build_plan": {"unique_id": "macro.dbt_external_tables.sqlserver__get_external_build_plan", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/sqlserver/get_external_build_plan.sql", "original_file_path": "macros/plugins/sqlserver/get_external_build_plan.sql", "name": "sqlserver__get_external_build_plan", "macro_sql": "{% macro sqlserver__get_external_build_plan(source_node) %}\n\n    {% set build_plan = [] %}\n\n    {% set old_relation = adapter.get_relation(\n        database = source_node.database,\n        schema = source_node.schema,\n        identifier = source_node.identifier\n    ) %}\n\n    {% set create_or_replace = (old_relation is none or var('ext_full_refresh', false)) %}\n\n    {% if create_or_replace %}\n        {% set build_plan = build_plan + [ \n            dbt_external_tables.dropif(source_node), \n            dbt_external_tables.create_external_table(source_node)\n        ] %}\n    {% else %}\n        {% set build_plan = build_plan + dbt_external_tables.refresh_external_table(source_node) %}\n    {% endif %}\n    {% do return(build_plan) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_external_tables.dropif", "macro.dbt_external_tables.create_external_table", "macro.dbt_external_tables.refresh_external_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7452376}, "macro.dbt_external_tables.sqlserver__create_external_table": {"unique_id": "macro.dbt_external_tables.sqlserver__create_external_table", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/sqlserver/create_external_table.sql", "original_file_path": "macros/plugins/sqlserver/create_external_table.sql", "name": "sqlserver__create_external_table", "macro_sql": "{% macro sqlserver__create_external_table(source_node) %}\n\n    {%- set columns = source_node.columns.values() -%}\n    {%- set external = source_node.external -%}\n\n    {% if external.ansi_nulls is true -%} SET ANSI_NULLS ON; {%- endif %}\n    {% if external.quoted_identifier is true -%} SET QUOTED_IDENTIFIER ON; {%- endif %}\n\n    create external table {{source(source_node.source_name, source_node.name)}} (\n        {% for column in columns %}\n            {# TODO set nullity based on schema tests?? #}\n            {%- set nullity = 'NOT NULL' if 'not_null' in columns.tests else 'NULL'-%}\n            {{adapter.quote(column.name)}} {{column.data_type}} {{nullity}}\n            {{- ',' if not loop.last -}}\n        {% endfor %}\n    )\n    WITH (\n        {# remove keys that are None (i.e. not defined for a given source) #}\n        {%- for key, value in external.items() if value is not none and key not in ['ansi_nulls', 'quoted_identifier'] -%}\n            {{key}} = \n                {%- if key in [\"location\", \"schema_name\", \"object_name\"] -%}\n                    '{{value}}'\n                {% elif key in [\"data_source\",\"file_format\"] -%}\n                    [{{value}}]\n                {% else -%}\n                    {{value}}\n                {%- endif -%}\n            {{- ',' if not loop.last -}}\n            {%- endfor -%}\n    )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7487504}, "macro.dbt_external_tables.sqlserver__dropif": {"unique_id": "macro.dbt_external_tables.sqlserver__dropif", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/plugins/sqlserver/helpers/dropif.sql", "original_file_path": "macros/plugins/sqlserver/helpers/dropif.sql", "name": "sqlserver__dropif", "macro_sql": "{% macro sqlserver__dropif(node) %}\n    \n    {% set ddl %}\n      if object_id ('{{source(node.source_name, node.name)}}') is not null\n        begin\n        drop external table {{source(node.source_name, node.name)}}\n        end\n    {% endset %}\n    \n    {{return(ddl)}}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7497838}, "macro.dbt_external_tables.refresh_external_table": {"unique_id": "macro.dbt_external_tables.refresh_external_table", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/common/refresh_external_table.sql", "original_file_path": "macros/common/refresh_external_table.sql", "name": "refresh_external_table", "macro_sql": "{% macro refresh_external_table(source_node) %}\n    {{ return(adapter.dispatch('refresh_external_table', 'dbt_external_tables')(source_node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.acton_marketing_data.default__refresh_external_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7504702}, "macro.dbt_external_tables.default__refresh_external_table": {"unique_id": "macro.dbt_external_tables.default__refresh_external_table", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/common/refresh_external_table.sql", "original_file_path": "macros/common/refresh_external_table.sql", "name": "default__refresh_external_table", "macro_sql": "{% macro default__refresh_external_table(source_node) %}\n    {% do return([]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.750782}, "macro.dbt_external_tables.get_external_build_plan": {"unique_id": "macro.dbt_external_tables.get_external_build_plan", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/common/get_external_build_plan.sql", "original_file_path": "macros/common/get_external_build_plan.sql", "name": "get_external_build_plan", "macro_sql": "{% macro get_external_build_plan(source_node) %}\n    {{ return(adapter.dispatch('get_external_build_plan', 'dbt_external_tables')(source_node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.acton_marketing_data.default__get_external_build_plan"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.751606}, "macro.dbt_external_tables.default__get_external_build_plan": {"unique_id": "macro.dbt_external_tables.default__get_external_build_plan", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/common/get_external_build_plan.sql", "original_file_path": "macros/common/get_external_build_plan.sql", "name": "default__get_external_build_plan", "macro_sql": "{% macro default__get_external_build_plan(source_node) %}\n    {{ exceptions.raise_compiler_error(\"Staging external sources is not implemented for the default adapter\") }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.751917}, "macro.dbt_external_tables.create_external_table": {"unique_id": "macro.dbt_external_tables.create_external_table", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/common/create_external_table.sql", "original_file_path": "macros/common/create_external_table.sql", "name": "create_external_table", "macro_sql": "{% macro create_external_table(source_node) %}\n    {{ adapter.dispatch('create_external_table', 'dbt_external_tables')(source_node) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.acton_marketing_data.default__create_external_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7525935}, "macro.dbt_external_tables.default__create_external_table": {"unique_id": "macro.dbt_external_tables.default__create_external_table", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/common/create_external_table.sql", "original_file_path": "macros/common/create_external_table.sql", "name": "default__create_external_table", "macro_sql": "{% macro default__create_external_table(source_node) %}\n    {{ exceptions.raise_compiler_error(\"External table creation is not implemented for the default adapter\") }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7529042}, "macro.dbt_external_tables.stage_external_sources": {"unique_id": "macro.dbt_external_tables.stage_external_sources", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/common/stage_external_sources.sql", "original_file_path": "macros/common/stage_external_sources.sql", "name": "stage_external_sources", "macro_sql": "{% macro stage_external_sources(select=none) %}\n\n    {% set sources_to_stage = [] %}\n    \n    {% set source_nodes = graph.sources.values() if graph.sources else [] %}\n    \n    {% for node in source_nodes %}\n        {% if node.external %}\n            \n            {% if select %}\n            \n                {% for src in select.split(' ') %}\n                \n                    {% if '.' in src %}\n                        {% set src_s = src.split('.') %}\n                        {% if src_s[0] == node.source_name and src_s[1] == node.name %}\n                            {% do sources_to_stage.append(node) %}\n                        {% endif %}\n                    {% else %}\n                        {% if src == node.source_name %}\n                            {% do sources_to_stage.append(node) %}\n                        {% endif %}\n                    {% endif %}\n                    \n                {% endfor %}\n                        \n            {% else %}\n            \n                {% do sources_to_stage.append(node) %}\n                \n            {% endif %}\n        {% endif %}\n        \n    {% endfor %}\n    \n    {% if sources_to_stage|length == 0 %}\n        {% do log('No external sources selected', info = true) %}\n    {% endif %}\n            \n    {% for node in sources_to_stage %}\n\n        {% set loop_label = loop.index ~ ' of ' ~ loop.length %}\n\n        {% do log(loop_label ~ ' START external source ' ~ node.schema ~ '.' ~ node.identifier, info = true) -%}\n        \n        {% set run_queue = dbt_external_tables.get_external_build_plan(node) %}\n        \n        {% do log(loop_label ~ ' SKIP', info = true) if run_queue == [] %}\n        {% set width = flags.PRINTER_WIDTH %}\n        \n        {% for q in run_queue %}\n        \n            {% set q_msg = q|replace('\\n','')|replace('begin;','')|trim %}\n            {% set q_log = q_msg[:width] ~ '...  ' if q_msg|length > width else q_msg %}\n        \n            {% do log(loop_label ~ ' (' ~ loop.index ~ ') ' ~ q_log, info = true) %}\n            {% set exit_txn = dbt_external_tables.exit_transaction() %}\n        \n            {% call statement('runner', fetch_result = True, auto_begin = False) %}\n                {{ exit_txn }} {{ q }}\n            {% endcall %}\n            \n            {% set runner = load_result('runner') %}\n            {% set log_msg = runner['response'] if 'response' in runner.keys() else runner['status'] %}\n            {% do log(loop_label ~ ' (' ~ loop.index ~ ') ' ~ log_msg, info = true) %}\n            \n        {% endfor %}\n        \n    {% endfor %}\n    \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_external_tables.get_external_build_plan", "macro.dbt_external_tables.exit_transaction", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.762927}, "macro.dbt_external_tables.exit_transaction": {"unique_id": "macro.dbt_external_tables.exit_transaction", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/common/helpers/transaction.sql", "original_file_path": "macros/common/helpers/transaction.sql", "name": "exit_transaction", "macro_sql": "{% macro exit_transaction() %}\n    {{ return(adapter.dispatch('exit_transaction', 'dbt_external_tables')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_external_tables.default__exit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7636385}, "macro.dbt_external_tables.default__exit_transaction": {"unique_id": "macro.dbt_external_tables.default__exit_transaction", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/common/helpers/transaction.sql", "original_file_path": "macros/common/helpers/transaction.sql", "name": "default__exit_transaction", "macro_sql": "{% macro default__exit_transaction() %}\n    {{ return('') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7639117}, "macro.dbt_external_tables.dropif": {"unique_id": "macro.dbt_external_tables.dropif", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/common/helpers/dropif.sql", "original_file_path": "macros/common/helpers/dropif.sql", "name": "dropif", "macro_sql": "{% macro dropif(node) %}\n    {{ adapter.dispatch('dropif', 'dbt_external_tables')(node) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_external_tables.default__dropif"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.7645895}, "macro.dbt_external_tables.default__dropif": {"unique_id": "macro.dbt_external_tables.default__dropif", "package_name": "dbt_external_tables", "root_path": "/usr/src/develop/user-23113/environment-95395/repository-76981/dbt_packages/dbt_external_tables", "path": "macros/common/helpers/dropif.sql", "original_file_path": "macros/common/helpers/dropif.sql", "name": "default__dropif", "macro_sql": "{% macro default__dropif() %}\n    {{ exceptions.raise_compiler_error(\n        \"Dropping external tables is not implemented for the default adapter\"\n    ) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1665014417.764887}}, "docs": {"dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "/usr/local/lib/python3.8/dist-packages/dbt/include/global_project", "path": "overview.md", "original_file_path": "docs/overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.acton_marketing_data.sal_source_ss_xf": ["model.acton_marketing_data.lead_source_ss_xf"], "model.acton_marketing_data.sql_source_ss_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.opp_closing_source_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf"], "model.acton_marketing_data.account_source_xf": ["model.acton_marketing_data.contract_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf", "source.acton_marketing_data.salesforce.account"], "model.acton_marketing_data.contact_history_xf": ["source.acton_marketing_data.salesforce.contact_history"], "model.acton_marketing_data.new_business_acv_influenced_by_opens_FY21_xf": ["model.acton_marketing_data.email_opens_ao_xf", "model.acton_marketing_data.opportunities_with_contacts"], "model.acton_marketing_data.opportunities_with_contacts": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.contact_source_xf", "model.acton_marketing_data.lead_source_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.product_xf": ["source.acton_marketing_data.salesforce.product_2"], "model.acton_marketing_data.new_biz_acv_infl_by_opens_FY21": ["model.acton_marketing_data.email_opens_ao_xf", "model.acton_marketing_data.opportunities_with_contacts"], "model.acton_marketing_data.lead_history_xf": ["model.acton_marketing_data.lead_source_xf", "source.acton_marketing_data.salesforce.lead_history"], "model.acton_marketing_data.sqos_influenced_by_email_opens_xf": ["model.acton_marketing_data.email_opens_ao_xf", "model.acton_marketing_data.opportunities_with_contacts"], "model.acton_marketing_data.campaign_member_source_xf": ["source.acton_marketing_data.salesforce.campaign_member"], "model.acton_marketing_data.person_source_xf": ["model.acton_marketing_data.contact_source_xf", "model.acton_marketing_data.lead_source_xf"], "model.acton_marketing_data.user_source_xf": ["source.acton_marketing_data.salesforce.user"], "model.acton_marketing_data.email_clicks_ao_xf": [], "model.acton_marketing_data.opp_source_xf": ["model.acton_marketing_data.contract_source_xf", "model.acton_marketing_data.opportunity_line_item_xf", "model.acton_marketing_data.quote_line", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf", "source.acton_marketing_data.salesforce.opportunity"], "model.acton_marketing_data.lead_mql_source_xf": ["model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.opp_voc_source_ss_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf"], "model.acton_marketing_data.email_opens_ao_xf": [], "model.acton_marketing_data.lead_source_ss_xf": [], "model.acton_marketing_data.sqos_influenced_by_email_clicks_xf": ["model.acton_marketing_data.email_clicks_ao_xf", "model.acton_marketing_data.opportunities_with_contacts"], "model.acton_marketing_data.task_source_xf": ["source.acton_marketing_data.salesforce.task"], "model.acton_marketing_data.sqo_source_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf"], "model.acton_marketing_data.opp_demo_source_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf"], "model.acton_marketing_data.opp_sales_source_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf"], "model.acton_marketing_data.opp_voc_source_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf"], "model.acton_marketing_data.lead_source_xf": ["model.acton_marketing_data.user_source_xf", "source.acton_marketing_data.salesforce.lead"], "model.acton_marketing_data.contract_source_xf": ["source.acton_marketing_data.salesforce.contract"], "model.acton_marketing_data.opportunity_history_xf": ["source.acton_marketing_data.salesforce.opportunity_field_history"], "model.acton_marketing_data.opp_closing_source_ss_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf"], "model.acton_marketing_data.ao_instance_user_source_xf": ["model.acton_marketing_data.ao_instance_source_xf", "source.acton_marketing_data.salesforce.act_on_instance_user_c"], "model.acton_marketing_data.opportunity_line_item_xf": ["source.acton_marketing_data.salesforce.opportunity_line_item"], "model.acton_marketing_data.sqo_source_ss_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf"], "model.acton_marketing_data.sqls_influenced_by_email_clicks_xf": ["model.acton_marketing_data.email_clicks_ao_xf", "model.acton_marketing_data.opportunities_with_contacts"], "model.acton_marketing_data.opp_demo_source_ss_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf"], "model.acton_marketing_data.quote_line": ["model.acton_marketing_data.product_xf"], "model.acton_marketing_data.new_business_acv_influenced_by_aps_FY21_xf": ["model.acton_marketing_data.email_clicks_ao_xf", "model.acton_marketing_data.opportunities_with_contacts"], "model.acton_marketing_data.date_base_xf": [], "model.acton_marketing_data.campaign_influence_xf": ["source.acton_marketing_data.salesforce.campaign_influence"], "model.acton_marketing_data.campaign_source_xf": ["source.acton_marketing_data.salesforce.campaign"], "model.acton_marketing_data.sql_source_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.kpi_targets": [], "model.acton_marketing_data.sal_source_xf": ["model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.contact_source_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf", "source.acton_marketing_data.salesforce.contact"], "model.acton_marketing_data.lead_mql_source_ss_xf": ["model.acton_marketing_data.lead_source_ss_xf"], "model.acton_marketing_data.sqls_influenced_by_email_opens_xf": ["model.acton_marketing_data.email_opens_ao_xf", "model.acton_marketing_data.opportunities_with_contacts"], "model.acton_marketing_data.ao_instance_source_xf": ["source.acton_marketing_data.salesforce.act_on_instance_c"], "model.acton_marketing_data.test": ["model.acton_marketing_data.contact_history_xf", "model.acton_marketing_data.contact_source_xf", "model.acton_marketing_data.lead_history_xf", "model.acton_marketing_data.lead_source_xf"], "model.acton_marketing_data.new_account_welcome_series_list": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.ao_instance_user_source_xf", "model.acton_marketing_data.contact_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf"], "model.acton_marketing_data.new_user_welcome_series_list": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.ao_instance_user_source_xf", "model.acton_marketing_data.contact_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf", "model.acton_marketing_data.user_source_xf"], "model.acton_marketing_data.topo_leads": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.funnel_report_all_time_leads"], "model.acton_marketing_data.topo_all": ["model.acton_marketing_data.topo_closing", "model.acton_marketing_data.topo_demos", "model.acton_marketing_data.topo_leads", "model.acton_marketing_data.topo_lost", "model.acton_marketing_data.topo_mqls", "model.acton_marketing_data.topo_pipe", "model.acton_marketing_data.topo_sals", "model.acton_marketing_data.topo_sqls", "model.acton_marketing_data.topo_sqos", "model.acton_marketing_data.topo_voc", "model.acton_marketing_data.topo_won", "model.acton_marketing_data.topo_won_acv"], "model.acton_marketing_data.topo_won_acv": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.topo_mqls": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.funnel_report_all_time_mqls"], "model.acton_marketing_data.topo_sqls": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.funnel_report_all_time_sqls"], "model.acton_marketing_data.topo_sals": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.funnel_report_all_time_sals"], "model.acton_marketing_data.topo_closing": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.funnel_report_all_time_closing"], "model.acton_marketing_data.topo_lost": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.funnel_report_all_time_lost"], "model.acton_marketing_data.topo_sqos": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.funnel_report_all_time_sqos"], "model.acton_marketing_data.topo_pipe": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.funnel_report_all_time_sqos"], "model.acton_marketing_data.topo_won": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.topo_demos": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.funnel_report_all_time_demo"], "model.acton_marketing_data.topo_voc": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.funnel_report_all_time_voc"], "model.acton_marketing_data.marketing_lead_creation_date_history_xf": ["model.acton_marketing_data.contact_history_xf", "model.acton_marketing_data.contact_source_xf", "model.acton_marketing_data.lead_history_xf", "model.acton_marketing_data.lead_source_xf"], "model.acton_marketing_data.opp_demo_date_history_xf": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.opportunity_history_xf"], "model.acton_marketing_data.working_date_history_xf": ["model.acton_marketing_data.contact_history_xf", "model.acton_marketing_data.contact_source_xf", "model.acton_marketing_data.lead_history_xf", "model.acton_marketing_data.lead_source_xf"], "model.acton_marketing_data.opp_closing_date_history_xf": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.opportunity_history_xf"], "model.acton_marketing_data.mql_date_history_xf": ["model.acton_marketing_data.contact_history_xf", "model.acton_marketing_data.contact_source_xf", "model.acton_marketing_data.lead_history_xf", "model.acton_marketing_data.lead_source_xf"], "model.acton_marketing_data.opp_discovery_date_history_xf": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.opportunity_history_xf"], "model.acton_marketing_data.opp_voc_date_history_xf": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.opportunity_history_xf"], "model.acton_marketing_data.pipeline_2021_1H_PPC": ["model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.qoq_mktg_created_leads_by_attribution": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.marketo_ap_reporting": ["model.acton_marketing_data.new_business_acv_influenced_by_aps_FY21_xf"], "model.acton_marketing_data.marketo_persons_influenced": ["model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.campaign_primary_source": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.campaign_influence_xf", "model.acton_marketing_data.campaign_member_source_xf", "model.acton_marketing_data.campaign_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.ao_emails": ["source.acton_marketing_data.data_studio_s3.data_studio_emails"], "model.acton_marketing_data.ao_webinars": ["source.acton_marketing_data.data_studio_s3.data_studio_webinars"], "model.acton_marketing_data.ao_forms": ["source.acton_marketing_data.data_studio_s3.data_studio_forms"], "model.acton_marketing_data.ao_landingpages": ["source.acton_marketing_data.data_studio_s3.data_studio_landingpages"], "model.acton_marketing_data.ao_combined": [], "model.acton_marketing_data.ao_media": ["source.acton_marketing_data.data_studio_s3.data_studio_media"], "model.acton_marketing_data.ao_webpages": ["source.acton_marketing_data.data_studio_s3.data_studio_webpages"], "model.acton_marketing_data.funnel_report_previous_week_leads": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.funnel_report_current_quarter_sqos_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_ss_xf"], "model.acton_marketing_data.funnel_report_current_quarter_by_week_pipeline": ["model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_voc"], "model.acton_marketing_data.funnel_report_current_quarter_ss_conversion": ["model.acton_marketing_data.funnel_report_current_quarter_ss_xf"], "model.acton_marketing_data.funnel_report_current_week_sals": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_xf"], "model.acton_marketing_data.funnel_report_all_time_filters_industry": ["model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.funnel_report_current_week_ss_xf": ["model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_won"], "model.acton_marketing_data.funnel_report_all_time_mql2sql_velocity": ["model.acton_marketing_data.opportunities_with_contacts"], "model.acton_marketing_data.funnel_report_current_week_sqls": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf"], "model.acton_marketing_data.funnel_report_all_time_l20_velocity_opp": ["model.acton_marketing_data.opportunities_with_contacts"], "model.acton_marketing_data.funnel_report_current_quarter_sqls": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf"], "model.acton_marketing_data.funnel_report_current_week_sqos_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_ss_xf"], "model.acton_marketing_data.funnel_report_rolling3mo_sals": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_xf"], "model.acton_marketing_data.funnel_report_current_quarter_by_week_xf": ["model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_sqos"], "model.acton_marketing_data.funnel_report_current_quarter_ss_xf": ["model.acton_marketing_data.funnel_report_current_quarter_closing_ss", "model.acton_marketing_data.funnel_report_current_quarter_demo_ss", "model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqos_ss", "model.acton_marketing_data.funnel_report_current_quarter_voc_ss", "model.acton_marketing_data.funnel_report_current_quarter_won"], "model.acton_marketing_data.funnel_report_all_time_lost": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.funnel_report_rolling3mo_sqls": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf"], "model.acton_marketing_data.funnel_report_current_quarter_sals": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_xf"], "model.acton_marketing_data.funnel_report_previous_week_voc_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_ss_xf"], "model.acton_marketing_data.funnel_report_all_time_sqos_to_target": ["model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.kpi_targets"], "model.acton_marketing_data.funnel_report_current_quarter_closing": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_xf"], "model.acton_marketing_data.funnel_report_previous_week_mqls": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_xf"], "model.acton_marketing_data.funnel_report_rolling3mo_combined_na": ["model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_won", "model.acton_marketing_data.funnel_report_rolling3mo_won"], "model.acton_marketing_data.funnel_report_rolling3mo_closing": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_xf"], "model.acton_marketing_data.funnel_report_current_week_closing": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_xf"], "model.acton_marketing_data.funnel_report_all_time_sqos": ["model.acton_marketing_data.sqo_source_xf"], "model.acton_marketing_data.funnel_report_previous_week_demo": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_xf"], "model.acton_marketing_data.funnel_report_all_time_filters_date": ["model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.funnel_report_all_time_pipeline": ["model.acton_marketing_data.sqo_source_xf"], "model.acton_marketing_data.funnel_report_current_quarter_voc_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_ss_xf"], "model.acton_marketing_data.funnel_report_previous_week_sqos_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_ss_xf"], "model.acton_marketing_data.funnel_report_current_quarter_mqls": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_xf"], "model.acton_marketing_data.funnel_report_rolling3mo_mqls": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_xf"], "model.acton_marketing_data.funnel_report_rolling3mo_conversion_emea": ["model.acton_marketing_data.funnel_report_rolling3mo_combined_emea"], "model.acton_marketing_data.funnel_report_all_time_asp_to_target": ["model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.kpi_targets"], "model.acton_marketing_data.funnel_report_current_week_demo": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_xf"], "model.acton_marketing_data.funnel_report_all_time_intrapipe_to_target": ["model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.kpi_targets"], "model.acton_marketing_data.funnel_report_previous_week_sqls": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf"], "model.acton_marketing_data.funnel_report_current_week_voc_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_ss_xf"], "model.acton_marketing_data.funnel_report_current_week_mqls": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_xf"], "model.acton_marketing_data.funnel_report_current_quarter_demo": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_xf"], "model.acton_marketing_data.funnel_report_all_time_won": ["model.acton_marketing_data.opp_sales_source_xf"], "model.acton_marketing_data.funnel_report_rolling3mo_demo": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_xf"], "model.acton_marketing_data.funnel_report_previous_week_sals": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_xf"], "model.acton_marketing_data.funnel_report_rolling3mo_combined": ["model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_won", "model.acton_marketing_data.funnel_report_rolling3mo_won"], "model.acton_marketing_data.funnel_report_all_time_sal2sql_velocity": ["model.acton_marketing_data.opportunities_with_contacts"], "model.acton_marketing_data.funnel_report_current_quarter_by_week_na_xf": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_xf"], "model.acton_marketing_data.funnel_report_previous_week_closing": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_xf"], "model.acton_marketing_data.funnel_report_current_week_leads": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.funnel_report_all_time_cwpipe_to_target": ["model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.kpi_targets"], "model.acton_marketing_data.funnel_report_rolling3mo_leads": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.funnel_report_all_time_l20_velocity_opp_annual": ["model.acton_marketing_data.opportunities_with_contacts"], "model.acton_marketing_data.funnel_report_current_quarter_leads": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.funnel_report_all_time_sqo2demo_velocity": ["model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_sqos"], "model.acton_marketing_data.funnel_report_all_time_voc": ["model.acton_marketing_data.opp_voc_source_xf"], "model.acton_marketing_data.funnel_report_current_week_closing_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_ss_xf"], "model.acton_marketing_data.funnel_report_previous_week_demo_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_ss_xf"], "model.acton_marketing_data.funnel_report_current_week_won": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_sales_source_xf"], "model.acton_marketing_data.funnel_report_all_time_filters_segment": ["model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.funnel_report_all_time_clos2cw_velocity": ["model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.funnel_report_all_time_sqls_to_target": ["model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.kpi_targets"], "model.acton_marketing_data.funnel_report_current_quarter_won": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_sales_source_xf"], "model.acton_marketing_data.funnel_report_rolling3mo_conversion_na": ["model.acton_marketing_data.funnel_report_rolling3mo_combined_na"], "model.acton_marketing_data.funnel_report_all_time_sals": ["model.acton_marketing_data.sal_source_xf"], "model.acton_marketing_data.funnel_report_all_time_sql2sqo_velocity": ["model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos"], "model.acton_marketing_data.funnel_report_previous_week_lost": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.funnel_report_all_time_l2m_to_target": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.kpi_targets"], "model.acton_marketing_data.funnel_report_previous_week_mqls_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_ss_xf"], "model.acton_marketing_data.funnel_report_all_time_sqls": ["model.acton_marketing_data.sql_source_xf"], "model.acton_marketing_data.funnel_report_current_quarter_closing_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_ss_xf"], "model.acton_marketing_data.funnel_report_rolling3mo_won": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_sales_source_xf"], "model.acton_marketing_data.funnel_report_current_week_sqls_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_ss_xf"], "model.acton_marketing_data.funnel_report_all_time_closing": ["model.acton_marketing_data.opp_closing_source_xf"], "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket": ["model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.funnel_report_all_time_filters_leadsource": ["model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.funnel_report_current_week_voc": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_xf"], "model.acton_marketing_data.funnel_report_previous_week_xf": ["model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_won"], "model.acton_marketing_data.funnel_report_current_week_sals_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_ss_xf"], "model.acton_marketing_data.funnel_report_previous_week_leads_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_source_ss_xf"], "model.acton_marketing_data.funnel_report_all_time_sqo2won_velocity": ["model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev": ["model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.funnel_report_all_time_close_won_velocity": ["model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.funnel_report_rolling3mo_voc": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_xf"], "model.acton_marketing_data.funnel_report_current_quarter_sals_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_ss_xf"], "model.acton_marketing_data.funnel_report_current_week_churn": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.contract_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf"], "model.acton_marketing_data.funnel_report_current_quarter_voc": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_xf"], "model.acton_marketing_data.funnel_report_current_quarter_by_week_ss_xf": ["model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss"], "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea": ["model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_won", "model.acton_marketing_data.funnel_report_rolling3mo_won"], "model.acton_marketing_data.funnel_report_all_time_l20_velocity_mlc": ["model.acton_marketing_data.opportunities_with_contacts"], "model.acton_marketing_data.funnel_report_all_time_m2sql_to_target": ["model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.kpi_targets"], "model.acton_marketing_data.funnel_report_previous_week_sqos": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_xf"], "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_ss_xf"], "model.acton_marketing_data.funnel_report_all_time_voc2closing_velocity": ["model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_voc"], "model.acton_marketing_data.funnel_report_current_week_sqos": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_xf"], "model.acton_marketing_data.funnel_report_all_time_m2sal_velocity": ["model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals"], "model.acton_marketing_data.funnel_report_all_time_filters_globalregion": ["model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.funnel_report_all_time_mqls": ["model.acton_marketing_data.lead_mql_source_xf"], "model.acton_marketing_data.funnel_report_current_quarter_xf": ["model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_won"], "model.acton_marketing_data.funnel_report_all_time_sql2sqo_to_target": ["model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.kpi_targets"], "model.acton_marketing_data.funnel_report_all_time_demo2voc_velocity": ["model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_voc"], "model.acton_marketing_data.funnel_report_current_quarter_leads_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_source_ss_xf"], "model.acton_marketing_data.funnel_report_previous_fy_leads": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_source_xf"], "model.acton_marketing_data.funnel_report_all_time_mqls_to_target": ["model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.kpi_targets"], "model.acton_marketing_data.funnel_report_all_time_l20_velocity_mlc_annual": ["model.acton_marketing_data.opportunities_with_contacts"], "model.acton_marketing_data.funnel_report_rolling3mo_sqos": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_xf"], "model.acton_marketing_data.funnel_report_previous_week_won": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_sales_source_xf"], "model.acton_marketing_data.funnel_report_rolling3mo_conversion": ["model.acton_marketing_data.funnel_report_rolling3mo_combined"], "model.acton_marketing_data.funnel_report_current_week_xf": ["model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_won"], "model.acton_marketing_data.funnel_report_all_time_demo": ["model.acton_marketing_data.opp_demo_source_xf"], "model.acton_marketing_data.funnel_report_current_quarter_conversion": ["model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_sqos"], "model.acton_marketing_data.funnel_report_current_week_leads_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_source_ss_xf"], "model.acton_marketing_data.funnel_report_all_time_close_won_velocity_annual": ["model.acton_marketing_data.opp_sales_source_xf", "model.acton_marketing_data.sql_source_xf"], "model.acton_marketing_data.funnel_report_current_quarter_sqos": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sqo_source_xf"], "model.acton_marketing_data.funnel_report_previous_week_closing_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_closing_source_ss_xf"], "model.acton_marketing_data.funnel_report_previous_week_churn": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.contract_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf"], "model.acton_marketing_data.funnel_report_current_week_demo_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_ss_xf"], "model.acton_marketing_data.funnel_report_current_quarter_lost": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.funnel_report_previous_fy_mqls": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_xf"], "model.acton_marketing_data.funnel_report_all_time_leads_to_target": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.kpi_targets"], "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_ss_xf"], "model.acton_marketing_data.funnel_report_all_time_filters": ["model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.funnel_report_previous_week_sals_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sal_source_ss_xf"], "model.acton_marketing_data.funnel_report_all_time_sqopipe_to_target": ["model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.kpi_targets"], "model.acton_marketing_data.funnel_report_current_week_lost": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.funnel_report_all_time_l2m_velocity": ["model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_mqls"], "model.acton_marketing_data.funnel_report_previous_week_sqls_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_ss_xf"], "model.acton_marketing_data.funnel_report_all_time_all": ["model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_all_time_won"], "model.acton_marketing_data.funnel_report_all_time_conversions": ["model.acton_marketing_data.funnel_report_all_time_all"], "model.acton_marketing_data.funnel_report_current_quarter_by_week_emea_xf": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_xf"], "model.acton_marketing_data.funnel_report_all_time_leads": ["model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.funnel_report_previous_week_voc": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_voc_source_xf"], "model.acton_marketing_data.funnel_report_current_quarter_demo_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_demo_source_ss_xf"], "model.acton_marketing_data.funnel_report_current_week_mqls_ss": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.lead_mql_source_ss_xf"], "model.acton_marketing_data.hr_l12w_type": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.hr_sal_l12w_type": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.hr_lw_type": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.wow_won_l12w_all": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.wow_lost_l12w_all": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.wow_churn_l12w": ["model.acton_marketing_data.contract_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf"], "model.acton_marketing_data.wow_sqo_lw_companysize": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.wow_sqo_l12w_all": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.wow_sqo_lw_attribution": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf"], "model.acton_marketing_data.wow_sqo_l12w_mm": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.wow_sqo_lw": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.wow_sqo_lw_dealsize": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.wow_summary_pw2": ["model.acton_marketing_data.wow_summary_pw"], "model.acton_marketing_data.wow_summary_qtd": ["model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_quarter_won"], "model.acton_marketing_data.wow_summary_lw_na": ["model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_won"], "model.acton_marketing_data.wow_summary_pw_ss_conversion": ["model.acton_marketing_data.wow_summary_pw_ss"], "model.acton_marketing_data.wow_summary_lw_ss_conversion": ["model.acton_marketing_data.wow_summary_lw_ss"], "model.acton_marketing_data.wow_summary_lw2": ["model.acton_marketing_data.wow_summary_lw"], "model.acton_marketing_data.wow_summary_pw_na": ["model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_won"], "model.acton_marketing_data.wow_summary_qtd_emea_conversion": ["model.acton_marketing_data.wow_summary_qtd_emea"], "model.acton_marketing_data.wow_summary_lw_na_ss_conversion": ["model.acton_marketing_data.wow_summary_lw_na_ss"], "model.acton_marketing_data.wow_summary_pw_emea_conversion": ["model.acton_marketing_data.wow_summary_pw_emea"], "model.acton_marketing_data.wow_summary_pw_emea_ss": ["model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_won"], "model.acton_marketing_data.wow_summary_lw": ["model.acton_marketing_data.funnel_report_current_week_churn", "model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_won"], "model.acton_marketing_data.wow_summary_qtd_ss_conversion": ["model.acton_marketing_data.wow_summary_qtd_ss"], "model.acton_marketing_data.wow_summary_lw_emea_conversion": ["model.acton_marketing_data.wow_summary_lw_emea"], "model.acton_marketing_data.wow_summary_conversion_delta": ["model.acton_marketing_data.wow_summary_lw_conversion", "model.acton_marketing_data.wow_summary_pw_conversion"], "model.acton_marketing_data.wow_summary_pw_na_ss_conversion": ["model.acton_marketing_data.wow_summary_pw_na_ss"], "model.acton_marketing_data.wow_summary_lw_emea_ss": ["model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_won"], "model.acton_marketing_data.wow_summary_pw": ["model.acton_marketing_data.funnel_report_previous_week_churn", "model.acton_marketing_data.funnel_report_previous_week_churn", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_won"], "model.acton_marketing_data.wow_summary_qtd_na": ["model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_quarter_won"], "model.acton_marketing_data.wow_summary_pw_na_ss": ["model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_won"], "model.acton_marketing_data.wow_summary_lw_conversion2": ["model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw"], "model.acton_marketing_data.wow_summary_lw_emea": ["model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_won"], "model.acton_marketing_data.wow_summary_pw_na_conversion": ["model.acton_marketing_data.wow_summary_pw_na"], "model.acton_marketing_data.wow_summary_qtd_ss": ["model.acton_marketing_data.funnel_report_current_quarter_closing_ss", "model.acton_marketing_data.funnel_report_current_quarter_closing_ss", "model.acton_marketing_data.funnel_report_current_quarter_demo_ss", "model.acton_marketing_data.funnel_report_current_quarter_demo_ss", "model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqos_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqos_ss", "model.acton_marketing_data.funnel_report_current_quarter_voc_ss", "model.acton_marketing_data.funnel_report_current_quarter_voc_ss", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_quarter_won"], "model.acton_marketing_data.wow_summary_pw_conversion2": ["model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw"], "model.acton_marketing_data.wow_summary_qtd_conversion": ["model.acton_marketing_data.wow_summary_qtd"], "model.acton_marketing_data.wow_summary_pw_emea": ["model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_won"], "model.acton_marketing_data.wow_summary_lw_na_conversion": ["model.acton_marketing_data.wow_summary_lw_na"], "model.acton_marketing_data.wow_summary_lw_na_ss": ["model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_won"], "model.acton_marketing_data.wow_summary_qtd_na_conversion": ["model.acton_marketing_data.wow_summary_qtd_na"], "model.acton_marketing_data.wow_summary_pw_conversion": ["model.acton_marketing_data.wow_summary_pw"], "model.acton_marketing_data.wow_summary_pw_ss": ["model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_won"], "model.acton_marketing_data.wow_summary_lw_emea_ss_conversion": ["model.acton_marketing_data.wow_summary_lw_emea_ss"], "model.acton_marketing_data.wow_summary_qtd_emea": ["model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_quarter_won"], "model.acton_marketing_data.wow_summary_qtd_conversion2": ["model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd"], "model.acton_marketing_data.wow_summary_lw_ss": ["model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_won"], "model.acton_marketing_data.wow_summary_lw_conversion": ["model.acton_marketing_data.wow_summary_lw"], "model.acton_marketing_data.wow_summary_pw_emea_ss_conversion": ["model.acton_marketing_data.wow_summary_pw_emea_ss"], "model.acton_marketing_data.wow_disco_scheduled": ["model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.wow_disco_pastdue": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf"], "model.acton_marketing_data.wow_disco_missing": ["model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.user_source_xf"], "model.acton_marketing_data.wow_last_week_mql_source": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.wow_weektracker": ["model.acton_marketing_data.date_base_xf"], "model.acton_marketing_data.wow_last_12week_mm_lead_source": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.wow_last_week_lead_source": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.wow_last_12week_mm_mql_source": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.wow_lw_sql_attribution": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf"], "model.acton_marketing_data.wow_l12w_mm_sql": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.wow_lw_sql_companysize": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf"], "model.acton_marketing_data.wow_l12w_sql": ["model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.date_base_xf", "model.acton_marketing_data.sql_source_xf"], "model.acton_marketing_data.customer_power_ups": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.campaign_influence_xf", "model.acton_marketing_data.campaign_member_source_xf", "model.acton_marketing_data.campaign_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.person_source_xf"], "model.acton_marketing_data.avg_lead_to_cw_cohort_count": ["model.acton_marketing_data.lead_to_cw_cohort"], "model.acton_marketing_data.avg_lead_to_cw_cohort": ["model.acton_marketing_data.lead_to_cw_cohort"], "model.acton_marketing_data.lead_to_cw_cohort": ["model.acton_marketing_data.opportunities_with_contacts"], "snapshot.acton_marketing_data.sfdc_ao_instance_snapshot2": ["model.acton_marketing_data.ao_instance_source_xf"], "snapshot.acton_marketing_data.sfdc_contact_snapshot3": ["model.acton_marketing_data.contact_source_xf"], "snapshot.acton_marketing_data.sfdc_lead_snapshot2": ["model.acton_marketing_data.lead_source_xf"], "snapshot.acton_marketing_data.sfdc_contract_snapshot2": ["model.acton_marketing_data.contract_source_xf"], "snapshot.acton_marketing_data.sfdc_ao_instance_user_snapshot2": ["model.acton_marketing_data.ao_instance_user_source_xf"], "snapshot.acton_marketing_data.sfdc_account_snapshot4": ["model.acton_marketing_data.account_source_xf"], "snapshot.acton_marketing_data.sfdc_opportunity_snapshot2": ["model.acton_marketing_data.opp_source_xf"], "source.acton_marketing_data.salesforce.account": [], "source.acton_marketing_data.salesforce.act_on_instance_c": [], "source.acton_marketing_data.salesforce.act_on_instance_user_c": [], "source.acton_marketing_data.salesforce.campaign_influence": [], "source.acton_marketing_data.salesforce.campaign_member": [], "source.acton_marketing_data.salesforce.campaign": [], "source.acton_marketing_data.salesforce.contact_history": [], "source.acton_marketing_data.salesforce.contact": [], "source.acton_marketing_data.salesforce.contract": [], "source.acton_marketing_data.salesforce.lead_history": [], "source.acton_marketing_data.salesforce.lead": [], "source.acton_marketing_data.salesforce.opportunity": [], "source.acton_marketing_data.salesforce.opportunity_field_history": [], "source.acton_marketing_data.salesforce.opportunity_line_item": [], "source.acton_marketing_data.salesforce.product_2": [], "source.acton_marketing_data.salesforce.task": [], "source.acton_marketing_data.salesforce.user": [], "source.acton_marketing_data.data_studio_s3.data_studio_emails": [], "source.acton_marketing_data.data_studio_s3.data_studio_forms": [], "source.acton_marketing_data.data_studio_s3.data_studio_landingpages": [], "source.acton_marketing_data.data_studio_s3.data_studio_media": [], "source.acton_marketing_data.data_studio_s3.data_studio_webinars": [], "source.acton_marketing_data.data_studio_s3.data_studio_webpages": [], "source.acton_marketing_data.datastudio1.email_clicks_ao_20220330": []}, "child_map": {"model.acton_marketing_data.sal_source_ss_xf": ["model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss"], "model.acton_marketing_data.sql_source_ss_xf": ["model.acton_marketing_data.funnel_report_current_quarter_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss"], "model.acton_marketing_data.opp_closing_source_xf": ["model.acton_marketing_data.funnel_report_all_time_closing", "model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_rolling3mo_closing"], "model.acton_marketing_data.account_source_xf": ["model.acton_marketing_data.campaign_primary_source", "model.acton_marketing_data.contact_source_xf", "model.acton_marketing_data.customer_power_ups", "model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_week_churn", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_previous_week_churn", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.new_account_welcome_series_list", "model.acton_marketing_data.new_user_welcome_series_list", "model.acton_marketing_data.opp_closing_source_ss_xf", "model.acton_marketing_data.opp_closing_source_xf", "model.acton_marketing_data.opp_demo_source_ss_xf", "model.acton_marketing_data.opp_demo_source_xf", "model.acton_marketing_data.opp_sales_source_xf", "model.acton_marketing_data.opp_voc_source_ss_xf", "model.acton_marketing_data.opp_voc_source_xf", "model.acton_marketing_data.opportunities_with_contacts", "model.acton_marketing_data.sql_source_ss_xf", "model.acton_marketing_data.sql_source_xf", "model.acton_marketing_data.sqo_source_ss_xf", "model.acton_marketing_data.sqo_source_xf", "model.acton_marketing_data.wow_l12w_mm_sql", "model.acton_marketing_data.wow_lost_l12w_all", "model.acton_marketing_data.wow_sqo_l12w_all", "model.acton_marketing_data.wow_sqo_l12w_mm", "model.acton_marketing_data.wow_sqo_lw", "model.acton_marketing_data.wow_sqo_lw_attribution", "model.acton_marketing_data.wow_sqo_lw_companysize", "model.acton_marketing_data.wow_sqo_lw_dealsize", "model.acton_marketing_data.wow_won_l12w_all", "snapshot.acton_marketing_data.sfdc_account_snapshot4"], "model.acton_marketing_data.contact_history_xf": ["model.acton_marketing_data.marketing_lead_creation_date_history_xf", "model.acton_marketing_data.mql_date_history_xf", "model.acton_marketing_data.test", "model.acton_marketing_data.working_date_history_xf"], "model.acton_marketing_data.new_business_acv_influenced_by_opens_FY21_xf": [], "model.acton_marketing_data.opportunities_with_contacts": ["model.acton_marketing_data.funnel_report_all_time_l20_velocity_mlc", "model.acton_marketing_data.funnel_report_all_time_l20_velocity_mlc_annual", "model.acton_marketing_data.funnel_report_all_time_l20_velocity_opp", "model.acton_marketing_data.funnel_report_all_time_l20_velocity_opp_annual", "model.acton_marketing_data.funnel_report_all_time_mql2sql_velocity", "model.acton_marketing_data.funnel_report_all_time_sal2sql_velocity", "model.acton_marketing_data.lead_to_cw_cohort", "model.acton_marketing_data.new_biz_acv_infl_by_opens_FY21", "model.acton_marketing_data.new_business_acv_influenced_by_aps_FY21_xf", "model.acton_marketing_data.new_business_acv_influenced_by_opens_FY21_xf", "model.acton_marketing_data.sqls_influenced_by_email_clicks_xf", "model.acton_marketing_data.sqls_influenced_by_email_opens_xf", "model.acton_marketing_data.sqos_influenced_by_email_clicks_xf", "model.acton_marketing_data.sqos_influenced_by_email_opens_xf"], "model.acton_marketing_data.product_xf": ["model.acton_marketing_data.quote_line"], "model.acton_marketing_data.new_biz_acv_infl_by_opens_FY21": [], "model.acton_marketing_data.lead_history_xf": ["model.acton_marketing_data.marketing_lead_creation_date_history_xf", "model.acton_marketing_data.mql_date_history_xf", "model.acton_marketing_data.test", "model.acton_marketing_data.working_date_history_xf"], "model.acton_marketing_data.sqos_influenced_by_email_opens_xf": [], "model.acton_marketing_data.campaign_member_source_xf": ["model.acton_marketing_data.campaign_primary_source", "model.acton_marketing_data.customer_power_ups"], "model.acton_marketing_data.person_source_xf": ["model.acton_marketing_data.campaign_primary_source", "model.acton_marketing_data.customer_power_ups", "model.acton_marketing_data.funnel_report_all_time_leads", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.hr_l12w_type", "model.acton_marketing_data.hr_lw_type", "model.acton_marketing_data.hr_sal_l12w_type", "model.acton_marketing_data.lead_mql_source_xf", "model.acton_marketing_data.marketo_persons_influenced", "model.acton_marketing_data.qoq_mktg_created_leads_by_attribution", "model.acton_marketing_data.sal_source_xf", "model.acton_marketing_data.wow_last_12week_mm_lead_source", "model.acton_marketing_data.wow_last_12week_mm_mql_source", "model.acton_marketing_data.wow_last_week_lead_source", "model.acton_marketing_data.wow_last_week_mql_source"], "model.acton_marketing_data.user_source_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.contact_source_xf", "model.acton_marketing_data.contact_source_xf", "model.acton_marketing_data.lead_source_xf", "model.acton_marketing_data.new_account_welcome_series_list", "model.acton_marketing_data.new_account_welcome_series_list", "model.acton_marketing_data.new_user_welcome_series_list", "model.acton_marketing_data.new_user_welcome_series_list", "model.acton_marketing_data.opp_closing_source_ss_xf", "model.acton_marketing_data.opp_closing_source_xf", "model.acton_marketing_data.opp_demo_source_ss_xf", "model.acton_marketing_data.opp_demo_source_xf", "model.acton_marketing_data.opp_sales_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.opp_voc_source_ss_xf", "model.acton_marketing_data.opp_voc_source_xf", "model.acton_marketing_data.sqo_source_ss_xf", "model.acton_marketing_data.sqo_source_xf", "model.acton_marketing_data.wow_disco_missing", "model.acton_marketing_data.wow_disco_pastdue"], "model.acton_marketing_data.email_clicks_ao_xf": ["model.acton_marketing_data.new_business_acv_influenced_by_aps_FY21_xf", "model.acton_marketing_data.sqls_influenced_by_email_clicks_xf", "model.acton_marketing_data.sqos_influenced_by_email_clicks_xf"], "model.acton_marketing_data.opp_source_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.campaign_primary_source", "model.acton_marketing_data.customer_power_ups", "model.acton_marketing_data.funnel_report_all_time_lost", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.new_account_welcome_series_list", "model.acton_marketing_data.new_user_welcome_series_list", "model.acton_marketing_data.opp_closing_date_history_xf", "model.acton_marketing_data.opp_closing_source_ss_xf", "model.acton_marketing_data.opp_closing_source_xf", "model.acton_marketing_data.opp_demo_date_history_xf", "model.acton_marketing_data.opp_demo_source_ss_xf", "model.acton_marketing_data.opp_demo_source_xf", "model.acton_marketing_data.opp_discovery_date_history_xf", "model.acton_marketing_data.opp_sales_source_xf", "model.acton_marketing_data.opp_voc_date_history_xf", "model.acton_marketing_data.opp_voc_source_ss_xf", "model.acton_marketing_data.opp_voc_source_xf", "model.acton_marketing_data.opportunities_with_contacts", "model.acton_marketing_data.pipeline_2021_1H_PPC", "model.acton_marketing_data.sql_source_ss_xf", "model.acton_marketing_data.sql_source_xf", "model.acton_marketing_data.sqo_source_ss_xf", "model.acton_marketing_data.sqo_source_xf", "model.acton_marketing_data.wow_disco_missing", "model.acton_marketing_data.wow_disco_pastdue", "model.acton_marketing_data.wow_disco_scheduled", "model.acton_marketing_data.wow_l12w_mm_sql", "model.acton_marketing_data.wow_lost_l12w_all", "model.acton_marketing_data.wow_sqo_l12w_all", "model.acton_marketing_data.wow_sqo_l12w_mm", "model.acton_marketing_data.wow_sqo_lw", "model.acton_marketing_data.wow_sqo_lw_companysize", "model.acton_marketing_data.wow_sqo_lw_dealsize", "model.acton_marketing_data.wow_won_l12w_all", "snapshot.acton_marketing_data.sfdc_opportunity_snapshot2"], "model.acton_marketing_data.lead_mql_source_xf": ["model.acton_marketing_data.funnel_report_all_time_mqls", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_previous_fy_mqls", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_mqls"], "model.acton_marketing_data.opp_voc_source_ss_xf": ["model.acton_marketing_data.funnel_report_current_quarter_voc_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss"], "model.acton_marketing_data.email_opens_ao_xf": ["model.acton_marketing_data.new_biz_acv_infl_by_opens_FY21", "model.acton_marketing_data.new_business_acv_influenced_by_opens_FY21_xf", "model.acton_marketing_data.sqls_influenced_by_email_opens_xf", "model.acton_marketing_data.sqos_influenced_by_email_opens_xf"], "model.acton_marketing_data.lead_source_ss_xf": ["model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.lead_mql_source_ss_xf", "model.acton_marketing_data.sal_source_ss_xf"], "model.acton_marketing_data.sqos_influenced_by_email_clicks_xf": [], "model.acton_marketing_data.task_source_xf": [], "model.acton_marketing_data.sqo_source_xf": ["model.acton_marketing_data.funnel_report_all_time_pipeline", "model.acton_marketing_data.funnel_report_all_time_sqos", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_sqos"], "model.acton_marketing_data.opp_demo_source_xf": ["model.acton_marketing_data.funnel_report_all_time_demo", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_rolling3mo_demo"], "model.acton_marketing_data.opp_sales_source_xf": ["model.acton_marketing_data.funnel_report_all_time_close_won_velocity_annual", "model.acton_marketing_data.funnel_report_all_time_won", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_rolling3mo_won"], "model.acton_marketing_data.opp_voc_source_xf": ["model.acton_marketing_data.funnel_report_all_time_voc", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_rolling3mo_voc"], "model.acton_marketing_data.lead_source_xf": ["model.acton_marketing_data.funnel_report_previous_fy_leads", "model.acton_marketing_data.lead_history_xf", "model.acton_marketing_data.marketing_lead_creation_date_history_xf", "model.acton_marketing_data.mql_date_history_xf", "model.acton_marketing_data.opportunities_with_contacts", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.test", "model.acton_marketing_data.working_date_history_xf", "snapshot.acton_marketing_data.sfdc_lead_snapshot2"], "model.acton_marketing_data.contract_source_xf": ["model.acton_marketing_data.account_source_xf", "model.acton_marketing_data.funnel_report_current_week_churn", "model.acton_marketing_data.funnel_report_previous_week_churn", "model.acton_marketing_data.opp_source_xf", "model.acton_marketing_data.wow_churn_l12w", "snapshot.acton_marketing_data.sfdc_contract_snapshot2"], "model.acton_marketing_data.opportunity_history_xf": ["model.acton_marketing_data.opp_closing_date_history_xf", "model.acton_marketing_data.opp_demo_date_history_xf", "model.acton_marketing_data.opp_discovery_date_history_xf", "model.acton_marketing_data.opp_voc_date_history_xf"], "model.acton_marketing_data.opp_closing_source_ss_xf": ["model.acton_marketing_data.funnel_report_current_quarter_closing_ss", "model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_closing_ss"], "model.acton_marketing_data.ao_instance_user_source_xf": ["model.acton_marketing_data.new_account_welcome_series_list", "model.acton_marketing_data.new_user_welcome_series_list", "snapshot.acton_marketing_data.sfdc_ao_instance_user_snapshot2"], "model.acton_marketing_data.opportunity_line_item_xf": ["model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.sqo_source_ss_xf": ["model.acton_marketing_data.funnel_report_current_quarter_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss"], "model.acton_marketing_data.sqls_influenced_by_email_clicks_xf": [], "model.acton_marketing_data.opp_demo_source_ss_xf": ["model.acton_marketing_data.funnel_report_current_quarter_demo_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss"], "model.acton_marketing_data.quote_line": ["model.acton_marketing_data.opp_source_xf"], "model.acton_marketing_data.new_business_acv_influenced_by_aps_FY21_xf": ["model.acton_marketing_data.marketo_ap_reporting"], "model.acton_marketing_data.date_base_xf": ["model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_closing", "model.acton_marketing_data.funnel_report_current_quarter_closing_ss", "model.acton_marketing_data.funnel_report_current_quarter_closing_ss", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_demo", "model.acton_marketing_data.funnel_report_current_quarter_demo_ss", "model.acton_marketing_data.funnel_report_current_quarter_demo_ss", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_leads", "model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "model.acton_marketing_data.funnel_report_current_quarter_leads_ss", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_lost", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_mqls", "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "model.acton_marketing_data.funnel_report_current_quarter_sals_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_sqos", "model.acton_marketing_data.funnel_report_current_quarter_sqos_ss", "model.acton_marketing_data.funnel_report_current_quarter_sqos_ss", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_voc", "model.acton_marketing_data.funnel_report_current_quarter_voc_ss", "model.acton_marketing_data.funnel_report_current_quarter_voc_ss", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_quarter_won", "model.acton_marketing_data.funnel_report_current_week_churn", "model.acton_marketing_data.funnel_report_current_week_churn", "model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_closing", "model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_closing_ss", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_demo", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_demo_ss", "model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_leads", "model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_leads_ss", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_lost", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_mqls", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sals_ss", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqls_ss", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_sqos", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_sqos_ss", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_voc", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_voc_ss", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_current_week_won", "model.acton_marketing_data.funnel_report_previous_fy_leads", "model.acton_marketing_data.funnel_report_previous_fy_leads", "model.acton_marketing_data.funnel_report_previous_fy_mqls", "model.acton_marketing_data.funnel_report_previous_fy_mqls", "model.acton_marketing_data.funnel_report_previous_week_churn", "model.acton_marketing_data.funnel_report_previous_week_churn", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_closing", "model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_closing_ss", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_demo", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_demo_ss", "model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_leads", "model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_leads_ss", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_lost", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_mqls", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sals_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqls_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_sqos", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_sqos_ss", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_voc", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_voc_ss", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_previous_week_won", "model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_closing", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_demo", "model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_leads", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_mqls", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_sqos", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_voc", "model.acton_marketing_data.funnel_report_rolling3mo_won", "model.acton_marketing_data.funnel_report_rolling3mo_won", "model.acton_marketing_data.hr_l12w_type", "model.acton_marketing_data.hr_l12w_type", "model.acton_marketing_data.hr_lw_type", "model.acton_marketing_data.hr_lw_type", "model.acton_marketing_data.hr_sal_l12w_type", "model.acton_marketing_data.hr_sal_l12w_type", "model.acton_marketing_data.qoq_mktg_created_leads_by_attribution", "model.acton_marketing_data.qoq_mktg_created_leads_by_attribution", "model.acton_marketing_data.topo_closing", "model.acton_marketing_data.topo_demos", "model.acton_marketing_data.topo_leads", "model.acton_marketing_data.topo_lost", "model.acton_marketing_data.topo_mqls", "model.acton_marketing_data.topo_pipe", "model.acton_marketing_data.topo_sals", "model.acton_marketing_data.topo_sqls", "model.acton_marketing_data.topo_sqos", "model.acton_marketing_data.topo_voc", "model.acton_marketing_data.topo_won", "model.acton_marketing_data.topo_won_acv", "model.acton_marketing_data.wow_churn_l12w", "model.acton_marketing_data.wow_churn_l12w", "model.acton_marketing_data.wow_l12w_mm_sql", "model.acton_marketing_data.wow_l12w_mm_sql", "model.acton_marketing_data.wow_l12w_sql", "model.acton_marketing_data.wow_l12w_sql", "model.acton_marketing_data.wow_last_12week_mm_lead_source", "model.acton_marketing_data.wow_last_12week_mm_lead_source", "model.acton_marketing_data.wow_last_12week_mm_mql_source", "model.acton_marketing_data.wow_last_12week_mm_mql_source", "model.acton_marketing_data.wow_last_week_lead_source", "model.acton_marketing_data.wow_last_week_lead_source", "model.acton_marketing_data.wow_last_week_mql_source", "model.acton_marketing_data.wow_last_week_mql_source", "model.acton_marketing_data.wow_lost_l12w_all", "model.acton_marketing_data.wow_lost_l12w_all", "model.acton_marketing_data.wow_lw_sql_attribution", "model.acton_marketing_data.wow_lw_sql_attribution", "model.acton_marketing_data.wow_lw_sql_companysize", "model.acton_marketing_data.wow_lw_sql_companysize", "model.acton_marketing_data.wow_sqo_l12w_all", "model.acton_marketing_data.wow_sqo_l12w_all", "model.acton_marketing_data.wow_sqo_l12w_mm", "model.acton_marketing_data.wow_sqo_l12w_mm", "model.acton_marketing_data.wow_sqo_lw", "model.acton_marketing_data.wow_sqo_lw", "model.acton_marketing_data.wow_sqo_lw_attribution", "model.acton_marketing_data.wow_sqo_lw_attribution", "model.acton_marketing_data.wow_sqo_lw_companysize", "model.acton_marketing_data.wow_sqo_lw_companysize", "model.acton_marketing_data.wow_sqo_lw_dealsize", "model.acton_marketing_data.wow_sqo_lw_dealsize", "model.acton_marketing_data.wow_weektracker", "model.acton_marketing_data.wow_won_l12w_all", "model.acton_marketing_data.wow_won_l12w_all"], "model.acton_marketing_data.campaign_influence_xf": ["model.acton_marketing_data.campaign_primary_source", "model.acton_marketing_data.customer_power_ups"], "model.acton_marketing_data.campaign_source_xf": ["model.acton_marketing_data.campaign_primary_source", "model.acton_marketing_data.customer_power_ups"], "model.acton_marketing_data.sql_source_xf": ["model.acton_marketing_data.funnel_report_all_time_close_won_velocity_annual", "model.acton_marketing_data.funnel_report_all_time_sqls", "model.acton_marketing_data.funnel_report_current_quarter_sqls", "model.acton_marketing_data.funnel_report_current_week_sqls", "model.acton_marketing_data.funnel_report_previous_week_sqls", "model.acton_marketing_data.funnel_report_rolling3mo_sqls", "model.acton_marketing_data.wow_l12w_sql", "model.acton_marketing_data.wow_lw_sql_attribution", "model.acton_marketing_data.wow_lw_sql_companysize"], "model.acton_marketing_data.kpi_targets": ["model.acton_marketing_data.funnel_report_all_time_asp_to_target", "model.acton_marketing_data.funnel_report_all_time_cwpipe_to_target", "model.acton_marketing_data.funnel_report_all_time_intrapipe_to_target", "model.acton_marketing_data.funnel_report_all_time_l2m_to_target", "model.acton_marketing_data.funnel_report_all_time_leads_to_target", "model.acton_marketing_data.funnel_report_all_time_m2sql_to_target", "model.acton_marketing_data.funnel_report_all_time_mqls_to_target", "model.acton_marketing_data.funnel_report_all_time_sql2sqo_to_target", "model.acton_marketing_data.funnel_report_all_time_sqls_to_target", "model.acton_marketing_data.funnel_report_all_time_sqopipe_to_target", "model.acton_marketing_data.funnel_report_all_time_sqos_to_target"], "model.acton_marketing_data.sal_source_xf": ["model.acton_marketing_data.funnel_report_all_time_sals", "model.acton_marketing_data.funnel_report_current_quarter_sals", "model.acton_marketing_data.funnel_report_current_week_sals", "model.acton_marketing_data.funnel_report_previous_week_sals", "model.acton_marketing_data.funnel_report_rolling3mo_sals"], "model.acton_marketing_data.contact_source_xf": ["model.acton_marketing_data.marketing_lead_creation_date_history_xf", "model.acton_marketing_data.mql_date_history_xf", "model.acton_marketing_data.new_account_welcome_series_list", "model.acton_marketing_data.new_user_welcome_series_list", "model.acton_marketing_data.opportunities_with_contacts", "model.acton_marketing_data.person_source_xf", "model.acton_marketing_data.test", "model.acton_marketing_data.working_date_history_xf", "snapshot.acton_marketing_data.sfdc_contact_snapshot3"], "model.acton_marketing_data.lead_mql_source_ss_xf": ["model.acton_marketing_data.funnel_report_current_quarter_mqls_ss", "model.acton_marketing_data.funnel_report_current_week_mqls_ss", "model.acton_marketing_data.funnel_report_previous_week_mqls_ss"], "model.acton_marketing_data.sqls_influenced_by_email_opens_xf": [], "model.acton_marketing_data.ao_instance_source_xf": ["model.acton_marketing_data.ao_instance_user_source_xf", "snapshot.acton_marketing_data.sfdc_ao_instance_snapshot2"], "model.acton_marketing_data.test": [], "model.acton_marketing_data.new_account_welcome_series_list": [], "model.acton_marketing_data.new_user_welcome_series_list": [], "model.acton_marketing_data.topo_leads": ["model.acton_marketing_data.topo_all"], "model.acton_marketing_data.topo_all": [], "model.acton_marketing_data.topo_won_acv": ["model.acton_marketing_data.topo_all"], "model.acton_marketing_data.topo_mqls": ["model.acton_marketing_data.topo_all"], "model.acton_marketing_data.topo_sqls": ["model.acton_marketing_data.topo_all"], "model.acton_marketing_data.topo_sals": ["model.acton_marketing_data.topo_all"], "model.acton_marketing_data.topo_closing": ["model.acton_marketing_data.topo_all"], "model.acton_marketing_data.topo_lost": ["model.acton_marketing_data.topo_all"], "model.acton_marketing_data.topo_sqos": ["model.acton_marketing_data.topo_all"], "model.acton_marketing_data.topo_pipe": ["model.acton_marketing_data.topo_all"], "model.acton_marketing_data.topo_won": ["model.acton_marketing_data.topo_all"], "model.acton_marketing_data.topo_demos": ["model.acton_marketing_data.topo_all"], "model.acton_marketing_data.topo_voc": ["model.acton_marketing_data.topo_all"], "model.acton_marketing_data.marketing_lead_creation_date_history_xf": [], "model.acton_marketing_data.opp_demo_date_history_xf": [], "model.acton_marketing_data.working_date_history_xf": [], "model.acton_marketing_data.opp_closing_date_history_xf": [], "model.acton_marketing_data.mql_date_history_xf": [], "model.acton_marketing_data.opp_discovery_date_history_xf": [], "model.acton_marketing_data.opp_voc_date_history_xf": [], "model.acton_marketing_data.pipeline_2021_1H_PPC": [], "model.acton_marketing_data.qoq_mktg_created_leads_by_attribution": [], "model.acton_marketing_data.marketo_ap_reporting": [], "model.acton_marketing_data.marketo_persons_influenced": [], "model.acton_marketing_data.campaign_primary_source": [], "model.acton_marketing_data.ao_emails": [], "model.acton_marketing_data.ao_webinars": [], "model.acton_marketing_data.ao_forms": [], "model.acton_marketing_data.ao_landingpages": [], "model.acton_marketing_data.ao_combined": [], "model.acton_marketing_data.ao_media": [], "model.acton_marketing_data.ao_webpages": [], "model.acton_marketing_data.funnel_report_previous_week_leads": ["model.acton_marketing_data.funnel_report_previous_week_xf", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_na", "model.acton_marketing_data.wow_summary_pw_na"], "model.acton_marketing_data.funnel_report_current_quarter_sqos_ss": ["model.acton_marketing_data.funnel_report_current_quarter_ss_xf", "model.acton_marketing_data.wow_summary_qtd_ss", "model.acton_marketing_data.wow_summary_qtd_ss"], "model.acton_marketing_data.funnel_report_current_quarter_by_week_pipeline": [], "model.acton_marketing_data.funnel_report_current_quarter_ss_conversion": [], "model.acton_marketing_data.funnel_report_current_week_sals": ["model.acton_marketing_data.funnel_report_current_week_xf", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_na", "model.acton_marketing_data.wow_summary_lw_na"], "model.acton_marketing_data.funnel_report_all_time_filters_industry": [], "model.acton_marketing_data.funnel_report_current_week_ss_xf": [], "model.acton_marketing_data.funnel_report_all_time_mql2sql_velocity": [], "model.acton_marketing_data.funnel_report_current_week_sqls": ["model.acton_marketing_data.funnel_report_current_week_xf", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_na", "model.acton_marketing_data.wow_summary_lw_na"], "model.acton_marketing_data.funnel_report_all_time_l20_velocity_opp": [], "model.acton_marketing_data.funnel_report_current_quarter_sqls": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_xf", "model.acton_marketing_data.funnel_report_current_quarter_by_week_xf", "model.acton_marketing_data.funnel_report_current_quarter_conversion", "model.acton_marketing_data.funnel_report_current_quarter_conversion", "model.acton_marketing_data.funnel_report_current_quarter_xf", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_na", "model.acton_marketing_data.wow_summary_qtd_na"], "model.acton_marketing_data.funnel_report_current_week_sqos_ss": ["model.acton_marketing_data.funnel_report_current_week_ss_xf", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_ss", "model.acton_marketing_data.wow_summary_lw_ss"], "model.acton_marketing_data.funnel_report_rolling3mo_sals": ["model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na"], "model.acton_marketing_data.funnel_report_current_quarter_by_week_xf": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_emea_xf", "model.acton_marketing_data.funnel_report_current_quarter_by_week_na_xf"], "model.acton_marketing_data.funnel_report_current_quarter_ss_xf": ["model.acton_marketing_data.funnel_report_current_quarter_ss_conversion"], "model.acton_marketing_data.funnel_report_all_time_lost": ["model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_filters", "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket", "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev", "model.acton_marketing_data.funnel_report_all_time_filters_date", "model.acton_marketing_data.funnel_report_all_time_filters_globalregion", "model.acton_marketing_data.funnel_report_all_time_filters_industry", "model.acton_marketing_data.funnel_report_all_time_filters_leadsource", "model.acton_marketing_data.funnel_report_all_time_filters_segment", "model.acton_marketing_data.topo_lost"], "model.acton_marketing_data.funnel_report_rolling3mo_sqls": ["model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na"], "model.acton_marketing_data.funnel_report_current_quarter_sals": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_xf", "model.acton_marketing_data.funnel_report_current_quarter_by_week_xf", "model.acton_marketing_data.funnel_report_current_quarter_conversion", "model.acton_marketing_data.funnel_report_current_quarter_conversion", "model.acton_marketing_data.funnel_report_current_quarter_xf", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_na", "model.acton_marketing_data.wow_summary_qtd_na"], "model.acton_marketing_data.funnel_report_previous_week_voc_ss": ["model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_ss", "model.acton_marketing_data.wow_summary_pw_ss"], "model.acton_marketing_data.funnel_report_all_time_sqos_to_target": [], "model.acton_marketing_data.funnel_report_current_quarter_closing": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_pipeline", "model.acton_marketing_data.funnel_report_current_quarter_by_week_pipeline", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_na", "model.acton_marketing_data.wow_summary_qtd_na"], "model.acton_marketing_data.funnel_report_previous_week_mqls": ["model.acton_marketing_data.funnel_report_previous_week_xf", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_na", "model.acton_marketing_data.wow_summary_pw_na"], "model.acton_marketing_data.funnel_report_rolling3mo_combined_na": ["model.acton_marketing_data.funnel_report_rolling3mo_conversion_na"], "model.acton_marketing_data.funnel_report_rolling3mo_closing": ["model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na"], "model.acton_marketing_data.funnel_report_current_week_closing": ["model.acton_marketing_data.funnel_report_current_week_xf", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_na", "model.acton_marketing_data.wow_summary_lw_na"], "model.acton_marketing_data.funnel_report_all_time_sqos": ["model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_asp_to_target", "model.acton_marketing_data.funnel_report_all_time_filters", "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket", "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev", "model.acton_marketing_data.funnel_report_all_time_filters_date", "model.acton_marketing_data.funnel_report_all_time_filters_globalregion", "model.acton_marketing_data.funnel_report_all_time_filters_industry", "model.acton_marketing_data.funnel_report_all_time_filters_leadsource", "model.acton_marketing_data.funnel_report_all_time_filters_segment", "model.acton_marketing_data.funnel_report_all_time_intrapipe_to_target", "model.acton_marketing_data.funnel_report_all_time_sql2sqo_to_target", "model.acton_marketing_data.funnel_report_all_time_sql2sqo_velocity", "model.acton_marketing_data.funnel_report_all_time_sqo2demo_velocity", "model.acton_marketing_data.funnel_report_all_time_sqo2won_velocity", "model.acton_marketing_data.funnel_report_all_time_sqopipe_to_target", "model.acton_marketing_data.funnel_report_all_time_sqos_to_target", "model.acton_marketing_data.topo_pipe", "model.acton_marketing_data.topo_sqos"], "model.acton_marketing_data.funnel_report_previous_week_demo": ["model.acton_marketing_data.funnel_report_previous_week_xf", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_na", "model.acton_marketing_data.wow_summary_pw_na"], "model.acton_marketing_data.funnel_report_all_time_filters_date": [], "model.acton_marketing_data.funnel_report_all_time_pipeline": [], "model.acton_marketing_data.funnel_report_current_quarter_voc_ss": ["model.acton_marketing_data.funnel_report_current_quarter_ss_xf", "model.acton_marketing_data.wow_summary_qtd_ss", "model.acton_marketing_data.wow_summary_qtd_ss"], "model.acton_marketing_data.funnel_report_previous_week_sqos_ss": ["model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_ss", "model.acton_marketing_data.wow_summary_pw_ss"], "model.acton_marketing_data.funnel_report_current_quarter_mqls": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_xf", "model.acton_marketing_data.funnel_report_current_quarter_by_week_xf", "model.acton_marketing_data.funnel_report_current_quarter_conversion", "model.acton_marketing_data.funnel_report_current_quarter_conversion", "model.acton_marketing_data.funnel_report_current_quarter_xf", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_na", "model.acton_marketing_data.wow_summary_qtd_na"], "model.acton_marketing_data.funnel_report_rolling3mo_mqls": ["model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na"], "model.acton_marketing_data.funnel_report_rolling3mo_conversion_emea": [], "model.acton_marketing_data.funnel_report_all_time_asp_to_target": [], "model.acton_marketing_data.funnel_report_current_week_demo": ["model.acton_marketing_data.funnel_report_current_week_xf", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_na", "model.acton_marketing_data.wow_summary_lw_na"], "model.acton_marketing_data.funnel_report_all_time_intrapipe_to_target": [], "model.acton_marketing_data.funnel_report_previous_week_sqls": ["model.acton_marketing_data.funnel_report_previous_week_xf", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_na", "model.acton_marketing_data.wow_summary_pw_na"], "model.acton_marketing_data.funnel_report_current_week_voc_ss": ["model.acton_marketing_data.funnel_report_current_week_ss_xf", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_ss", "model.acton_marketing_data.wow_summary_lw_ss"], "model.acton_marketing_data.funnel_report_current_week_mqls": ["model.acton_marketing_data.funnel_report_current_week_xf", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_na", "model.acton_marketing_data.wow_summary_lw_na"], "model.acton_marketing_data.funnel_report_current_quarter_demo": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_pipeline", "model.acton_marketing_data.funnel_report_current_quarter_by_week_pipeline", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_na", "model.acton_marketing_data.wow_summary_qtd_na"], "model.acton_marketing_data.funnel_report_all_time_won": ["model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_clos2cw_velocity", "model.acton_marketing_data.funnel_report_all_time_close_won_velocity", "model.acton_marketing_data.funnel_report_all_time_cwpipe_to_target", "model.acton_marketing_data.funnel_report_all_time_filters", "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket", "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev", "model.acton_marketing_data.funnel_report_all_time_filters_date", "model.acton_marketing_data.funnel_report_all_time_filters_globalregion", "model.acton_marketing_data.funnel_report_all_time_filters_industry", "model.acton_marketing_data.funnel_report_all_time_filters_leadsource", "model.acton_marketing_data.funnel_report_all_time_filters_segment", "model.acton_marketing_data.funnel_report_all_time_sqo2won_velocity", "model.acton_marketing_data.topo_won", "model.acton_marketing_data.topo_won_acv"], "model.acton_marketing_data.funnel_report_rolling3mo_demo": ["model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na"], "model.acton_marketing_data.funnel_report_previous_week_sals": ["model.acton_marketing_data.funnel_report_previous_week_xf", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_na", "model.acton_marketing_data.wow_summary_pw_na"], "model.acton_marketing_data.funnel_report_rolling3mo_combined": ["model.acton_marketing_data.funnel_report_rolling3mo_conversion"], "model.acton_marketing_data.funnel_report_all_time_sal2sql_velocity": [], "model.acton_marketing_data.funnel_report_current_quarter_by_week_na_xf": [], "model.acton_marketing_data.funnel_report_previous_week_closing": ["model.acton_marketing_data.funnel_report_previous_week_xf", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_na", "model.acton_marketing_data.wow_summary_pw_na"], "model.acton_marketing_data.funnel_report_current_week_leads": ["model.acton_marketing_data.funnel_report_current_week_xf", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_na", "model.acton_marketing_data.wow_summary_lw_na"], "model.acton_marketing_data.funnel_report_all_time_cwpipe_to_target": [], "model.acton_marketing_data.funnel_report_rolling3mo_leads": ["model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na"], "model.acton_marketing_data.funnel_report_all_time_l20_velocity_opp_annual": [], "model.acton_marketing_data.funnel_report_current_quarter_leads": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_xf", "model.acton_marketing_data.funnel_report_current_quarter_by_week_xf", "model.acton_marketing_data.funnel_report_current_quarter_conversion", "model.acton_marketing_data.funnel_report_current_quarter_conversion", "model.acton_marketing_data.funnel_report_current_quarter_xf", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_na", "model.acton_marketing_data.wow_summary_qtd_na"], "model.acton_marketing_data.funnel_report_all_time_sqo2demo_velocity": [], "model.acton_marketing_data.funnel_report_all_time_voc": ["model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_demo2voc_velocity", "model.acton_marketing_data.funnel_report_all_time_filters", "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket", "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev", "model.acton_marketing_data.funnel_report_all_time_filters_date", "model.acton_marketing_data.funnel_report_all_time_filters_globalregion", "model.acton_marketing_data.funnel_report_all_time_filters_industry", "model.acton_marketing_data.funnel_report_all_time_filters_leadsource", "model.acton_marketing_data.funnel_report_all_time_filters_segment", "model.acton_marketing_data.funnel_report_all_time_voc2closing_velocity", "model.acton_marketing_data.topo_voc"], "model.acton_marketing_data.funnel_report_current_week_closing_ss": ["model.acton_marketing_data.funnel_report_current_week_ss_xf", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_ss", "model.acton_marketing_data.wow_summary_lw_ss"], "model.acton_marketing_data.funnel_report_previous_week_demo_ss": ["model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_ss", "model.acton_marketing_data.wow_summary_pw_ss"], "model.acton_marketing_data.funnel_report_current_week_won": ["model.acton_marketing_data.funnel_report_current_week_ss_xf", "model.acton_marketing_data.funnel_report_current_week_xf", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_na", "model.acton_marketing_data.wow_summary_lw_na", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_ss", "model.acton_marketing_data.wow_summary_lw_ss"], "model.acton_marketing_data.funnel_report_all_time_filters_segment": [], "model.acton_marketing_data.funnel_report_all_time_clos2cw_velocity": [], "model.acton_marketing_data.funnel_report_all_time_sqls_to_target": [], "model.acton_marketing_data.funnel_report_current_quarter_won": ["model.acton_marketing_data.funnel_report_current_quarter_ss_xf", "model.acton_marketing_data.funnel_report_current_quarter_xf", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_na", "model.acton_marketing_data.wow_summary_qtd_na", "model.acton_marketing_data.wow_summary_qtd_ss", "model.acton_marketing_data.wow_summary_qtd_ss"], "model.acton_marketing_data.funnel_report_rolling3mo_conversion_na": [], "model.acton_marketing_data.funnel_report_all_time_sals": ["model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_filters", "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket", "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev", "model.acton_marketing_data.funnel_report_all_time_filters_date", "model.acton_marketing_data.funnel_report_all_time_filters_globalregion", "model.acton_marketing_data.funnel_report_all_time_filters_industry", "model.acton_marketing_data.funnel_report_all_time_filters_leadsource", "model.acton_marketing_data.funnel_report_all_time_filters_segment", "model.acton_marketing_data.funnel_report_all_time_m2sal_velocity", "model.acton_marketing_data.topo_sals"], "model.acton_marketing_data.funnel_report_all_time_sql2sqo_velocity": [], "model.acton_marketing_data.funnel_report_previous_week_lost": ["model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_na", "model.acton_marketing_data.wow_summary_pw_na", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_ss", "model.acton_marketing_data.wow_summary_pw_ss"], "model.acton_marketing_data.funnel_report_all_time_l2m_to_target": [], "model.acton_marketing_data.funnel_report_previous_week_mqls_ss": ["model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_ss", "model.acton_marketing_data.wow_summary_pw_ss"], "model.acton_marketing_data.funnel_report_all_time_sqls": ["model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_close_won_velocity", "model.acton_marketing_data.funnel_report_all_time_filters", "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket", "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev", "model.acton_marketing_data.funnel_report_all_time_filters_date", "model.acton_marketing_data.funnel_report_all_time_filters_globalregion", "model.acton_marketing_data.funnel_report_all_time_filters_industry", "model.acton_marketing_data.funnel_report_all_time_filters_leadsource", "model.acton_marketing_data.funnel_report_all_time_filters_segment", "model.acton_marketing_data.funnel_report_all_time_m2sql_to_target", "model.acton_marketing_data.funnel_report_all_time_sql2sqo_to_target", "model.acton_marketing_data.funnel_report_all_time_sql2sqo_velocity", "model.acton_marketing_data.funnel_report_all_time_sqls_to_target", "model.acton_marketing_data.topo_sqls"], "model.acton_marketing_data.funnel_report_current_quarter_closing_ss": ["model.acton_marketing_data.funnel_report_current_quarter_ss_xf", "model.acton_marketing_data.wow_summary_qtd_ss", "model.acton_marketing_data.wow_summary_qtd_ss"], "model.acton_marketing_data.funnel_report_rolling3mo_won": ["model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na"], "model.acton_marketing_data.funnel_report_current_week_sqls_ss": ["model.acton_marketing_data.funnel_report_current_week_ss_xf", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_ss", "model.acton_marketing_data.wow_summary_lw_ss"], "model.acton_marketing_data.funnel_report_all_time_closing": ["model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_clos2cw_velocity", "model.acton_marketing_data.funnel_report_all_time_filters", "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket", "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev", "model.acton_marketing_data.funnel_report_all_time_filters_date", "model.acton_marketing_data.funnel_report_all_time_filters_globalregion", "model.acton_marketing_data.funnel_report_all_time_filters_industry", "model.acton_marketing_data.funnel_report_all_time_filters_leadsource", "model.acton_marketing_data.funnel_report_all_time_filters_segment", "model.acton_marketing_data.funnel_report_all_time_voc2closing_velocity", "model.acton_marketing_data.topo_closing"], "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket": [], "model.acton_marketing_data.funnel_report_all_time_filters_leadsource": [], "model.acton_marketing_data.funnel_report_current_week_voc": ["model.acton_marketing_data.funnel_report_current_week_xf", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_na", "model.acton_marketing_data.wow_summary_lw_na"], "model.acton_marketing_data.funnel_report_previous_week_xf": [], "model.acton_marketing_data.funnel_report_current_week_sals_ss": ["model.acton_marketing_data.funnel_report_current_week_ss_xf", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_ss", "model.acton_marketing_data.wow_summary_lw_ss"], "model.acton_marketing_data.funnel_report_previous_week_leads_ss": ["model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_ss", "model.acton_marketing_data.wow_summary_pw_ss"], "model.acton_marketing_data.funnel_report_all_time_sqo2won_velocity": [], "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev": [], "model.acton_marketing_data.funnel_report_all_time_close_won_velocity": [], "model.acton_marketing_data.funnel_report_rolling3mo_voc": ["model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na"], "model.acton_marketing_data.funnel_report_current_quarter_sals_ss": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_ss_xf", "model.acton_marketing_data.funnel_report_current_quarter_by_week_ss_xf", "model.acton_marketing_data.funnel_report_current_quarter_ss_xf", "model.acton_marketing_data.wow_summary_qtd_ss", "model.acton_marketing_data.wow_summary_qtd_ss"], "model.acton_marketing_data.funnel_report_current_week_churn": ["model.acton_marketing_data.wow_summary_lw"], "model.acton_marketing_data.funnel_report_current_quarter_voc": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_pipeline", "model.acton_marketing_data.funnel_report_current_quarter_by_week_pipeline", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_na", "model.acton_marketing_data.wow_summary_qtd_na"], "model.acton_marketing_data.funnel_report_current_quarter_by_week_ss_xf": [], "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea": ["model.acton_marketing_data.funnel_report_rolling3mo_conversion_emea"], "model.acton_marketing_data.funnel_report_all_time_l20_velocity_mlc": [], "model.acton_marketing_data.funnel_report_all_time_m2sql_to_target": [], "model.acton_marketing_data.funnel_report_previous_week_sqos": ["model.acton_marketing_data.funnel_report_previous_week_xf", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_na", "model.acton_marketing_data.wow_summary_pw_na"], "model.acton_marketing_data.funnel_report_current_quarter_sqls_ss": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_ss_xf", "model.acton_marketing_data.funnel_report_current_quarter_by_week_ss_xf", "model.acton_marketing_data.funnel_report_current_quarter_ss_xf", "model.acton_marketing_data.wow_summary_qtd_ss", "model.acton_marketing_data.wow_summary_qtd_ss"], "model.acton_marketing_data.funnel_report_all_time_voc2closing_velocity": [], "model.acton_marketing_data.funnel_report_current_week_sqos": ["model.acton_marketing_data.funnel_report_current_week_xf", "model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_na", "model.acton_marketing_data.wow_summary_lw_na"], "model.acton_marketing_data.funnel_report_all_time_m2sal_velocity": [], "model.acton_marketing_data.funnel_report_all_time_filters_globalregion": [], "model.acton_marketing_data.funnel_report_all_time_mqls": ["model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_filters", "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket", "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev", "model.acton_marketing_data.funnel_report_all_time_filters_date", "model.acton_marketing_data.funnel_report_all_time_filters_globalregion", "model.acton_marketing_data.funnel_report_all_time_filters_industry", "model.acton_marketing_data.funnel_report_all_time_filters_leadsource", "model.acton_marketing_data.funnel_report_all_time_filters_segment", "model.acton_marketing_data.funnel_report_all_time_l2m_to_target", "model.acton_marketing_data.funnel_report_all_time_l2m_velocity", "model.acton_marketing_data.funnel_report_all_time_m2sal_velocity", "model.acton_marketing_data.funnel_report_all_time_m2sql_to_target", "model.acton_marketing_data.funnel_report_all_time_mqls_to_target", "model.acton_marketing_data.topo_mqls"], "model.acton_marketing_data.funnel_report_current_quarter_xf": [], "model.acton_marketing_data.funnel_report_all_time_sql2sqo_to_target": [], "model.acton_marketing_data.funnel_report_all_time_demo2voc_velocity": [], "model.acton_marketing_data.funnel_report_current_quarter_leads_ss": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_ss_xf", "model.acton_marketing_data.funnel_report_current_quarter_by_week_ss_xf", "model.acton_marketing_data.funnel_report_current_quarter_ss_xf", "model.acton_marketing_data.wow_summary_qtd_ss", "model.acton_marketing_data.wow_summary_qtd_ss"], "model.acton_marketing_data.funnel_report_previous_fy_leads": [], "model.acton_marketing_data.funnel_report_all_time_mqls_to_target": [], "model.acton_marketing_data.funnel_report_all_time_l20_velocity_mlc_annual": [], "model.acton_marketing_data.funnel_report_rolling3mo_sqos": ["model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_emea", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na", "model.acton_marketing_data.funnel_report_rolling3mo_combined_na"], "model.acton_marketing_data.funnel_report_previous_week_won": ["model.acton_marketing_data.funnel_report_previous_week_xf", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_na", "model.acton_marketing_data.wow_summary_pw_na", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_ss", "model.acton_marketing_data.wow_summary_pw_ss"], "model.acton_marketing_data.funnel_report_rolling3mo_conversion": [], "model.acton_marketing_data.funnel_report_current_week_xf": [], "model.acton_marketing_data.funnel_report_all_time_demo": ["model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_demo2voc_velocity", "model.acton_marketing_data.funnel_report_all_time_filters", "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket", "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev", "model.acton_marketing_data.funnel_report_all_time_filters_date", "model.acton_marketing_data.funnel_report_all_time_filters_globalregion", "model.acton_marketing_data.funnel_report_all_time_filters_industry", "model.acton_marketing_data.funnel_report_all_time_filters_leadsource", "model.acton_marketing_data.funnel_report_all_time_filters_segment", "model.acton_marketing_data.funnel_report_all_time_sqo2demo_velocity", "model.acton_marketing_data.topo_demos"], "model.acton_marketing_data.funnel_report_current_quarter_conversion": [], "model.acton_marketing_data.funnel_report_current_week_leads_ss": ["model.acton_marketing_data.funnel_report_current_week_ss_xf", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_ss", "model.acton_marketing_data.wow_summary_lw_ss"], "model.acton_marketing_data.funnel_report_all_time_close_won_velocity_annual": [], "model.acton_marketing_data.funnel_report_current_quarter_sqos": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_pipeline", "model.acton_marketing_data.funnel_report_current_quarter_by_week_pipeline", "model.acton_marketing_data.funnel_report_current_quarter_by_week_xf", "model.acton_marketing_data.funnel_report_current_quarter_by_week_xf", "model.acton_marketing_data.funnel_report_current_quarter_conversion", "model.acton_marketing_data.funnel_report_current_quarter_conversion", "model.acton_marketing_data.funnel_report_current_quarter_xf", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_na", "model.acton_marketing_data.wow_summary_qtd_na"], "model.acton_marketing_data.funnel_report_previous_week_closing_ss": ["model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_ss", "model.acton_marketing_data.wow_summary_pw_ss"], "model.acton_marketing_data.funnel_report_previous_week_churn": ["model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw"], "model.acton_marketing_data.funnel_report_current_week_demo_ss": ["model.acton_marketing_data.funnel_report_current_week_ss_xf", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_ss", "model.acton_marketing_data.wow_summary_lw_ss"], "model.acton_marketing_data.funnel_report_current_quarter_lost": ["model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_emea", "model.acton_marketing_data.wow_summary_qtd_na", "model.acton_marketing_data.wow_summary_qtd_na", "model.acton_marketing_data.wow_summary_qtd_ss", "model.acton_marketing_data.wow_summary_qtd_ss"], "model.acton_marketing_data.funnel_report_previous_fy_mqls": [], "model.acton_marketing_data.funnel_report_all_time_leads_to_target": [], "model.acton_marketing_data.funnel_report_current_quarter_mqls_ss": ["model.acton_marketing_data.funnel_report_current_quarter_by_week_ss_xf", "model.acton_marketing_data.funnel_report_current_quarter_by_week_ss_xf", "model.acton_marketing_data.funnel_report_current_quarter_ss_xf", "model.acton_marketing_data.wow_summary_qtd_ss", "model.acton_marketing_data.wow_summary_qtd_ss"], "model.acton_marketing_data.funnel_report_all_time_filters": [], "model.acton_marketing_data.funnel_report_previous_week_sals_ss": ["model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_ss", "model.acton_marketing_data.wow_summary_pw_ss"], "model.acton_marketing_data.funnel_report_all_time_sqopipe_to_target": [], "model.acton_marketing_data.funnel_report_current_week_lost": ["model.acton_marketing_data.wow_summary_lw", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_emea", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_na", "model.acton_marketing_data.wow_summary_lw_na", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_ss", "model.acton_marketing_data.wow_summary_lw_ss"], "model.acton_marketing_data.funnel_report_all_time_l2m_velocity": [], "model.acton_marketing_data.funnel_report_previous_week_sqls_ss": ["model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_emea_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_na_ss", "model.acton_marketing_data.wow_summary_pw_ss", "model.acton_marketing_data.wow_summary_pw_ss"], "model.acton_marketing_data.funnel_report_all_time_all": ["model.acton_marketing_data.funnel_report_all_time_conversions"], "model.acton_marketing_data.funnel_report_all_time_conversions": [], "model.acton_marketing_data.funnel_report_current_quarter_by_week_emea_xf": [], "model.acton_marketing_data.funnel_report_all_time_leads": ["model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_all", "model.acton_marketing_data.funnel_report_all_time_filters", "model.acton_marketing_data.funnel_report_all_time_filters_channelbucket", "model.acton_marketing_data.funnel_report_all_time_filters_companysizerev", "model.acton_marketing_data.funnel_report_all_time_filters_date", "model.acton_marketing_data.funnel_report_all_time_filters_globalregion", "model.acton_marketing_data.funnel_report_all_time_filters_industry", "model.acton_marketing_data.funnel_report_all_time_filters_leadsource", "model.acton_marketing_data.funnel_report_all_time_filters_segment", "model.acton_marketing_data.funnel_report_all_time_l2m_to_target", "model.acton_marketing_data.funnel_report_all_time_l2m_velocity", "model.acton_marketing_data.funnel_report_all_time_leads_to_target", "model.acton_marketing_data.topo_leads"], "model.acton_marketing_data.funnel_report_previous_week_voc": ["model.acton_marketing_data.funnel_report_previous_week_xf", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_emea", "model.acton_marketing_data.wow_summary_pw_na", "model.acton_marketing_data.wow_summary_pw_na"], "model.acton_marketing_data.funnel_report_current_quarter_demo_ss": ["model.acton_marketing_data.funnel_report_current_quarter_ss_xf", "model.acton_marketing_data.wow_summary_qtd_ss", "model.acton_marketing_data.wow_summary_qtd_ss"], "model.acton_marketing_data.funnel_report_current_week_mqls_ss": ["model.acton_marketing_data.funnel_report_current_week_ss_xf", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_emea_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_na_ss", "model.acton_marketing_data.wow_summary_lw_ss", "model.acton_marketing_data.wow_summary_lw_ss"], "model.acton_marketing_data.hr_l12w_type": [], "model.acton_marketing_data.hr_sal_l12w_type": [], "model.acton_marketing_data.hr_lw_type": [], "model.acton_marketing_data.wow_won_l12w_all": [], "model.acton_marketing_data.wow_lost_l12w_all": [], "model.acton_marketing_data.wow_churn_l12w": [], "model.acton_marketing_data.wow_sqo_lw_companysize": [], "model.acton_marketing_data.wow_sqo_l12w_all": [], "model.acton_marketing_data.wow_sqo_lw_attribution": [], "model.acton_marketing_data.wow_sqo_l12w_mm": [], "model.acton_marketing_data.wow_sqo_lw": [], "model.acton_marketing_data.wow_sqo_lw_dealsize": [], "model.acton_marketing_data.wow_summary_pw2": [], "model.acton_marketing_data.wow_summary_qtd": ["model.acton_marketing_data.wow_summary_qtd_conversion", "model.acton_marketing_data.wow_summary_qtd_conversion2", "model.acton_marketing_data.wow_summary_qtd_conversion2", "model.acton_marketing_data.wow_summary_qtd_conversion2", "model.acton_marketing_data.wow_summary_qtd_conversion2", "model.acton_marketing_data.wow_summary_qtd_conversion2"], "model.acton_marketing_data.wow_summary_lw_na": ["model.acton_marketing_data.wow_summary_lw_na_conversion"], "model.acton_marketing_data.wow_summary_pw_ss_conversion": [], "model.acton_marketing_data.wow_summary_lw_ss_conversion": [], "model.acton_marketing_data.wow_summary_lw2": [], "model.acton_marketing_data.wow_summary_pw_na": ["model.acton_marketing_data.wow_summary_pw_na_conversion"], "model.acton_marketing_data.wow_summary_qtd_emea_conversion": [], "model.acton_marketing_data.wow_summary_lw_na_ss_conversion": [], "model.acton_marketing_data.wow_summary_pw_emea_conversion": [], "model.acton_marketing_data.wow_summary_pw_emea_ss": ["model.acton_marketing_data.wow_summary_pw_emea_ss_conversion"], "model.acton_marketing_data.wow_summary_lw": ["model.acton_marketing_data.wow_summary_lw2", "model.acton_marketing_data.wow_summary_lw_conversion", "model.acton_marketing_data.wow_summary_lw_conversion2", "model.acton_marketing_data.wow_summary_lw_conversion2", "model.acton_marketing_data.wow_summary_lw_conversion2", "model.acton_marketing_data.wow_summary_lw_conversion2", "model.acton_marketing_data.wow_summary_lw_conversion2", "model.acton_marketing_data.wow_summary_lw_conversion2", "model.acton_marketing_data.wow_summary_lw_conversion2", "model.acton_marketing_data.wow_summary_lw_conversion2", "model.acton_marketing_data.wow_summary_lw_conversion2", "model.acton_marketing_data.wow_summary_lw_conversion2"], "model.acton_marketing_data.wow_summary_qtd_ss_conversion": [], "model.acton_marketing_data.wow_summary_lw_emea_conversion": [], "model.acton_marketing_data.wow_summary_conversion_delta": [], "model.acton_marketing_data.wow_summary_pw_na_ss_conversion": [], "model.acton_marketing_data.wow_summary_lw_emea_ss": ["model.acton_marketing_data.wow_summary_lw_emea_ss_conversion"], "model.acton_marketing_data.wow_summary_pw": ["model.acton_marketing_data.wow_summary_pw2", "model.acton_marketing_data.wow_summary_pw_conversion", "model.acton_marketing_data.wow_summary_pw_conversion2", "model.acton_marketing_data.wow_summary_pw_conversion2", "model.acton_marketing_data.wow_summary_pw_conversion2", "model.acton_marketing_data.wow_summary_pw_conversion2", "model.acton_marketing_data.wow_summary_pw_conversion2", "model.acton_marketing_data.wow_summary_pw_conversion2", "model.acton_marketing_data.wow_summary_pw_conversion2", "model.acton_marketing_data.wow_summary_pw_conversion2", "model.acton_marketing_data.wow_summary_pw_conversion2", "model.acton_marketing_data.wow_summary_pw_conversion2"], "model.acton_marketing_data.wow_summary_qtd_na": ["model.acton_marketing_data.wow_summary_qtd_na_conversion"], "model.acton_marketing_data.wow_summary_pw_na_ss": ["model.acton_marketing_data.wow_summary_pw_na_ss_conversion"], "model.acton_marketing_data.wow_summary_lw_conversion2": [], "model.acton_marketing_data.wow_summary_lw_emea": ["model.acton_marketing_data.wow_summary_lw_emea_conversion"], "model.acton_marketing_data.wow_summary_pw_na_conversion": [], "model.acton_marketing_data.wow_summary_qtd_ss": ["model.acton_marketing_data.wow_summary_qtd_ss_conversion"], "model.acton_marketing_data.wow_summary_pw_conversion2": [], "model.acton_marketing_data.wow_summary_qtd_conversion": [], "model.acton_marketing_data.wow_summary_pw_emea": ["model.acton_marketing_data.wow_summary_pw_emea_conversion"], "model.acton_marketing_data.wow_summary_lw_na_conversion": [], "model.acton_marketing_data.wow_summary_lw_na_ss": ["model.acton_marketing_data.wow_summary_lw_na_ss_conversion"], "model.acton_marketing_data.wow_summary_qtd_na_conversion": [], "model.acton_marketing_data.wow_summary_pw_conversion": ["model.acton_marketing_data.wow_summary_conversion_delta"], "model.acton_marketing_data.wow_summary_pw_ss": ["model.acton_marketing_data.wow_summary_pw_ss_conversion"], "model.acton_marketing_data.wow_summary_lw_emea_ss_conversion": [], "model.acton_marketing_data.wow_summary_qtd_emea": ["model.acton_marketing_data.wow_summary_qtd_emea_conversion"], "model.acton_marketing_data.wow_summary_qtd_conversion2": [], "model.acton_marketing_data.wow_summary_lw_ss": ["model.acton_marketing_data.wow_summary_lw_ss_conversion"], "model.acton_marketing_data.wow_summary_lw_conversion": ["model.acton_marketing_data.wow_summary_conversion_delta"], "model.acton_marketing_data.wow_summary_pw_emea_ss_conversion": [], "model.acton_marketing_data.wow_disco_scheduled": [], "model.acton_marketing_data.wow_disco_pastdue": [], "model.acton_marketing_data.wow_disco_missing": [], "model.acton_marketing_data.wow_last_week_mql_source": [], "model.acton_marketing_data.wow_weektracker": [], "model.acton_marketing_data.wow_last_12week_mm_lead_source": [], "model.acton_marketing_data.wow_last_week_lead_source": [], "model.acton_marketing_data.wow_last_12week_mm_mql_source": [], "model.acton_marketing_data.wow_lw_sql_attribution": [], "model.acton_marketing_data.wow_l12w_mm_sql": [], "model.acton_marketing_data.wow_lw_sql_companysize": [], "model.acton_marketing_data.wow_l12w_sql": [], "model.acton_marketing_data.customer_power_ups": [], "model.acton_marketing_data.avg_lead_to_cw_cohort_count": [], "model.acton_marketing_data.avg_lead_to_cw_cohort": [], "model.acton_marketing_data.lead_to_cw_cohort": ["model.acton_marketing_data.avg_lead_to_cw_cohort", "model.acton_marketing_data.avg_lead_to_cw_cohort_count"], "snapshot.acton_marketing_data.sfdc_ao_instance_snapshot2": [], "snapshot.acton_marketing_data.sfdc_contact_snapshot3": [], "snapshot.acton_marketing_data.sfdc_lead_snapshot2": [], "snapshot.acton_marketing_data.sfdc_contract_snapshot2": [], "snapshot.acton_marketing_data.sfdc_ao_instance_user_snapshot2": [], "snapshot.acton_marketing_data.sfdc_account_snapshot4": [], "snapshot.acton_marketing_data.sfdc_opportunity_snapshot2": [], "source.acton_marketing_data.salesforce.account": ["model.acton_marketing_data.account_source_xf"], "source.acton_marketing_data.salesforce.act_on_instance_c": ["model.acton_marketing_data.ao_instance_source_xf"], "source.acton_marketing_data.salesforce.act_on_instance_user_c": ["model.acton_marketing_data.ao_instance_user_source_xf"], "source.acton_marketing_data.salesforce.campaign_influence": ["model.acton_marketing_data.campaign_influence_xf"], "source.acton_marketing_data.salesforce.campaign_member": ["model.acton_marketing_data.campaign_member_source_xf"], "source.acton_marketing_data.salesforce.campaign": ["model.acton_marketing_data.campaign_source_xf"], "source.acton_marketing_data.salesforce.contact_history": ["model.acton_marketing_data.contact_history_xf"], "source.acton_marketing_data.salesforce.contact": ["model.acton_marketing_data.contact_source_xf"], "source.acton_marketing_data.salesforce.contract": ["model.acton_marketing_data.contract_source_xf"], "source.acton_marketing_data.salesforce.lead_history": ["model.acton_marketing_data.lead_history_xf"], "source.acton_marketing_data.salesforce.lead": ["model.acton_marketing_data.lead_source_xf"], "source.acton_marketing_data.salesforce.opportunity": ["model.acton_marketing_data.opp_source_xf"], "source.acton_marketing_data.salesforce.opportunity_field_history": ["model.acton_marketing_data.opportunity_history_xf"], "source.acton_marketing_data.salesforce.opportunity_line_item": ["model.acton_marketing_data.opportunity_line_item_xf"], "source.acton_marketing_data.salesforce.product_2": ["model.acton_marketing_data.product_xf"], "source.acton_marketing_data.salesforce.task": ["model.acton_marketing_data.task_source_xf"], "source.acton_marketing_data.salesforce.user": ["model.acton_marketing_data.user_source_xf"], "source.acton_marketing_data.data_studio_s3.data_studio_emails": ["model.acton_marketing_data.ao_emails"], "source.acton_marketing_data.data_studio_s3.data_studio_forms": ["model.acton_marketing_data.ao_forms"], "source.acton_marketing_data.data_studio_s3.data_studio_landingpages": ["model.acton_marketing_data.ao_landingpages"], "source.acton_marketing_data.data_studio_s3.data_studio_media": ["model.acton_marketing_data.ao_media"], "source.acton_marketing_data.data_studio_s3.data_studio_webinars": ["model.acton_marketing_data.ao_webinars"], "source.acton_marketing_data.data_studio_s3.data_studio_webpages": ["model.acton_marketing_data.ao_webpages"], "source.acton_marketing_data.datastudio1.email_clicks_ao_20220330": []}}